{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Home","text":"<p>These pages describe my projects.</p> <p>Any questions can be sent to simonjo@telenet.be and I will help you as soon as possible,</p>"},{"location":"Downloads/","title":"Downloads","text":"<p>Here you find the recent downloads of my projects.</p>"},{"location":"Downloads/#esp32","title":"ESP32","text":"<ul> <li>Phc2Mqtt v4.2.0.f for ESP32 WROVER 4Mb/8Mb (partition v2)</li> <li>Phc2Mqtt v4.2.2.7 for ESP32 WROVER 4Mb/8Mb (partition v3)</li> <li>Phc2Mqtt v4.3.0.4 for ESP32 WROVER 4Mb/8Mb (partition v3)    Introduced ActiveSTMv3 mode    Changed commands: <pre><code>wait.&lt;1-65535ms&gt; -&gt; stm.wait.&lt;1-65535ms&gt;  \n</code></pre>    Added commands: <pre><code>stmd.state\nstmd.mods\nstmd.evts\n</code></pre></li> </ul>"},{"location":"Downloads/#windows","title":"Windows","text":""},{"location":"Downloads/#linux","title":"Linux","text":""},{"location":"P2mGerbers/","title":"P2mGerbers","text":""},{"location":"P2mGerbers/#producing-pcbs","title":"Producing PCB's","text":"<p>Below ZIP archive contains all gerber files needed to produce the printed circuit boards (PCB) at most Asian manufacturers: - JLCPCB - Seeed Studio</p> <p>Simply go to their website and look for the order menu.</p> <p>You will be presented with a webpage that allows you to upload the ZIP archive (upload/add gerber files).  Once uploaded they will inspect it to be valid for production and offer you the chance to view it.</p> <p>After that choose the desired finish: - base material: FR-4 - layers: 2 - dimensions should be set when uploading the ZIP archive - quantity: mostly 5 or 10 pcs will be very cheap - different design: 1 - delivery format: single PCB - thickness: 1.6mm - color: of your choice - silkscreen: normally white - surface finish: HASL (with or without lead will be small price diff) is use with lead for easier soldering - outer copper weight: 1 oz - gold fingers: no - confirm production file: yes - flying probe test: fully - castellated holes: no - remove order number: no</p>"},{"location":"P2mGerbers/#gerber-files","title":"Gerber Files","text":"<ul> <li>Phc2Mqtt PCB v1.3</li> </ul>"},{"location":"Phc2Mqtt/","title":"User Manual","text":"<p>Warning</p> <p>Phc2Mqtt is not a commercial product and support is limited.  You have to be willing to research and solve potential problems yourself.  The author has no liability, you can use this software at your own risk.</p>"},{"location":"Phc2Mqtt/#abbreviations","title":"Abbreviations","text":"Term Description IP Internet Protocol, the networking protocol that runs over Ethernet (wired) or Wifi (wireless) TCP Transmission Control Protocol, runs on top of IP and is a connection oriented protocol HTTP HyperText Transfer Protocol, runs on top of TCP in a request-reponse model XMLRPC XML encoded Remote Procedure Call, this protocol is used by the PHC Systemsoftware v3 to configure an STMv3. The commands are encoded in XML and the request is sent over HTTP MQTT A compact telemetry protocol typically used in IoT applications, runs over TCP PHC PEHA Home Control domotic system STM STeering Module, the central processor in a PHC system System Software THe Windows application to configure and program your PHC system PCB Printed Circuit Board, a non-conductive material with copper patterns on 1 or 2 sides to interconnect electronic components ESP32 DevkitC The ESP32 dual core module that is used for Phc2Mqtt, we use the WROVER version with 4Mb/8Mb flash memory and 4Mb PSRAM P2M The combination of the hardware and software that make up the functionality of Phc2Mqtt Sub-system A functional part of P2M that performs a certain task and is under supervision of P2M NVS Non-volatile storage, a part of memory that stores data and settings permanently, even when power fails Admin State Administrative state (enable/disable) is saved in NVS memory, the wanted running state of a sub-system after rebooting P2M Oper State Operational state (stopped/started), this is the actual running state of a sub-system. A sub-system will be stopped when booting P2M, if the admin state is enable, then the sub-system will be started and the oper-state will become started AP-mode Access Point mode, the Phc2Mqtt module acts as an access point to which you can connect with a Wifi enabled PC or Smart Phone STA-mode Station mode, the Phc2Mqtt module connects to a Wifi AP as a station, you can access P2M via the WLAN network OTA-update Over-The-Air, refers to firmware upgrade by simple file upload, as such you don't need to open P2M or use specialized hardware Serial-update Refers to firmware upgrade via a USB port, this requires connecting a USB cable to P2M"},{"location":"Phc2Mqtt/#history","title":"History","text":"<p>The very beginning of this project goes back to 2005 with the Windows based WRC+iControl webinterface for PHC domotic systems.</p> <p>From 2007 on a move was made to support Windows and Linux with a cross platform framework that resulted in xWRC, ideal to run on a Raspberry Pi.</p> <p>As the Raspberry Pi does not handle power fails very well, another solution was needed in the form of an embedded system, we choose the ESP32. </p> <p>In 2020 we finally started extending the cross platform framework to FreeRTOS/ESP32 and Phc2Mqtt saw the light in early 2021.</p>"},{"location":"Phc2Mqtt/#contribute","title":"Contribute","text":"<p>Any input from the users is welcome, report your problems/questions/wishes to simonjo@telenet.be and we (me, myself and I) will help you as soon as possible,</p>"},{"location":"Phc2Mqtt/#intro","title":"Intro","text":"<p>Phc2Mqtt is the combination of a hardware module (PCB + components) and operating software known as firmware. For simplicity we will furthermore refer to the Phc2Mqtt combination as P2M.</p> <p>Purpose of P2M is to make a PHC domotic system accessible via MQTT, both for reporting PHC activity and for sending commands to the PHC system.</p> <p>A PHC domotic system is made up from a steering module (STM) which is the master, and 1 or more PHC modules connected over an RS485 PHC module bus, communicating via a proprietary binary protocol.</p> <p>The STM also has a management interface via which it is configured using the Systemsoftware, for an STMv1/2 this is an RS232 serial link with a binary protocol, for an STMv3 this is an ethernet interface with the XMLRPC protocol.</p> <p>From version 4.2.0.0 on we introduce the Simple Rule Server daemon (SRSD), this server lets you specify JSON format rules that are triggered by events and which can execute one or more actions. See Simple Rule Server for details.</p>"},{"location":"Phc2Mqtt/#hardware","title":"Hardware","text":"<p>The initial version of the P2M PCB was v1.2. Feedback from testers showed some issues in the design that needed fixing, and this resulted in a PCB v1.3. A further evolution is PCB v2.x.  The different hardware versions will be explained here.</p>"},{"location":"Phc2Mqtt/#version-12","title":"Version 1.2","text":"<p> To the right is the layout of the PCB, it fits in a 3MOD DIN-rail housing, relevant items are:  </p> <ul> <li>CN1/CN2 are the PHC module bus connectors  </li> <li>X2 is an optional 24V power connector, not used  </li> <li>ESP32-DevkitC with a red power LED, this is the CPU  </li> <li>Pushbutton at the bottom labeled 'WIFI'  </li> <li>Pushbutton at the bottom labeled 'SPARE', not used  </li> <li>Pushbutton at the bottom labeled 'EN'  </li> <li>2-pin header at top/right labeled 'PWR'  </li> <li>2 LED's on the right labeled 'BLUE' and 'RED' </li> </ul> <p>Warning</p> <p>Fieldtests have shown that P2M cannot be powered reliably from the PHC power supply as it draws upto 140mA of current, resulting in unpredictable behaviour. So therefore it is recommended to connect the ESP32-DevkitC to a USB power supply (or a spare PC) after removing the cap from the PWR connector on the PCB. To do this, open P2M and take out the PCB, now remove the cap on the PWR connector on the right/top side of P2M.</p> <p>Warning</p> <p>Failing to remove the cap can and will most likely damage P2M, USB power supply or the used PC.</p>"},{"location":"Phc2Mqtt/#version-13","title":"Version 1.3","text":"<p>This version has a separate mainboard and a plugon physical user interface (PUI). The mainboard contains the ESP32-DevkitC, a 230V power supply to make P2M independent of the PHC bus, and has provisions to hold an optional battery backed RTC (realtime clock) module.</p> <p>The PUI is plugged onto 2 raising connectors and carries the red and blue LED's, 2 extra buttons and an optional OLED display (8 lines x 16 chars).</p> <p>It still fits in a 3MOD DIN-rail housing. If the housing has a red transparent top cover then it is better to remove it as this blocks blue light.</p> <p> Main PCB </p> <ul> <li>BUS1/BUS2 are the PHC module bus connectors  </li> <li>2-pin header at top/center labeled 'PWR'  </li> <li>ESP32-DevkitC with a red power LED, this is the CPU  </li> <li>Under the DevkitC you will see the power supply  </li> <li>RTC is the optional realtime clock with battery  </li> <li>Power connector at bottom/center labeled '230V'  </li> <li>Pushbutton at the bottom left labeled 'WIFI'  </li> <li>Pushbutton at the bottom right labeled 'EN' </li> </ul> <p>PUI PCB </p> <ul> <li>Two buttons on the top labeled 'B1' and 'B2'  </li> <li>An optional OLED display (8 x 16)  </li> <li>Two LED's on the bottom labeled 'BLUE' and 'RED' </li> </ul> <p>Warning</p> <p>P2M is configured by default to power from the internal power supply,  if you want to power it via USB you need to remove the cap from the PWR connector first (top/center on main PCB).</p>"},{"location":"Phc2Mqtt/#version-2223","title":"Version 2.2/2.3","text":"<p>This version has a single mainboard that contains the ESP32-DevkitC, it's form maximalizes the board space available while fitting in a custom 3D printed 2MOD DIN-rail housing.</p> <p>It draws power from the PHC power supply by means of a DC/DC convertor and the RTC (realtime clock) is powered by a CR1220 replacable battery. </p> <p></p> <ul> <li>BUS1/BUS2 are the PHC module bus connectors  </li> <li>2-pin header at top/center labeled 'PWR'  </li> <li>2-pin header at top/center labeled 'SPLIT'  </li> <li>ESP32-DevkitC is the dual core CPU module  </li> <li>Multicolor red/green/blue LED on the right  </li> <li>Pushbutton on the right labeled 'WIFI'  </li> <li>Pushbutton on the right labeled 'EN' </li> </ul> <p>Warning</p> <p>The P2M module is configured by default to power from the PHC module bus,  if you want to power it via USB you need to remove the cap from the PWR connector first (top/center on PCB).</p> <p>Warning</p> <p>The P2M module is configured by default to connect the 24V of both BUS1/BUS2 connectors by means of the SPLIT connector, if needed you can remove the cap from the connector to create 2 separate 24V segments.</p> <p> </p>"},{"location":"Phc2Mqtt/#admin-state-vs-oper-state","title":"Admin-State vs Oper-State","text":"<p>Throughout the documentation you will find references to Admin-State and Oper-State.</p>"},{"location":"Phc2Mqtt/#admin-state","title":"Admin-State","text":"<p>This is the desired state of a subsystem in P2M module, this can be enabled or disabled.  When you change the Admin-State in a configuration webpage this will not take effect immediately, it requires a P2M module reboot.</p>"},{"location":"Phc2Mqtt/#oper-state","title":"Oper-State","text":"<p>When the P2M module boots, it will start subsystems such that the subsystem Oper-State equals the Admin-State as configured.</p>"},{"location":"Phc2Mqtt/#operating-modes","title":"Operating modes","text":"<p>Depending on the operating mode of P2M (Proxy, PassiveSTMv3 or ActiveSTMv3), a different setup will be required.</p>"},{"location":"Phc2Mqtt/#proxy-mode","title":"Proxy mode","text":"<p>In this mode P2M is chained into the PHC module bus using two 6-wire cables with RJ11 male connectors, and it will passively monitor messages exchanged between PHC modules and STM.</p> <p>Following drawing gives an overview of the end-to-end system architecture.</p> <p>The intention is that P2M connects to the wireless LAN (WLAN) such that the Systemsoftware and a web browser have access to it for configuration and reporting purposes.</p> <p>It is via the same WLAN access that P2M will connect to an MQTT Broker to provide it's services to a wider community.</p> <p>Finally an optional IP-wise connection to the STM management interface is made through the WLAN to send commands to the PHC system. In case of the older STMv1/v2 you also need an IP-2-RS232 convertor like MOXA NPort 5110 and the sorts. In case of the STMv3 you can directly use it's network connection.</p>"},{"location":"Phc2Mqtt/#passivestmv3-mode","title":"PassiveSTMv3 mode","text":"<p>In this mode the real STM module (v1/2/3) is removed from the PHC system, and P2M takes it's place. P2M will be the master of the PHC module bus and talks directly to the PHC modules.</p> <p>Same as in Proxy mode, P2M connects to the wireless LAN (WLAN) such that the Systemsoftware and a web browser have access to it for configuration and reporting purposes.</p> <p>It is via the same WLAN access that P2M will connect to an MQTT Broker to provide it's services to a wider community.</p> <p>In PassiveSTMv3 mode no additional hardware is needed to send commands to the PHC system as it is actively connected to the PHC module bus. P2M will provide configuration information to the PHC modules when they (re)boot, it will acknowledge events sent by the PHC modules and report them (to MQTT, SRS), and finally it will translate incoming MQTT commands and send them to the PHC modules, all in a timely fashion respecting the bus protocol and timing.</p> <p>The reason why we call this PassiveSTMv3 mode is because P2M does not handle PHC module events, it just forwards them over MQTT. Opposed to a real STM that will lookup the event in the internal program memory and execute the commands linked to the event.</p> <p> </p>"},{"location":"Phc2Mqtt/#first-usage-of-p2m","title":"First usage of P2M","text":"<p>When you use P2M for the first time it will not be configured, you must first setup the Wifi connection to make your P2M reachable and then do basic configuration before connecting P2M to your PHC system.</p>"},{"location":"Phc2Mqtt/#linking-p2m-to-your-wifi-network","title":"Linking P2M to your Wifi network","text":"<ul> <li> <p>An unconfigured P2M cannot connect to your Wifi network, therefore it will startup in AP-mode whereby the red LED will be on continiously.</p> </li> <li> <p>Note: In AP-mode only the webserver will run to allow configuration of P2M.</p> </li> <li> <p>Use a Wifi enabled PC to connect to P2M's AP by looking for a network called 'p2m_xxxxxx', the x's represent the lower 3 bytes of the P2M's MAC address.</p> </li> <li> <p>Once connected to P2M's AP, use a web browser to access it on 192.168.4.1, you will receive the main webpage as described in chapter 6.1.</p> </li> <li> <p>Goto Configure Wifi to configure the Wifi settings.</p> </li> <li> <p>After you configured the Wifi settings, reboot P2M via Main Menu-&gt;Reboot (preferred), alternatively you can press the EN button (less preferred).</p> </li> <li> <p>The P2M module starts up and lights both red and blue LEDs, then connects to your Wifi network, after which both LEDs will turn off, P2M is now in STA-mode.</p> </li> <li> <p>P2M will try to obtain date/time from the Internet by means of SNTP or read it from the RTC module if one is installed.</p> </li> </ul>"},{"location":"Phc2Mqtt/#finding-p2m-linked-to-your-wifi-network","title":"Finding P2M linked to your Wifi network","text":"<ul> <li> <p>Now P2M is connected to your Wifi network, you need to find out it's IP address.</p> </li> <li> <p>If your P2M has the optional OLED display, then press button B1 or B2 to display P2M's IP address.</p> </li> <li> <p>If you don't have the OLED display, you can press the WIFI button. Now the last number of the IP address (192.168.0.x) will be reported by means of the red and blue leds as follows:  </p> </li> <li>blue LED will light for 1s, after that the red LED will blink to report the hundreds</li> <li>next blue LED lights for 1s and the red LED will blink to report the tens</li> <li>next blue LED lights for 1s and the red LED blinks to report the units</li> <li> <p>finally blue LED lights for 1s to terminate the sequence <pre><code>example : IP-address = 192.168.0.105\n\n           on ----      ----    ----                  ----\nblue LED: off     ------    ----    ------------------    --\n\n           on         -                 - - - - -\nred LED : off -------- ----------------- - - - - -----------\n\neach -  : 1/4 second\n</code></pre></p> </li> <li> <p>You can also you log on to your Wifi router to consult the list of connected clients. Look for an entry showing 'Espressif', enter the shown IP address in a web browser, you should see the Main Menu webpage.</p> </li> <li> <p>As above IP address is obtained via DHCP from your Wifi network, it may be different each time P2M reboots. It is preferred to assign a fixed IP address to P2M in your Wifi router menu and save the settings.</p> </li> <li> <p>Now reboot P2M, your Wifi router will assign it a fixed/DHCP IP address each time P2M starts up.</p> </li> <li> <p>Use a web browser to access P2M on the known IP address.</p> </li> </ul>"},{"location":"Phc2Mqtt/#basic-configuration","title":"Basic configuration","text":"<p>Before connecting P2M to your PHC system, it is recommended that you perform at least following configuration:  </p> <ul> <li> <p>Configure Wifi </p> </li> <li> <p>Configure MQTT Client </p> </li> <li> <p>Configure PHC Interfaces and put PHC Mgmt Interface Admin State to 'Enabled', then press Save  </p> </li> <li> <p>Configure STM Daemon and put Operating Mode to 'Proxy',    select 'Generate from transferred project' under Configuration, then press Save</p> </li> <li> <p>Reboot the module to let changes take effect    </p> </li> <li> <p>Create a project in the PEHA Systemsoftware v3 that contains:   -- an STM v3 and enter the IP address for Phc2Mqtt module   -- all modules present in your PHC system  </p> </li> <li> <p>In PEHA Systemsoftware goto Transfer window:   --  press Start to transfer the project to Phc2Mqtt   -- watch all steps turn green  </p> </li> <li> <p>Goto Configure STM Daemon to verify the list of modules  </p> </li> </ul> <p>After that you power it down and continue with the next step.</p>"},{"location":"Phc2Mqtt/#connecting-p2m-to-your-phc-system","title":"Connecting P2M to your PHC system","text":"<ul> <li> <p>Turn off your PHC system and make sure it is no longer powered.</p> </li> <li> <p>If you intend to run in Proxy mode, then chain P2M in the PHC module bus by removing a 6-wire cable from a PHC module/STM and plugging it in CN1/BUS1 on P2M. Then plug a new 6-wire cable with 2 RJ11 connectors in CN2/BUS2 of P2M and back in the PHC module/STM to complete the chain.</p> </li> <li> <p>Make some space and place P2M onto the DIN rail such that it is mechanically stable.</p> </li> </ul> <ul> <li> <p>If you intend to run in PassiveSTMv3 mode, then remove the real STM from your system and connect P2M with the existing 6-wire cables.</p> </li> <li> <p>Place P2M onto the free space on the DIN rail such that it is mechanically stable.</p> </li> </ul> <ul> <li> <p>Power on P2M and your PHC system.</p> </li> <li> <p>You will see the red power LED on the ESP32-DevkitC turn on.</p> </li> <li> <p>P2M will start up an connect to your Wifi network.</p> </li> </ul>"},{"location":"Phc2Mqtt/#web-interface","title":"Web Interface","text":"<p>Configuration and management of P2M can be done via a web interface by entering the known IP address in a browser.</p>"},{"location":"Phc2Mqtt/#main-menu","title":"Main Menu","text":"<p>The homepage of P2M is the main menu as shown on the right.</p> <p>Click on a button to enter the related page. \u00a0 </p>"},{"location":"Phc2Mqtt/#configuration","title":"Configuration","text":"<p>Click on a button to enter the related configuration page.</p> <p> </p>"},{"location":"Phc2Mqtt/#configure-wifi","title":"Configure Wifi","text":"<ul> <li> <p>Remote AP SSID (network name) and Remote AP Password: P2M will use these credentials to connect in STA-mode to the Wifi network. When you leave these fields empty, P2M will boot into AP-mode.  </p> </li> <li> <p>Web Admin Password: You can specify a password to protect web access to P2M, in this case you need to logon to P2M when prompted by the browser, the username is 'admin' completed with the specified password.  </p> </li> <li> <p>Save: Press this button to save settings, then reboot P2M to let changes take effect.  </p> </li> </ul> <p>Lockout: If you entered a wrong Remote AP SSID/Password, connecting to the Wifi network will fail. P2M will retry connecting 3 times after which it will alternately flash blue/red module LEDs for 3 seconds to indicate the failure, next P2M will reboot and connecting starts again... until connection succeeds. This can cause a lockout where you cannot access P2M.</p> <p>The lockout can also happen if you forgot the Web Admin Password or if you replaced your Wifi network with another.  </p> <p>Recovery: You can recover from this lockout by pressing and holding the WIFI button, then press/release the EN button. P2M will reboot, flashing blue/red module LEDs simultaneous for 3 seconds to confirm the pressed WIFI button, you can release the WIFI button by now.  </p> <p>P2M will boot in AP-mode and turn the red module LED on to indicate this, after which you can connect to your module's AP and access it on 192.168.4.1 with a web browser without password. Change the Wifi settings to the correct values, save them and reboot P2M to revert to normal STA-mode operation.  </p>"},{"location":"Phc2Mqtt/#configure-mqtt-client","title":"Configure MQTT Client","text":"<p>The MQTT client is the interface to the MQTT broker (server), when enabled it will connect to the broker and provide a send/receive path to P2M for receiving commands and reporting information.</p> <p>The MQTT client itself will not subscribe to any topic, the different sub-systems in P2M will do this to suit their needs. Refer to Configure Simple Rule Server, 6.7 and 6.8 for details.</p> <p>When the MQTT client receives published messages, it will offer them to the different sub-systems in P2M, it is upto them to determine whether to use the message or not. \u00a0</p> <p> - Broker IP Address and Broker IP Port: Enter the MQTT Broker IP address and port (default 1883), these fields are mandatory. - ClientId: A unique name across all clients that connect to the same broker, maximum 24 characters, mandatory.</p> <p>If this is not unique the MQTT client will loose it's connection from time to time. - User and Password: Optional, if needed to connect to the broker. - RX Topic Prefix: Max 24 characters. P2M will request the MQTT client to subscribe to '&lt;rx-topic-prefix&gt;/#' to receive messages with commands for the PHC modules.</p> <p>We propose to use '&lt;alias&gt;/m2p', where you replace &lt;alias&gt; with a name for your house/location. Notice that 'm2p' is choosen intentionally to indicate direction, from MQTT to PHC. - TX Topic Prefix: Max 24 characters. This prefix is used when publishing messages to the MQTT broker.</p> <p>We propose to use '&lt;alias&gt;/p2m', where you replace &lt;alias&gt; with a name for your house/location. Notice that 'p2m' is choosen intentionally to indicate direction, from PHC to MQTT.</p> <p>By using asymetric &lt;rx-topic-prefix&gt; and &lt;tx-topic-prefix&gt; we can avoid receiving the own published messages to &lt;tx-topic-prefix&gt;. But you can choose whatever you want.  </p> <ul> <li> <p>Admin State: Specifies the desired state of the MQTT client after P2M reboot, this does not immediately change the operational state.  </p> </li> <li> <p>Save: Press this button to save settings, reboot P2M to let changes take effect.</p> </li> </ul>"},{"location":"Phc2Mqtt/#configure-logging","title":"Configure Logging","text":"<p>P2M has extensive logging features that enable you to monitor module behaviour, but also to give you support in case of problems.</p> <p>Some of them generate serious overhead so they must remain inactive as much as possible and should only be set when asked by support team.</p> <p>To provide the usable and necessary feedback to the user we suggest below settings:</p> <p> - Serial Loglevel: Set to '0 None' for normal operation, serial logging is sent over the USB connection of the ESP32 DevkitC. - Web Loglevel: Should be set to '2 Info' for normal operation, this logging can be observed in the Web Console. - Syslog Loglevel: Set to '0 None' for normal operation. - Syslog IP Address and Syslog IP Port: In case syslog logging is needed, fill out the IP address and port (default 514) of the target syslog daemon. - Save: Press this button to save settings, Serial Loglevel, Web Loglevel and Syslog Loglevel changes will have immediate effect, the other settings require a module reboot to let changes take effect.</p>"},{"location":"Phc2Mqtt/#configure-simple-rule-server","title":"Configure Simple Rule Server","text":"<p>The Simple Rule Server manual gives a detailed explanation of the SRS daemon (SRSD), after reading it you will know that SRSD needs events to trigger rules that lead to actions, P2M provides following: - HTTP events: can be initiated via: http://&lt;ip-address&gt;/srsd?&lt;query-string&gt; - MQTT events: can be initiated by publishing messages to any of below RX Topic Prefixes - STMD events: can be initiated by enabling them in Configure STM Reporting.</p> <p> - RX Topic Prefixes: Enter upto 4 topic prefixes of max 24 characters. On startup SRSD will subscribe to each '&lt;rx-topic-prefix&gt;/#' to receive messages from the MQTT broker. When SRSD stops it will unsubscribe from each '&lt;rx-topic-prefix&gt;/#'. - Admin State: Specifies the desired state of the SRS daemon after P2M reboot, this does not change the operational state. - Save: Press this button to save settings, reboot P2M to let changes take effect. - Start Now/Stop Now: Using this button you can instantly change the Oper State of SRSD, this does not immediately change the Admin State. - Download Rules: Allows you to download the active rules file. - Upload &amp; Validate New Rules: Allows you to load a new set of rules, this is a 2 step procedure. In the first step you select a new rule file by pressing 'Choose File', selecting a file and then pressing Start.</p> <p>During validation the new rule file will be uploaded to a temporary file and parsed for correctness without interfering with the active rules. In a new webpage you will see all lines of the rule file appear with warnings (orange) or errors (red) annotated.</p> <p>If errors occured in the rule file then you will see only Configure Simple Rule Server button, correct the error in the new rule file, go back and retry validation.</p> <p>If no errors occured in the rule file then you will see Configure Simple Rule Server and Activate New Rules buttons.</p> <p>If you don't want to activate the new rules then go back or press the Configure Simple Rule Server button.</p> <p>If you want to activate the new rules then press the Activate New Rules button, now the new rules will be put in service by removing the old rules and replacing them with the new rules. This is a permanent change. During this process SRSD will not be available, but albeit this is a very short period.</p>"},{"location":"Phc2Mqtt/#configure-phc-interfaces","title":"Configure PHC Interfaces","text":"<p>P2M provides a number of PHC interfaces serving different purposes.</p> <p></p>"},{"location":"Phc2Mqtt/#phc-management-interface","title":"PHC Management Interface","text":"<p>This interface is used to configure P2M with project data from the Systemsoftware v3 using XMLRPC as transfer protocol.</p> <ul> <li>Management STM Address: This should match the STM address as defined in your project in the Systemsoftware, by default this is 0.</li> <li>Admin State: Enable/disable the management interface of P2M.</li> <li>Save: Press this button to save settings, changes take effect after rebooting P2M.</li> </ul>"},{"location":"Phc2Mqtt/#phc-external-client","title":"PHC External Client","text":"<p>This interface is used to send commands to an external real STM module (v1/v2/v3).</p> <ul> <li>Remote STM Mode: Select the appropriate remote STM in your PHC system.  </li> <li>Remote STM IP Address and Port: IP address and port on which the remote STM in your PHC system is reachable.</li> </ul> <p>For an STMv3 this is the STM's IP address and port will be 6680.</p> <p>For an STMv1/v2 this will be the IP address of the IP-2-RS232 convertor, the port depends on the settings of the convertor which must be in TCP server mode. - Remote STM Mgmt Address: This is the remote STM management address as defined in the Systemsoftware for the STM component, normally this is 0. - Admin State: Enable/disable the PHC external client. - Save: Press this button to save settings, changes take effect after rebooting P2M.</p>"},{"location":"Phc2Mqtt/#configure-stm-daemon","title":"Configure STM Daemon","text":"<p>The STM Daemon (STMD) is the heart of P2M which coordinates activities to/from the PHC system, it relies on project configuration data received via the PHC Management Interface.</p> <p>This project config data is stored in 2 files: - project.prg: Contains the functional/basic programming of your project in compiled binary form. - project.zip: Contains the metadata of your project in zipped format, it is an exact copy of project.zpfx as created by the Systemsoftware.</p> <p>This ZIP file contains a number of files, but P2M is only interested in project.ppfx, which contains an XML formatted list of PHC modules present in your PHC system. STMD parses that XML file to build a module-list which is needed for correct operation of the reporting and command handling sub-systems.</p> <p>To transfer the project data: - Enable the PHC Management Interface - Open your project.zpfx file in the Systemsoftware, goto the properties of the STM in your project and enter P2M's IP address, press TAB and you should notice that version 3.30 is reported.</p> <p>Goto the transfer window of the Systemsoftware and press Start, the project data will be transfered to P2M, you can observe this in the Web Console.</p> <p> - Operating Mode:</p> <p>'Proxy': The STMD analyzes packets on the PHC module bus and reports events/status via the MQTT client, it also relays commands coming in from MQTT client to the real (remote) STM in your PHC system via the External Client interface.</p> <p>'PassiveSTMv3': The STMD replaces the real STM of your PHC system, it is the master of the PHC module bus and communicates directly with the PHC modules. Commands coming in from MQTT client will be executed, events coming from PHC modules are only reported to MQTT client/SRS daemon.  </p> <ul> <li>Configuration: Selects how P2M will handle incoming project data via the PHC Management Interface</li> </ul> <p>'Manual upload &amp; validate new configuration': You will need to upload project.ppfx yourself (see below), this is intended as backup in case the first option fails.</p> <p>'Generate from transferred project': The STMD will automatically extract project.ppfx after transferring the project data with the Systemsoftware, and will rebuild P2M-list by parsing project.ppfx.</p> <p>'Generate from transferred project + HA data': The STMD will automatically extract project.ppfx after transferring the project data with the Systemsoftware, and will rebuild P2M-list by parsing project.ppfx. It will also generate data describing your PHC  system that can be sent out via MQTT so Home Assistant (HA) can discover it (experimental).</p> <ul> <li>Module-List:</li> </ul> <p>The window below lists all modules as known in your project, the left column is the logical module type that will be used in reporting/commands, the right column is the physical module type which is more detailed.</p> <p>Both reporting and command handling sub-systems use this module-list to correctly convert PHC module bus packets to/from readable format.</p> <p>When STMD sees activity from PHC modules not in P2M-list, it will add them with the default module type depending on the PHC module address. Note that this may lead to wrong interpretation of modules packets and wrong commands offered. So make your PHC project in the Systemsoftware as accurate as possible to avoid issues. <pre><code>Address 0x00-0x1F : imd\n        0x20-0x3F : uim\n        0x40-0x5F : omd\n        0x60-0x7F : amd\n        0x80-0x9F : ebs\n        0xA0-0xBF : dim\n</code></pre> - Save: Press this button to save settings, reboot P2M to let changes take effect.  </p> <ul> <li>Upload &amp; Validate New Config: Here you can manually upload project.ppfx. You can obtain this file by opening your project.zpfx file with WinZip/7Zip/... and extracting the file project.ppfx. If you have multiple STM's in your PHC system, then split project.ppfx into 1 file per STM and reduce the contents before uploading as P2M has approximately 600Kb available to store it.</li> </ul> <p>Press Choose file to select your project.ppfx file, then press Start, P2M will now upload the file and parse it to build P2M-list.</p>"},{"location":"Phc2Mqtt/#configure-stm-ha-discovery","title":"Configure STM HA Discovery","text":"<p>Home Assistant (HA) is a leading automation integrator and we are trying to provide an easy way to advertise the capabilities of your PHC system to HA. This is done by publishing available components/channels via MQTT to a certain topic. </p> <p> - Discovery Topic Prefix: The prefix of the topic to which to publish MQTT messages. - Discovery Interval: The rate at which to publish advertise messages. - Discovery Retain: Enable/disable the retain flag in the MQTT messages. - Save: Press this button to save settings. - Discover Now: Press this button to publish P2M capabilities to HA.   This functionality is still experimental at this moment and reports only available modules/channels. New development is ongoing.</p>"},{"location":"Phc2Mqtt/#configure-stm-reporting","title":"Configure STM Reporting","text":"<p>The STMD reporting sub-system is the one looking at all the packets that are sent over the PHC module bus it is attached to, and which reports them in readable format based on P2M-list.</p> <p> - Reporting Format: The reporting format, see below. - Data Format: How a zero or one state is reported, either binary as '0'/'1' or as boolean as 'false'/'true'. - Report To MQTT: Enable/disable reporting via the MQTT client on a per type basis (boo=boot, evt=event, sta=state, cmd=command).</p> <p>The MQTT client will prepend '&lt;tx-topic-prefix&gt;/'. - Report To MQTT Retain: Enable/disable the retain flag of the MQTT message on a per type basis (boo=boot, evt=event, sta=state, cmd=command). - Report To SRS: Enable/disable reporting to the SRSD on a per type basis (boo=boot, evt=event, sta=state, cmd=command). - Save: Press this button to save settings after which they take effect (no need to reboot).</p>"},{"location":"Phc2Mqtt/#reporting-formats","title":"Reporting Formats","text":"<p>xPhcLogd compatible: This format equals the reporting done by the xPhcLogd tool, and reports a change on each channel separately.</p> <p>This can lead to a storm of reports because STMD reports each channel the first time a module is seen,  for example an output module will have all 8 outputs reported. <pre><code>topic=boo/&lt;mod&gt;.&lt;addr&gt;        data=[&lt;value&gt;]\ntopic=evt/&lt;mod&gt;.&lt;addr&gt;.&lt;chan&gt; data=&lt;event&gt;\ntopic=sta/&lt;mod&gt;.&lt;addr&gt;.&lt;chan&gt; data=&lt;state&gt;\ntopic=cmd/&lt;mod&gt;.&lt;addr&gt;.&lt;chan&gt; data=&lt;cmd&gt; *[.&lt;parm&gt;]\n</code></pre> Examples: <pre><code>topic=boo/omd.0      data=\ntopic=evt/imd.0.in0  data=ingt0\ntopic=sta/omd.0.out3 data=1\ntopic=cmd/omd.0.out3 data=ontimed.300\n</code></pre> Text format: Groups reportable items per PHC module in plain text using key/value pairs: <pre><code>topic=boo/&lt;mod&gt;.&lt;addr&gt; data=[attrib:&lt;value&gt;]\ntopic=evt/&lt;mod&gt;.&lt;addr&gt; data=&lt;chan&gt;:&lt;event&gt; *[,&lt;chan&gt;:&lt;event&gt;]\ntopic=sta/&lt;mod&gt;.&lt;addr&gt; data=&lt;chan&gt;:&lt;state&gt; *[,&lt;chan&gt;:&lt;state&gt;]\ntopic=cmd/&lt;mod&gt;.&lt;addr&gt; data=&lt;chan&gt;:&lt;cmd&gt; *[.&lt;parm&gt;]\n</code></pre> Examples: <pre><code>topic=boo/omd.0 data=\ntopic=evt/imd.0 data=in0:ingt0\ntopic=sta/omd.0 data=out0:1,out1:0,out2:0,out3:1,out4:0,out5:0,out6:0,out7:0\ntopic=cmd/omd.0 data=out3:ontimed.300\n</code></pre> JSON format: Groups reportable items per PHC module in JSON syntax using key/value pairs: <pre><code>topic=boo/&lt;mod&gt;.&lt;addr&gt; data={ [attrib:&lt;value&gt;]                  }\ntopic=evt/&lt;mod&gt;.&lt;addr&gt; data={ &lt;chan&gt;:&lt;event&gt; *[,&lt;chan&gt;:&lt;event&gt;] }\ntopic=sta/&lt;mod&gt;.&lt;addr&gt; data={ &lt;chan&gt;:&lt;state&gt; *[,&lt;chan&gt;:&lt;state&gt;] }\ntopic=cmd/&lt;mod&gt;.&lt;addr&gt; data={ &lt;chan&gt;:&lt;cmd&gt; *[.&lt;parm&gt;]           }\n</code></pre> Examples: <pre><code>topic=boo/omd.0 data={}\ntopic=evt/imd.0 data={\"in0\":\"ingt0\"}\ntopic=sta/omd.0 data={\"out0\":1,\"out1\":0,\"out2\":0,\"out3\":1,\"out4\":0,\"out5\":0,\"out6\":0,\"out7\":0}\ntopic=cmd/omd.0 data={out3:ontimed.300}\n</code></pre> To see the differences you can later on observe them in the Web Console.  </p>"},{"location":"Phc2Mqtt/#phc-cmd-reference","title":"PHC Cmd Reference","text":"<p>By clicking on a hyperlink in this page you will get a list of commands applicable to the clicked item in the text area below.</p> <p>Note: Commands related to input (in%/ir%/im%/il%) and feedback (fb%) channels are not available in PassiveSTMv3 mode as the STMD does not handle them.</p> <p>These commands can be executed by publishing an MQTT message to topic '/cmd/ccmd' where the data part contains the commands. These commands can also be executed by entering them in the Web Console command line. <p> </p>"},{"location":"Phc2Mqtt/#file-maintenance","title":"File Maintenance","text":"<p> In this menu you can download or clear/delete files: - Download File: Select the desired file in the dropdown list, then click Download File to start download to your PC. - Clear File: Select the desired file in the dropdown list, then click Clear File. You will be prompted to confirm the clear action. \u00a0 </p>"},{"location":"Phc2Mqtt/#firmware-upgrade","title":"Firmware Upgrade","text":"<p> P2M supports OTA (over-the-air) firmware upgrades, this means that you can upload a new firmware file via a webpage, after which P2M will execute the new firmware when it boots.</p> <p>From Main Menu select Firmware Upgrade and follow below instructions. - Choose File: Press this button to select a new firmware file that is stored on your PC. - Start Upgrade: Press this button to start the upgrade, you will be prompted to confirm or cancel this operation.</p> <p>When confirmed the firmware file will be uploaded while showing a rotating caret/progress marker.</p> <p>After completion of the upload, you need to reboot P2M to let changes take effect.</p>"},{"location":"Phc2Mqtt/#web-console","title":"Web Console","text":"<p>The web console is the place where logging is shown and you can observe what P2M is doing in the big text window.</p> <p>The smaller window near the bottom is the command-line, you can enter commands here. Enter '?' and press &lt;enter&gt; to get a list of commands, you can also enter the commands as listed in PHC Cmd Reference.</p> <p> </p>"},{"location":"Phc2Mqtt/#reboot","title":"Reboot","text":"<p>Clicking the Reboot button will prompt you for confirmation, confirm or cancel at your will.</p> <p>When confirmed P2M will stop the different sub-systems in an orderly fashion and restart itself.</p> <p>After a few seconds the webpage will be redirected to P2M's homepage.</p>"},{"location":"Phc2Mqtt/#additional-info","title":"Additional Info","text":""},{"location":"Phc2Mqtt/#enumerating-module-channels","title":"Enumerating Module Channels","text":"<p>You can publish an MQTT message with topic '&lt;rx-topic-prefix&gt;/enu/chns' and in response P2M will publish all modules/channels that have a description specified in the Systemsoftware and which are valid for the respective module.</p> <p>An external system could use this info to learn about the PHC system and/or configure something like Home Assistant.</p> <pre><code>&lt;tx-topic-prefix&gt;/enu/&lt;mod&gt;.&lt;addr&gt; = &lt;description&gt;\n\ne.g. alias/p2m/enu/imd.0.in.0 = Living Shutter Up\ne.g. alias/p2m/enu/imd.0.in.1 = Living Shutter Down\ne.g. alias/p2m/enu/jrm.0.out0 = Living Shutter\ne.g. alias/p2m/enu/omd.0.out0 = Living Main Light\n</code></pre>"},{"location":"Phc2Mqtt/#web-console-commands","title":"Web Console Commands","text":"<p>There are a number of commands you can specify in the command line of the Web Console, press '?' and &lt;enter&gt; to get a list. In addition to these commands you can also enter the commands listed in chapter 6.10.</p> <p>Note that the 'debug.*' and 'admin.save' commands should only be used based on instructions from support engineer, as these might induce high overhead on the functioning of P2M.</p> <p>Commands that you can use freely are listed below, you can use a space ' ' or a dot '.' as separator between words: <pre><code>info              return general info about P2M\nadmin reboot      use this command to reboot P2M in an ordered way\nadmin shutdown    use this command to stop P2M in an ordered way before power off\ndebug             report current debug settings\nstats             report sub-system statistics\nstats reset       reset sub-system statistics\nmqtc              report MQTT client extra settings and statistics\nmqtc txque        set MQTT client tx-que size\nmqtc txbuf        set MQTT client tx-buffer size\nmqtc rxbuf        set MQTT client rx-buffer size\nsrsd              report SRS daemon settings and statistics\nsrsd state        report SRS deamon state variables\n</code></pre> .</p>"},{"location":"PhcModules/","title":"Phc Modules","text":""},{"location":"PhcModules/#intro","title":"Intro","text":"<p>The PHC (PEHA Home Control) domotic system knows a fair amount of different modules,  where each module: - is identified by a physical module type (phy) - has a derived logical module type (log) - communicates via a binary protocol - has a specific amount/type of channels (input/output/feedback) - belongs to a module class (input/multifunction/output/analog/box/dimmer) - has a settable address via DIP switches (0-31) - has a dedicated set of supported commands and generated responses</p> <p>Within a module class there are 32 adddresses (0-31) available, each module needs to be mapped to a unique address within it's class, otherwise conflicts will occur. Note that some modules use multiple addresses to cover it's functionality.</p> <p>Phc2Mqtt is a two-way translator between the module's binary protocol and a textual user interface.  </p> <p>As such Phc2Mqtt needs to know the physical module types to correctly encode/decode the binary packets to/from any PHC modules.  </p> <p>On the user interface side it offers a textual command/response format that uses the logical module types (log),  this way the user does not need to worry about the real physical module types.  </p> <p>Following shows the relation between module class and logical module type:</p> Class Logical Module Types (0) Input modules imd, imw, tab, et0 (1) Multifunction modules utm, bwm, uim, et1, mcc (2) Output modules omd, omx, jrm (3) Analog modules amd, fui, fu1, fu2 (4) Box modules ebs, ebr, ebd, mls (5) Dimmer modules dim, dal"},{"location":"PhcModules/#project-information","title":"Project Information","text":""},{"location":"PhcModules/#proxy-mode","title":"Proxy Mode","text":"<p>When running Phc2Mqtt in Proxy mode it will passively listen on the PHC module bus to report activity and send commands to the real STM that will handle protocol details for communication with the PHC modules.</p> <p>In this mode Phc2Mqtt needs following information per module: - physical module type - module address setting</p>"},{"location":"PhcModules/#passivestmv3-mode","title":"PassiveSTMv3 Mode","text":"<p>When running Phc2Mqtt in PassiveSTMv3 mode the module list is required but not enough.</p> <p>In this mode Phc2Mqtt takes over the role of the STM and it needs additional information, this requires some explanation: - The PHC module bus is slow (19200 baud) and shared by all modules - The binary protocol tries to reduce the number of packets sent over it to avoid contention - When a PHC module starts it will do only 1 thing: send a boot packet to it's master (STM) - The STM responds with a config packet, now the module knows which events to report to STM - After that the PHC module will report the enabled events to STM</p>"},{"location":"PhcModules/#configuration","title":"Configuration","text":"<p>The module and optional channel/event list can be provided in several ways: - by uploading the project definition from the System Software v3 to Phc2Mqtt via the management interface - by extracting project.ppfx from the project.zpfx file and then uploading it manual (only for Proxy mode)  </p> <p>For now we will rely on the project upload by the System Software v3, in case this is problematic the alternative method can be used. Please contact support for assistance.</p>"},{"location":"PhcModules/#module-overview","title":"Module Overview","text":"<p>Below table lists all PHC modules, their physical and logical module types, their image and manual.</p> Phy Log PHC product Description/Module definition Image(Manual) EMD24 imd 940/24EM Input module 24 V EMD_RUE imd 940/24EM RU940/24EM RU diag Input module 24 V LED EMD_24S imd 941/24 EM Input module 24 V switch EMD230 imd 940/230 EM Input module 230 V UEM_1 imw 940/24 EM UP o.T. Flush mount input module 24 V DC UEM_2 imw 940/24 EM RU o.T. Flush mount input module with LED UEM_2 imw OpenHC UEM Flush mount input module with LED ET0-2 et0 940/2.xx ET(B) Flush mount push button 2 fold ET0-4 et0 940/4.xx ET(B) Flush mount push button 4 fold ET0-8 et0 940/8.xx ET(B) Flush mount push button 8 fold ET0-D et0 940/8.xx ET D Flush mount push button 8 fold with display EMD_TAB tab 941/16 TAB Indicator- and control panel  (16 push buttons) EMD_TAB_2 tab 941/32 TAB Indicator- and control panel  (32 push buttons) EMD_VIR imd - Virtual input module - UTM_1.0 utm 941/1 UP o.A Push button, 1-fold UTM_2.1 utm 941/2 UP o.A Push button, 2-fold UTM_3.2 utm 941/4 UP o.A Push button, 4-fold MFM_BWM bwm 410 BM o.A Flush - mounting motion detector 180degr UIM uim 941 UP o.A Infrared module ET1-2 et1 940/2.xx ET(B) Flush mounting push button 2 fold ET1-4 et1 940/4.xx ET(B) Flush mounting push button 4 fold ET1-8 et1 940/8.xx ET(B) Flush mounting push button 8 fold ET1-D et1 940/8.xx ET D Flush mounting push button 8 fold with display MCC_2 mcc 940 MCC Multi Control Center (MCC) AMD230_4 omd 940/4 AM940/4 AM diag Output module 230V/4A AMD230_10 omd 940/10 AM940/10 AM diag Output module 230V/10A AMD230_16 omd 940/16 AM Output module 230V/16A ALP omd 940/24 AM Output module 24V AMD_EVG omd 941/10 AM Output module 230V/EVG AMD230_4_man_ext omx 942/4 AM942/4 AM diag Output module 230V/4A diag AMD230_10_man_ext omx 942/10 AM942/10 AM diag Output module 230V/10A diag AMD230_16_man_ext omx 940/16 AM MAN Output module 230V/16A manual JRM24 jrm 940/24 JRM Shutter/ blind module 24V JRM jrm 940 JRM 940 JRM DIAG Shutter/ blind module 230V AMA(phc/ama.md) amd 940 AMA Analogue module MFM_FUNK fui 940 FU C RF- interface (Easyclick) MFM_FUNK1 fu1 940 FU RF- interface I/O (Easywave) MFM_FUNK2 fu2 941 FU C RF- interface I/O (Easyclick) OBO_1 ebs 960/3 PSB System box switching OBO_2 ebr 960/3 PSB/JR System box shutter OBO_3 ebd 960/3 PSB/D System box dimming (1-10V) DIM_AN dim 944/2 DIM AN Forward phase control dimmer 420W DIM_AB dim 944/2 DIM AB Inverse phase control dimmer 420W DIM_AN1000 dim 949 DM M-AN Forward phase control dimmer 1000W DIM_AB1000 dim 949 DM M-AB Inverse phase control dimmer 1000W DIM_SAN dim 944/2 DM AN949 DM M-AN Synchronized forward phase control dimmer DIM_SAB dim 944/2 DM AB949 DM M-AB Synchronized inverse phase control dimmer DIM_UNI dim 949 DM UN Universal dimmer DIM_DALI_8_EXT dal 940/8 DALI-G DALI-Gateway (8-channels)"},{"location":"PhcModules.orig/","title":"PhcModules.orig","text":""},{"location":"PhcModules.orig/#intro","title":"Intro","text":"<p>The PHC (PEHA Home Control) domotic system knows a fair amount of different modules,  each module: - is identified by a physical module type (phy) - communicates via a binary protocol - has a specific amount/type of channels (input/output/feedback) - belongs to a module class (input/multifunction/output/analog/box/dimmer) - has a settable address via DIP switches (0-31) - has a dedicated set of supported commands and generated responses</p> <p>Within a module class there are 32 adddresses (0-31) available, each module needs to be mapped to a unique address within it's class, otherwise conflicts will occur. Note that some modules use multiple addresses to cover it's functionality.</p> <p>Phc2Mqtt is the brigde between the module's binary protocol, and the textual interface with humans. As such Phc2Mqtt needs to know the physical module types to perform a correct communication with each module. On the human side it offers a textual command/response format that uses a logical module type (log).</p> <p>Following shows the relation between module class and logical module type:</p> Class Logical Module Types Input modules imd, imw, tab, et0 Multifunction modules utm, bwm, uim, et1, mcc Output modules omd, omx, jrm Analog modules amd, fui, fu1, fu2 Box modules ebs, ebr, ebd, mls Dimmer modules dim, dal"},{"location":"PhcModules.orig/#project-information","title":"Project Information","text":"<p>The information needed by Phc2Mqtt is all put together in the project information file (i.e. project.stm).</p>"},{"location":"PhcModules.orig/#proxy-mode","title":"Proxy Mode","text":"<p>When running Phc2Mqtt in Proxy mode it will passively listen on the PHC module bus to report activity and send commands to the real STM that will handle protocol details for communication with the PHC modules.</p> <p>In this mode Phc2Mqtt needs following information per module: - physical module type - module address setting</p>"},{"location":"PhcModules.orig/#passivestmv3-mode","title":"PassiveSTMv3 Mode","text":"<p>When running Phc2Mqtt in PassiveSTMv3 mode the module list is required but not enough.</p> <p>In this mode Phc2Mqtt takes over the role of the STM and it needs additional information, this requires some explanation: - The PHC module bus is slow (19200 baud) and shared by all modules - The binary protocol tries to reduce the number of packets sent over it to avoid contention - When a PHC module starts it will do only 1 thing: send a boot packet to it's master (STM) - The STM responds with a config packet, now the module knows which events to report to STM - After that the PHC module will report the enabled events to STM</p> <p>The additional information for each input (in/ir/il/im) and feedback (fb) channel of the module is: - Channel identification - Optional a descriptive text for this channel - A list of all events enabled for this channel</p> <p>Output channels (mrk/led/out) can optionally specify following info: - Channel identification - Optional a descriptive text for this channel  </p>"},{"location":"PhcModules.orig/#configuration","title":"Configuration","text":"<p>The module and optional channel/event list can be provided in several ways: - by uploading the project definition from the System Software v3 to Phc2Mqtt via the management interface - by extracting project.ppfx from the project.zpfx file and then uploading it manual</p> <p>In future we will obsolete both these methods and replace it with a full manual solution, this may sound strange but it will  allow for a lot of functionality on the module to be removed and a significant reduction is required memory (64Kb Flash + 64Kb RAM).</p> <p>To provide the manual configuration you will need to prepare a text file with below syntax and then upload it to Phc2Mqtt. To avoid typing errors we will make use of prepared template files per module type that can be copy/pasted with minor adjustements.</p> <p>For Proxy mode you need to copy the module definition, for PassiveSTMv3 mode you need to copy the module and channel definitions.</p>"},{"location":"PhcModules.orig/#configuration-syntax","title":"Configuration Syntax","text":"<p>Configuration info can span 1 or more lines but the last line always ends on a semicolon (;).</p> <p>Each line in the configuration carries 1 functional block as shown in the Backus-Naur format below, the split over lines is intentional and strict.</p> <p>A space character is used to separate fields and can thus not be used as data.</p> <p>If you want to use a space character in a string, then the complete string needs to be enclosed in double quotes.</p> <p>Keywords and delimiters (between double quotes) are case-insensitive, actual data strings are case-sensitive.</p> <pre><code>config         ::= \"&lt;stmd&gt;\"\n                   *[&lt;module&gt; | &lt;comment&gt;]\n                   \"&lt;/stmd&gt;\"\n\ncomment        ::= \";\" [&lt;string&gt;]\n\nmodule         ::= \"module\" \"id=\"&lt;phy-mod&gt;.&lt;address&gt;\n                     *(\"channel\" &lt;channel&gt;) \";\"\n\n  phy-mod      ::= physical module name\n  address      ::= 0-31\n\nchannel        ::= \"id=\"&lt;id&gt; \"desc=\"&lt;string&gt; [\"events=\"&lt;event&gt; *[\",\"&lt;event&gt;]\n  id           ::= &lt;chn-type&gt;&lt;chn-num&gt;\n  chn-type     ::= \"in\" | \"ir\" | \"il\" | \"im\" | \"mrk\" | \"led\" | \"out\" | \"fb\"\n  chn-num      ::= 0-31\n  event        ::= &lt;string&gt;\n\nstring         ::= *(\"a-z\" | \"A-Z\" | \"0-9\" | \"_-/.,\"':;{}\")\n</code></pre>"},{"location":"PhcModules.orig/#module-templates","title":"Module Templates","text":"<p>Building the configuration file from scratch is a difficult task, therefore we created templates for each physical module type.</p> <p>Below table lists all modules, their physical and logical module types, their image and manual and the corresponding template file.</p> <p>Copy the template for each module you have into your config.stm file and make adjustments: - adjust the  of the module - put all not used channels in comment - optional adjust the desc field of each channel - for the input/feedback channels:   - remove the non used events from the event-list   - for light control we typiclly retain: outlt1 and ingt2   - for shutter control we typically retain: ingt0 and ingt1 Phy(Template) Log PHC product Description/Module definition Image(Manual) EMD24 imd 940/24EM Input module 24 V EMD_RUE imd 940/24EM RU940/24EM RU diag Input module 24 V LED EMD_24S imd 941/24 EM Input module 24 V switch EMD230 imd 940/230 EM Input module 230 V UEM_1 imw 940/24 EM UP o.T. Flush mount input module 24 V DC UEM_2 imw 940/24 EM RU o.T. Flush mount input module with LED UEM_2 imw OpenHC UEM Flush mount input module with LED ET0-2 et0 940/2.xx ET(B) Flush mount push button 2 fold ET0-4 et0 940/4.xx ET(B) Flush mount push button 4 fold ET0-8 et0 940/8.xx ET(B) Flush mount push button 8 fold ET0-D et0 940/8.xx ET D Flush mount push button 8 fold with display EMD_TAB tab 941/16 TAB Indicator- and control panel  (16 push buttons) EMD_TAB_2 tab 941/32 TAB Indicator- and control panel  (32 push buttons) EMD_VIR imd - Virtual input module - UTM_1.0 utm 941/1 UP o.A Push button, 1-fold UTM_2.1 utm 941/2 UP o.A Push button, 2-fold UTM_3.2 utm 941/4 UP o.A Push button, 4-fold MFM_BWM bwm 410 BM o.A Flush - mounting motion detector 180degr UIM uim 941 UP o.A Infrared module ET1-2 et1 940/2.xx ET(B) Flush mounting push button 2 fold ET1-4 et1 940/4.xx ET(B) Flush mounting push button 4 fold ET1-8 et1 940/8.xx ET(B) Flush mounting push button 8 fold ET1-D et1 940/8.xx ET D Flush mounting push button 8 fold with display MCC_2 mcc 940 MCC Multi Control Center (MCC) AMD230_4 omd 940/4 AM940/4 AM diag Output module 230V/4A AMD230_10 omd 940/10 AM940/10 AM diag Output module 230V/10A AMD230_16 omd 940/16 AM Output module 230V/16A ALP omd 940/24 AM Output module 24V AMD_EVG omd 941/10 AM Output module 230V/EVG AMD230_4_man_ext omx 942/4 AM942/4 AM diag Output module 230V/4A diag AMD230_10_man_ext omx 942/10 AM942/10 AM diag Output module 230V/10A diag AMD230_16_man_ext omx 940/16 AM MAN Output module 230V/16A manual JRM24 jrm 940/24 JRM Shutter/ blind module 24V JRM jrm 940 JRM 940 JRM DIAG Shutter/ blind module 230V AMA(phc/ama.md) amd 940 AMA Analogue module MFM_FUNK fui 940 FU C RF- interface (Easyclick) MFM_FUNK1 fu1 940 FU RF- interface I/O (Easywave) MFM_FUNK2 fu2 941 FU C RF- interface I/O (Easyclick) OBO_1 ebs 960/3 PSB System box switching OBO_2 ebr 960/3 PSB/JR System box shutter OBO_3 ebd 960/3 PSB/D System box dimming (1-10V) DIM_AN dim 944/2 DIM AN Forward phase control dimmer 420W DIM_AB dim 944/2 DIM AB Inverse phase control dimmer 420W DIM_AN1000 dim 949 DM M-AN Forward phase control dimmer 1000W DIM_AB1000 dim 949 DM M-AB Inverse phase control dimmer 1000W DIM_SAN dim 944/2 DM AN949 DM M-AN Synchronized forward phase control dimmer DIM_SAB dim 944/2 DM AB949 DM M-AB Synchronized inverse phase control dimmer DIM_UNI dim 949 DM UN Universal dimmer DIM_DALI_8_EXT dal 940/8 DALI-G DALI-Gateway (8-channels)"},{"location":"SimpleRuleServer/","title":"Simple Rule Server","text":""},{"location":"SimpleRuleServer/#intro","title":"Intro","text":"<p>The Simple Rule Server is a lightweight daemon to accomplish automation tasks and which is integrated into the Phc2Mqtt project, we will furthermore refer to it as SRSD.</p> <p>Operational behaviour of the SRSD is determined by a set of plain text rules stored in a file (rule-file) which is loaded when the SRSD starts. Configure Simple Rule Server describes how this rule-file is provisioned in the Phc2Mqtt project.</p> <p>In general above rules are triggered by an event (unless otherwise stated),  these can come from different sources like an MQTT client, HTTP server, a clock, a timer or the hosting application (in casu Phc2Mqtt provides system and STMD events).</p> <p>Some rules are able to store part of an event's content or a fixed value into an internal piece of memory called a state-object,  which can be used in a condition.</p> <p>A condition compares the value of a state-object to a fixed value to determine the flow of actions.</p> <p>Finally, the purpose of SRSD is to execute actions to realise the automation tasks,  this can be sending an MQTT message, execute a PHC command, starting or stopping a clock or timer, ...</p>"},{"location":"SimpleRuleServer/#rule-syntax","title":"Rule Syntax","text":"<p>Rules are expressed in a simplified JSON format, removing redundant decoration, and are stored in a rule file. </p> <p>Strings that contain ';:{}[]\"\\', a space, a tab, a carriage-return (CR) or line-feed (LF) need enclosing double-quotes,  additionally the double-quote/backslash/tab/CR/LF need to be escaped as '\\\"', '\\\\', '\\t', '\\r' and '\\n' respectively. </p> <p>If a string does not contain above characters then it does not require enclosing double-quotes, but they are allowed at the user's discretion.</p> <p>A space/tab/CR/LF are considered white-space and are skipped, unless used inside a quoted string.</p> <p>The pipe ('|') and ampersand ('&amp;') are used as special separator characters inside a data-filter and cannot be used in a string.</p> <p>Comments can be specified at any position on a line by means of a semicolon, all following characters upto the end-of-line will be skipped unless used inside a quoted string.</p> <p>Keywords and delimiters (between single quotes) in rules are case-insensitive, actual data strings are case-sensitive.</p> <pre><code>rules          ::= 'rules:{' *[&lt;rule&gt; | &lt;comment&gt;] '}'\n\ncomment        ::= ';' [&lt;string&gt;]\n\nrule           ::= &lt;init-rule&gt; | &lt;exit-rule&gt; | &lt;state-rule&gt; | &lt;action-rule&gt;\n\ninit-rule      ::= 'init:{' *&lt;action&gt; '}'\n\nexit-rule      ::= 'exit:{' *&lt;action&gt; '}'\n\nstate-rule     ::= 'state:{' \n                     'when:{' *&lt;event&gt; '}' \n                    ['refine:{' [&lt;modifier&gt;':'&lt;string&gt;]['keys:'&lt;key-filters&gt;]['math:'&lt;term&gt;] '}']\n                   '}'\n  modifier     ::= 'infix' | 'prefix' | 'name'\n  term         ::= &lt;oper&gt; (&lt;number&gt; | &lt;term&gt;)\n  oper         ::= '+-*/%&amp;|^'\n\naction-rule    ::= 'action:{'\n                     'when:{' *&lt;event&gt; '}' 'then:{' *&lt;action&gt; '}' \n                   '}'\n\naction-rule    ::= 'action:{'\n                     'when:{' *&lt;event&gt; '}'\n                     *('and:{' *&lt;cond&gt; '}' 'then:{' *&lt;action&gt; '}' )\n                      ['else:{' *&lt;action&gt; '}' ]\n                   '}'\n\n\nevent          ::= &lt;source&gt;':{' 'topic:'&lt;topic-filter&gt; ['data:'&lt;data-filter&gt;] '}'\n  source       ::= 'clock' | 'http' | 'mqtt' | 'stmd' | 'system' | 'timer'\n\ncond           ::= &lt;source&gt;':{' 'topic:'&lt;string&gt; &lt;oper&gt;':'(&lt;string&gt;|&lt;number&gt;) '}'\n  source       ::= 'clock' | 'state' | 'timer'\n  oper         ::= 'eq' | 'ne' | 'lt' | 'gt' | 'le' | 'ge'\n\naction         ::= &lt;clock-action&gt; | &lt;mqtt-action&gt; | &lt;stmd-action&gt; | &lt;state-action&gt; | &lt;timer-action&gt;\n  clock-action ::= 'clock:{' 'topic:'&lt;string&gt; 'days:'&lt;days&gt; \n                           ['on:\"' &lt;0-23&gt;:&lt;0-59&gt; '\"' 'off:\"' &lt;0-23&gt;:&lt;0-59&gt; '\"'] '}'\n    days       ::= sum of selected days: sun=1,mon=2,tue=4,wed=8,thu=16,fri=32,sat=64\n  mqtt-action  ::= 'mqtt:{'  'topic:'&lt;string&gt; 'data:'&lt;string&gt; '}'\n  stmd-action  ::= 'stmd:{'  'ccmd:'&lt;phc-cmd&gt; *[';'&lt;phc-cmd&gt;] '}'\n  state-action ::= 'state:{' 'topic:'&lt;string&gt; 'value:'(&lt;string&gt;|&lt;number&gt;) '}'\n  timer-action ::= 'timer:{' 'topic:'&lt;string&gt; 'seconds:'0-4294967295 '}'\n\nkey-filters    ::= &lt;key-filter&gt; *[','&lt;key-filter&gt;]\nkey-filter     ::= &lt;string&gt; | '?' | '#' | '*')\ntopic-filter   ::= &lt;string&gt; | '?' | '#' | '*')\n  ?            ::= any character (1)\n  #            ::= 1 or more numerical digits\n  *            ::= any characters from this point on\n\ndata-filter    ::= &lt;OR-pattern&gt;\n  OR-pattern   ::= &lt;AND-pattern&gt; *['|' &lt;AND-pattern&gt;]\n  AND-pattern  ::= &lt;string&gt; *['&amp;' &lt;string&gt;]\n\nphc-cmd        ::= refer to the PHC Command Reference\nnumber         ::= ['-+'] *'0-9' [ '.' *'0-9']\nstring         ::= ['\"'] *&lt;any-character&gt; ['\"']\n</code></pre>"},{"location":"SimpleRuleServer/#internal-objects","title":"Internal Objects","text":"<p>SRSD knows a number of internal objects, they do not exist when SRSD starts but must be created/updated at runtime via an action rule or a state rule.</p> <p>These objects are persistent as long as SRSD is running, when the SRSD stops their values are lost.</p> <p>Each internal object has 3 attributes: - type   : can be clock, state or timer - topic  : a meaningful string describing the nature of the object - value  : the value of the object, this can be a string or a number with a maximum of 34 characters</p> <p>Each object can be referenced by type + topic in a condition  where it's value is compared to a condition-value to determine the flow of actions.</p> <p>When a non-existing object is referred in a condition, an temporary object will be created with default values depending on the object type, see below.</p>"},{"location":"SimpleRuleServer/#clock-object","title":"Clock Object","text":"<p>A clock object can be used to perform periodic actions by specifying an on and off time and the days to apply. It's default value is \"off\" (0).</p> <p>You can use it in an action, refer to Clock Action</p> <p>It will generate an event when it turns on or off, refer to Clock Event</p> <p>You can use it's on/off value in a Clock Condition, either as number or as string</p>"},{"location":"SimpleRuleServer/#state-object","title":"State Object","text":"<p>A state object can be used to store runtime data for later use. It's default value is \"\" (0).</p> <p>State objects can be created/updated implicitly with a State Rule  or explicitly with a State Action</p> <p>A state object cannot generate any events.</p> <p>You can use it's value in a condition, refer to State Condition</p>"},{"location":"SimpleRuleServer/#timer-object","title":"Timer Object","text":"<p>A timer object can be used to monitor the presence or absence of an event (dead man's switch),  it's unit of time is expressed in seconds. It's default value is \"off\" (0).</p> <p>You can use it in an action, refer to Timer Action</p> <p>It will generate an event when it starts/stops/expires, refer to Timer Event</p> <p>You can use it's on/off value in a condition, refer to Timer Condition</p>"},{"location":"SimpleRuleServer/#events","title":"Events","text":"<p>In general a rule is triggered by an event (unless otherwise stated)  which has 2 parts of information that uniquely define the event: topic and data. Each part has it's characteristic formats.</p>"},{"location":"SimpleRuleServer/#topic-formats","title":"Topic Formats","text":""},{"location":"SimpleRuleServer/#full","title":"Full","text":"<p>Fully identifies the object that generated the event, typically physical module + endpoint/channel: <pre><code>topic:sta/omd.0.out0\n</code></pre></p>"},{"location":"SimpleRuleServer/#partial","title":"Partial","text":"<p>Partially identifies part of the object that generated the event, typically the physical module: <pre><code>topic:sta/omd.0\n</code></pre></p>"},{"location":"SimpleRuleServer/#general","title":"General","text":"<p>Does not identify the object that generated the event, it is a placeholder for topic-filtering: <pre><code>topic:tzb/tele/SENSOR\n</code></pre></p>"},{"location":"SimpleRuleServer/#data-formats","title":"Data Formats","text":""},{"location":"SimpleRuleServer/#flat","title":"Flat","text":"<p>Has no formatting and is typically combined with a full-topic (equals xPhcLogd compatible STMD reporting format): <pre><code>flat-format ::= &lt;string&gt; | &lt;number&gt;\n  string    ::= *(a-z A-Z 0-9 _-/.)\n  number    ::= integer | floating\n</code></pre> Examples <pre><code>data=outlt1\ndata=0\ndata=-25.9\n</code></pre></p>"},{"location":"SimpleRuleServer/#json","title":"JSON","text":"<p>Follows the JSON syntax rules, allows multiple endpoints/attributes to be reported in key:value pairs: <pre><code>json-format    ::= '{' &lt;key&gt; ':' &lt;value&gt; *[',' &lt;key&gt; ':' &lt;value&gt;] '}'\n  key          ::= &lt;string&gt;\n  value        ::= &lt;string&gt; | &lt;number&gt; | &lt;object&gt; | &lt;array&gt; | &lt;boolean&gt; | &lt;null&gt;\n  string       ::= '\"' *(a-z A-Z 0-9 _-/.) '\"'\n  number       ::= integer | floating\n  object       ::= { &lt;key&gt; : &lt;value&gt; *[, &lt;key&gt; : &lt;value&gt;] }\n  array        ::= [ &lt;value&gt; *[, &lt;value&gt;] ]\n  boolean      ::= false | true\n  null         ::= null\n</code></pre> Examples <pre><code>data={\"out0\":1,\"out1\":1}\ndata={\"Name\":\"living/id3\",\"MultiInValue\":1,\"Click\":\"single\",\"Endpoint\":2,\"LinkQuality\":107}\n</code></pre></p>"},{"location":"SimpleRuleServer/#text","title":"Text","text":"<p>Similar to JSON format but without the syntax decoration, allows multiple endpoints/attributes to be reported in key:value pairs: <pre><code>text-format ::= &lt;key&gt; [':' &lt;value&gt;] *[',' &lt;key&gt; [':' &lt;value&gt;]]\n  key       ::= &lt;string&gt;\n  value     ::= &lt;string&gt; | &lt;number&gt;\n  string    ::= *(a-z A-Z 0-9 _-/.)\n  number    ::= integer | floating\n</code></pre> Examples <pre><code>data=out0:1,out1:1\n</code></pre></p>"},{"location":"SimpleRuleServer/#event-sources","title":"Event Sources","text":"<p>Events are generated by a source, these can be internal or external to the SRSD as explained here.</p>"},{"location":"SimpleRuleServer/#clock-event","title":"Clock Event","text":"<p>Internal source, generating an event when the specified clock turns on or off: <pre><code>when:{clock:{topic:daily data:on}}\nwhen:{clock:{topic:daily data:off}}\n</code></pre></p>"},{"location":"SimpleRuleServer/#http-event","title":"HTTP Event","text":"<p>External source, the result of an incoming HTTP request on the module's webserver,  topic and data are contained in the HTTP query-string: <pre><code>http-request ::= http://&lt;module-ip-address&gt;/srsd?&lt;query-string&gt;\nquery-string ::= &lt;topic&gt; [\"&amp;\"&lt;data&gt;]\n</code></pre></p> <p><pre><code>when:{http:{topic:ccmd data:imd.0.in0.outlt1}}\n</code></pre> The HTTP request that meets above event definition would be: <pre><code>http://&lt;module-ip-address&gt;/srsd?ccmd&amp;imd.0.in0.outlt1\n</code></pre></p>"},{"location":"SimpleRuleServer/#mqtt-event","title":"MQTT Event","text":"<p>External source, the result of the MQTT client receiving an incoming publish message that  matches any of the configured SRSD RX-Topic-Prefixes. Refer to Configure Simple Rule Server in the Phc2Mqtt manual: <pre><code>when:{mqtt:{topic:tzb/tele/SENSOR data:\"Click\\\":\\\"single&amp;Endpoint\\\":2\"}}\n</code></pre></p>"},{"location":"SimpleRuleServer/#stmd-event","title":"STMD Event","text":"<p>External source, generated by the STMD reporting function, topic and data format depend on the Reporting Format/Data Format: <pre><code>when:{stmd:{topic:evt/imd.0.in0 data:outlt1}}\nwhen:{stmd:{topic:evt/imd.0 data:\"in0:outlt1\"}}\nwhen:{stmd:{topic:evt/imd.0 data:\"in0\\\":\\\"outlt1\"}}\n</code></pre></p>"},{"location":"SimpleRuleServer/#system-event","title":"System Event","text":"<p>External source, will generate predefined events from the Phc2Mqtt module's sub-systems: <pre><code>when:{system:{topic:appl data:halting     }} ; module is going to halt\nwhen:{system:{topic:appl data:rebooting   }} ; module is going to reboot\nwhen:{system:{topic:mqtt data:connected   }} ; MQTT client connected to broker\nwhen:{system:{topic:mqtt data:disconnected}} ; MQTT client disconnected from broker\nwhen:{system:{topic:stmd data:started     }} ; STM daemon started\nwhen:{system:{topic:stmd data:stopped     }} ; STM daemon stopped\nwhen:{system:{topic:netw data:connected   }} ; network is online (got IP address)\nwhen:{system:{topic:netw data:disconnected}} ; network is offline (lost IP address)\n</code></pre> The reason of existence for the system events comes from the startup order of the module's sub-systems.  By default the SRSD will be started early during module boot.  At that moment other sub-systems are not yet started and thus cannot execute actions from init rules.</p> <p>By allowing SRSD to monitor when a given sub-system becomes active, you can take a matching action.  For instance, you want to know when the MQTT client is connected to the broker so you can publish an 'online' message.</p>"},{"location":"SimpleRuleServer/#timer-event","title":"Timer Event","text":"<p>Internal source, generating an event when the specified timer turns on/off or expires: <pre><code>when:{timer:{topic:watchdog data:on}}\nwhen:{timer:{topic:watchdog data:off}}\nwhen:{timer:{topic:watchdog data:expired}}\n</code></pre></p>"},{"location":"SimpleRuleServer/#event-filtering","title":"Event Filtering","text":"<p>For every incoming event the SRSD will iterate over the list of state/action-rules in the order they were defined. If the topic-filter and optional data-filter match then the rule will be executed, otherwise it will be skipped.</p>"},{"location":"SimpleRuleServer/#topic-filters","title":"Topic-filters","text":"<p>Are used to match the event topic and support wildcard characters: - A question-mark (?) means that the character in that position can be any character - A hashtag (#) means one or more numeric digits match - An asterisk (*) means all following characters are a match - All other characters (0-9,a-z,A-Z, _-/.) require a 1-on-1 case-sensitive match</p>"},{"location":"SimpleRuleServer/#data-filters","title":"Data-filters","text":"<p>Are used to match the event data and are composed from OR- and AND-patterns: - All strings in the AND-pattern must be present as-is (case-sensitive) in the event data for the AND-pattern to match - You can specify multiple AND-patterns combined in an OR-pattern, as soon as one AND-pattern matches, the data-filter matches</p>"},{"location":"SimpleRuleServer/#key-filters","title":"Key-filters","text":"<p>Are used in state-rules to extract key:value pairs from text/JSON event data and support wildcard characters: - A ? means that the character in that position can be any character - A # means one or more numeric digits match - An * means all following characters are a match - All other characters require a 1-on-1 case-sensitive match</p> <p>Samples for illustration: <pre><code>MQTT-event: tzb/tele/SENSOR = {\"Name\":\"outside/lumi_nw\",\"Illuminance\":24699,\"Endpoint\":1}\nrule      : state:{ mqtt:{topic:tzb/tele/SENSOR data:\"Name\\\":\\\"outside/lumi_nw\"}\n                    refine:{prefix:lumi keys:Illuminance} }\nresult    : state-topic=lumi/Illuminance state-value=24699\n</code></pre> <pre><code>STMD-event: sta/omd.0 = out0:1,out4:0,out7:1\nrule      : state:{ stmd:{topic:omd.# keys:out#} }\nresult    : state-topic=omd.0.out0 state-value=1\n            state-topic=omd.0.out4 state-value=0\n            state-topic=omd.0.out7 state-value=1\n</code></pre> <pre><code>MQTT-event: tzb/tele/SENSOR = {\"Name\":\"test/id1\",\"MultiInValue\":1,\"Click\":\"single\",\"Endpoint\":1,\"LinkQuality\":139}\nrule      : when:{ mqtt:{topic:tzb/tele/SENSOR data:\"Name\\\":\\\"test/id1&amp;Click\\\":\\\"single&amp;Endpoint\\\":1|Name\\\":\\\"test/id1&amp;Click\\\":\\\"single&amp;Endpoint\\\":2\"}}\n</code></pre> <pre><code>MQTT-event: p2m/evt/imw.8 = in0:ingt0\nMQTT-event: p2m/evt/imw.8 = in1:ingt0\nrule      : when:{ mqtt:{topic:p2m/evt/imw.8 data:\"in0:ingt0|in1:ingt0\"}}\n</code></pre> <pre><code>MQTT-event: test/parent.2/child.0  = value0:1\nMQTT-event: test/parent.31/child.0 = value0:1\nrule      : when:{ mqtt:{topic:test/parent.#/child.0 data:\"value0:1\"}}\n</code></pre></p>"},{"location":"SimpleRuleServer/#conditions","title":"Conditions","text":"<p>In addition to event filtering we can add one or more conditions to an action rule to determine a specific flow of actions in an and/then/else scheme, where each condition compares an internal object's value to a predefined value.</p> <p>When a condition refers a non-existing internal object, SRSD will use a temporary object with a default value.  Refer to Internal Objects for default values for each type of object.</p> <p>A condition compares the referenced object's value with the condition-value using an operator, when both values are a number (integer or floating) they will be compared numerical otherwise as text.</p> <p>The result of a condition will always be true or false, when multiple conditions are present then the result of each condition is AND-ed. In that case the global result will be true if all conditions are true.</p>"},{"location":"SimpleRuleServer/#clock-condition","title":"Clock Condition","text":"<p>Compares the actual state of a clock, following formats are supported: <pre><code>and:{clock:{topic:daily eq:on}} ; same as 1\nand:{clock:{topic:daily ne:off}}; same as 0\nand:{clock:{topic:daily eq:1}}  ; same as on\nand:{clock:{topic:daily ne:0}}  ; same as off\n</code></pre></p>"},{"location":"SimpleRuleServer/#state-condition","title":"State Condition","text":"<p>Compare the actual value of a state-object, can be specified either as a string or a number: <pre><code>and:{state:{topic:weather     eq:sunny}}\nand:{state:{topic:temperature lt:21.5}}\n</code></pre></p>"},{"location":"SimpleRuleServer/#timer-condition","title":"Timer Condition","text":"<p>Compares the actual state of a timer, following formats are supported: <pre><code>and:{timer:{topic:watchdog eq:on}} ; same as 1\nand:{timer:{topic:watchdog eq:off}}; same as 0\nand:{timer:{topic:watchdog eq:1}}  ; same as on\nand:{timer:{topic:watchdog eq:0}}  ; same as off\n</code></pre></p> <p>Examples: <pre><code>object    : state:{topic:weather value:rainy}\ncondition : and:{state:{topic:weather eq:sunny}}\nresult    : false\n</code></pre> <pre><code>object    : state:{topic;weather value:rainy}\ncondition : and:{state:{topic:weather lt:sunny}}\nresult    : true\n</code></pre> <pre><code>object    : state:{topic:weather value:rainy}\ncondition : and:{state:{topic:weather lt:sunny} \n                 state:{topic:weather eq:rainday}}\nresult    : false\n</code></pre> <pre><code>object    : state:{topic:temperature value:25.0}\ncondition : and:{state:{topic:temperature eq:25}}\nresult    : true\n</code></pre> One or more and conditions can be specified and when evaluating to true  SRSD will execute all following then actions after which the rule ends: <pre><code>when:{ *&lt;event&gt; }\n*[and:{ *&lt;cond&gt; } then:{ *&lt;action&gt; } ]\n</code></pre> This and/then pattern can be repeated with the same behaviour explained above.</p> <p>When all previous conditions were not met then SRSD will execute all else actions, if present: <pre><code>*[else &lt;action&gt;]\n</code></pre></p>"},{"location":"SimpleRuleServer/#actions","title":"Actions","text":""},{"location":"SimpleRuleServer/#clock-action","title":"Clock Action","text":"<p>With this action you can stop a clock by setting days to 0,  or start it by setting days to the or-ed value of each required day and specifying the on and off time: <pre><code>then:{clock:{topic:daily days:0}}\nthen:{clock:{topic:daily days:127 on:\"7:00\" off:\"22:00\"}}\n</code></pre></p>"},{"location":"SimpleRuleServer/#mqtt-action","title":"MQTT Action","text":"<p>With this action you can send an MQTT publish message via the module's MQTT client, with the specified topic and data. <pre><code>then:{mqtt:{topic:tzb/cmnd/ZbSend data:\"{\\\"device\\\":\\\"office/od4\\\",\\\"send\\\":{\\\"power\\\":\\\"toggle\\\"}}\"}}\nthen:{mqtt:{topic:m2p/cmd/ccmd data:\"omd.0.out0.toggle;omd.4.out7.toggle\"}}\nthen:{mqtt:{topic:m2p/cmd/ccmd data:omd.0.out0.ontimed.30}}\n</code></pre></p>"},{"location":"SimpleRuleServer/#stmd-action","title":"STMD Action","text":"<p>Send a list of phc-cmd's (ccmd) to the module's STMD sub-system, which will handle the commands depending on it's Operating Mode. <pre><code>then:{stmd:{ccmd:\"jrm.1.out0.stop.0;jrm.1.out0.delayedup.0.0.5.150\"}}\n</code></pre></p>"},{"location":"SimpleRuleServer/#state-action","title":"State Action","text":"<p>With this action you explicitly create or update an internal state-object that you can use in a condition. The state-object  value can store upto 34 characters of string data, any longer data is truncated. <pre><code>then:{state:{topic:weather value:sunny}}\nthen:{state:{topic:temperature value:21.6}}\n</code></pre></p>"},{"location":"SimpleRuleServer/#timer-action","title":"Timer Action","text":"<p>With this action you can stop a timer by setting seconds to 0, or start it by setting seconds to a non-zero value: <pre><code>then:{timer:{topic:watchdog seconds:0}}\nthen:{timer:{topic:watchdog seconds:60}}\n</code></pre></p>"},{"location":"SimpleRuleServer/#rules","title":"Rules","text":""},{"location":"SimpleRuleServer/#init-rule","title":"Init Rule","text":"<p>When the SRSD starts it will execute all init rules without the need for an event to trigger the rule.</p> <p>An init rule executes any action but be aware that not all actions may execute as the targeted sub-system may not yet be active.</p> <p>When the Phc2Mqtt module boots, the different sub-systems will start each in turn. Typically STMD first, then SRSD, Wifi, HTTP server and MQTT client. In this case it will not be possible to send an MQTT message in an init rule. Checkout the system events to handle this problem.</p> <p>Ofcourse SRSD can also be started manually from the configuration page, at that moment the rest of the module is fully operational and it will be possible to send an MQTT message.</p> <pre><code>init:{\n state:{topic:sta/daynight value:day}\n mqtt :{topic:sta/srsd     data:online}\n stmd :{ccmd:\"imw.0.led4.blink;omd.0.out0.on\"}\n timer:{topic:watchdog     seconds:60}\n clock:{topic:daily        days:127 on:\"7:00\" off:\"22:00\"}\n}\n</code></pre>"},{"location":"SimpleRuleServer/#exit-rule","title":"Exit Rule","text":"<p>When the SRSD stops it will execute all exit rules without the need for an event to trigger the rule.</p> <p>An exit rule executes any action but note that some actions make no sense (state/timer/clock) as the SRSD will stop any activity. <pre><code>exit:{\n state:{topic:sta/daynight value:none}\n mqtt :{topic:sta/srsd     data:offline}\n stmd :{ccmd:\"imw.0.led4.off;omd.0.out0.off\"}\n timer:{topic:watchdog     seconds:0}\n clock:{topic:daily        days:0}\n}\n</code></pre></p>"},{"location":"SimpleRuleServer/#state-rule","title":"State Rule","text":"<p>State rules are triggered by incoming events when matching the topic-filter and optional data-filter.</p> <p>Their purpose is to extract information from the event-topic/event-data and store that into one or more state-objects for later reference.</p> <p>A state-object's value can store upto 34 characters of string data, any longer data is truncated.</p> <p>The simplest form of a state rule will use the event-topic as state-object topic and copy the event-data to the state-object's value.</p> <p>To accomplish more complex transformations you can refine the rule with the &lt;modifier&gt; and/or keys parameters.  Depending on their combination the resulting state-objects will have a different topic and value as specified below: <pre><code>modifier | keys | state-object-topic             | state-object-value\n---------+------+--------------------------------+--------------------\n-        | -    | &lt;evt-topic&gt;                    | &lt;evt-data&gt;\n-        | x    | &lt;evt-topic&gt;/&lt;key-name&gt;         | &lt;key-value&gt;\ninfix    | -    | &lt;evt-topic&gt;/&lt;infix&gt;            | &lt;evt-data&gt;\ninfix    | x    | &lt;evt-topic&gt;/&lt;infix&gt;/&lt;key-name&gt; | &lt;key-value&gt;\nprefix   | -    | &lt;prefix&gt;                       | &lt;evt-data&gt;\nprefix   | x    | &lt;prefix&gt;/&lt;key-name&gt;            | &lt;key-value&gt;\nname     | -    | &lt;name&gt;                         | &lt;evt-data&gt;\nname     | x    | &lt;name&gt;                         | &lt;key-value&gt;\n</code></pre></p>"},{"location":"SimpleRuleServer/#keys","title":"keys","text":"<p>Events with a full topic typically have flat data associated with it,  to handle this we do not use the &lt;modifier&gt; nor &lt;keys&gt; parameters.</p> <p>The resulting state-object's topic will be equal to the event's topic, and it's value equal to the event's data. This rule format covers the xPhcLogd compatible STMD reporting format.</p> <p>All other events with a partial or general topic will typically have text or JSON formated data with key/value pairs, the SRSD will parse them as follows.</p> <p>Text format data: The event data is first split into key/value pairs with a comma as separator, then split into key-name and key-value with a colon as separator: <pre><code>Event data : out0:1,out1:0,out2:0,out3:0,out4:0,out5:1,out6:0,out7:0\nParsed as  : key-name=out0 key-value=1\n             key-name=out1 key-value=0\n             key-name=out2 key-value=0\n             key-name=out3 key-value=0\n             key-name=out4 key-value=0\n             key-name=out5 key-value=1\n             key-name=out6 key-value=0\n             key-name=out7 key-value=0\n</code></pre> JSON format data: The event data is parsed following the JSON specification: <pre><code>Event data : {\"Device\":\"0x73C9\",\"Name\":\"outside/lumi_nw\",\"Illuminance\":24699,\"Endpoint\":1}\nParsed as  : key-name=Device      key-value=0x73C9\n             key-name=Name        key-value=outside/lumi_nw\n             key-name=Illuminance key-value=24699\n             key-name=Endpoint    key-value=1\n</code></pre> For each parsed key present in the keys parameter, SRSD will create/update a state-object to store the key-value.</p>"},{"location":"SimpleRuleServer/#examples","title":"examples","text":"<p><pre><code>event       : topic=sta/omd.0.out0 data=1\nrule        : state:{\n               stmd:{topic:sta/omd.0.out0}\n              }\nstate-object: topic=sta/omd.0.out0 value=1\n</code></pre> <pre><code>event       : topic=evt/imd.0.in0 data=outlt1\nrule        : state:{\n               stmd:{topic:evt/imd.0.in0}\n              }\nstate-object: topic=evt/imd.0.in0 value=outlt1\n</code></pre> <pre><code>event       : topic=sta/omd.0 data=out0:1,out4:0,out7:1\nrule        : state:{\n               stmd:{topic:sta/omd.0 keys:out#}\n              }\nstate-object: topic=sta/omd.0.out0 value=1\n              topic=sta/omd.0.out4 value=0\n              topic=sta/omd.0.out7 value=1\n</code></pre> <pre><code>event       : topic=tzb/tele/SENSOR data={\"Device\":\"0x73C9\",\"Name\":\"outside/lumi_nw\",\"Illuminance\":24699,\"Endpoint\":1}\nrule        : state:{\n               mqtt:{topic:tzb/tele/SENSOR data:outside/lumi_nw} \n               refine:{infix:lumi keys:Illuminance}\n              }\nstate-object: topic=tzb/tele/SENSOR/lumi/Illuminance value=24699\n</code></pre> <pre><code>event       : topic=tzb/tele/SENSOR data={\"Device\":\"0x73C9\",\"Name\":\"outside/lumi_nw\",\"Illuminance\":24699,\"Endpoint\":1}\nrule        : state:{\n               mqtt:{topic:tzb/tele/SENSOR data:outside/lumi_nw} \n               refine:{prefix:lumi keys:Illuminance,Endpoint}\n              }\nstate-object: topic=lumi/Illuminance value=24699\n              topic=lumi/Endpoint value=1\n</code></pre> <pre><code>event       : topic=sta/omd.0 data=out0:1\nrule        : state:{\n               stmd topic:sta/omd.0 data:out0} \n               refine:{keys:out0 name:bathroom/light}\n              }\nstate-object: topic=bathroom/light value=1\n</code></pre></p>"},{"location":"SimpleRuleServer/#action-rule","title":"Action Rule","text":"<p>Action rules are triggered by an incoming event when matching the topic-filter and optional data-filter,  see event filtering for details.</p> <p>Additional conditions may be defined that determine the flow of actions executed.</p>"},{"location":"SimpleRuleServer/#rule-samples","title":"Rule Samples","text":""},{"location":"SimpleRuleServer/#samples-for-text-or-json-report-format","title":"Samples for Text or JSON report format","text":"<p>Warning</p> <p>These sample rules expect the STMD Reporting Format to be 'Text' or 'JSON' and Data Format to be 'Binary'.</p> <p>Simple controlling one or more outputs with one or more buttons: <pre><code>action:{\n when:{\n  ; clicking on a PHC button will trigger\n  stmd:{ topic:evt/imw.13 data:\"in4:outlt1\" }\n\n  ; or clicking on an Aqara Opple 3 band Zigbee button\n  mqtt:{ topic:tzb/tele/SENSOR data:\"Name\\\":\\\"aqara/inputs&amp;Click\\\":\\\"single&amp;Endpoint\\\":4\" }\n }; when\n\n then:{\n  ; toggle a PHC output\n  stmd:{ ccmd:omd.4.out0.toggle }\n\n  ; send multiple commands, note the double quotes are needed for the ; between the commands\n  stmd:{ ccmd:\"omd.4.out0.toggle;omd.4.out3.ontimed.5\" }\n\n  ; toggle an IKEA Zigbee outlet\n  mqtt:{ topic:tzb/cmnd/ZbSend data:\"{\\\"device\\\":\\\"ikea/outlet\\\",\\\"send\\\":{\\\"power\\\":\\\"toggle\\\"}}\" }\n }; then\n}; action\n</code></pre></p>"},{"location":"SimpleRuleServer/#samples-for-xphclogd-report-format","title":"Samples for xPhcLogd report format","text":"<p>Warning</p> <p>These sample rules expect the STMD Reporting Format to be 'xPhcLogd compatible' and Data Format to be 'Binary'.</p> <p>Simple controlling one or more outputs with one or more buttons: <pre><code>action:{\n when:{\n  ; clicking on a PHC button will trigger\n  stmd:{ topic:evt/imw.13.in4 data:outlt1 }\n\n  ; or clicking on an Aqara Opple 3 band Zigbee button\n  mqtt:{ topic:tzb/tele/SENSOR data:\"Name\\\":\\\"aqara/inputs&amp;Click\\\":\\\"single&amp;Endpoint\\\":4\" }\n }; when\n\n then:{\n  ; toggle a PHC output\n  stmd:{ ccmd:omd.4.out0.toggle }\n\n  ; toggle an IKEA Zigbee outlet\n  mqtt:{ topic:tzb/cmnd/ZbSend data:\"{\\\"device\\\":\\\"ikea/outlet\\\",\\\"send\\\":{\\\"power\\\":\\\"toggle\\\"}}\" }\n }; then\n}; action\n</code></pre></p> <p>Controlling a PHC shutter with 2 PHC buttons: <pre><code>action:{\n ; stop the shutter\n when:{\n  stmd:{ topic:evt/imw.11.in0 data:ingt0 }\n  stmd:{ topic:evt/imw.11.in1 data:ingt0 }\n }; when\n\n then:{\n  stmd:{ ccmd:jrm.5.out2.stop.0 }\n }; then\n}; action\n\naction:{\n ; lower the shutter 15 seconds then lift 2 seconds to give some openings\n when:{\n  stmd:{ topic:evt/imw.11.in0 data:ingt1 }\n };when\n then:{\n  stmd:{ ccmd:jrm.5.out2.delayeddowntip.0.0.1.150.20 }\n }; then\n}; action\n\naction:{\n ; raise the shutter 15 seconds all the way up\n when:{\n  stmd:{ topic:evt/imw.11.in1 data:ingt1 }\n };when\n then:{\n  stmd:{ ccmd:jrm.5.out2.delayedup.0.0.1.150 }\n }; then\n}; action\n</code></pre></p> <p>Using a Zigbee humidity sensor to drive a bathroom ventilator: <pre><code>init:{\n ; initialise the fan state to on\n state:{ topic:bathroom/fan value:on }\n stmd :{ ccmd:omd.2.out5.on }\n}; init\n\nstate:{\n ; collect runtime sensor data\n mqtt:{ topic:tzb/tele/SENSOR data:bathroom/sensor }\n refine:{ prefix:bathroom/sensor keys:Temperature,Humidity}\n}; state\n\naction:{\n ; let new humidity reading trigger the rule\n when:{\n  mqtt:{ topic:tzb/tele/SENSOR data:bathroom/sensor&amp;Humidity\" }\n }; when\n\n ; if fan off and humidity more than 75% then turn fan on\n and:{\n  state:{ topic:bathroom/fan eq:off }\n  state:{ topic:bathroom/sensor/Humidity gt:75 }\n }; if\n\n then:{\n  state:{ topic:bathroom/fan value:on }\n  stmd :{ ccmd:omd.2.out5.on }\n }; then\n\n ; if fan on and humidity less than 70% then turn fan off\n and:{\n  state:{ topic:bathroom/fan eq:on }\n  state:{ topic:bathroom/sensor/Humidity lt:70 }\n }; if\n\n then:{\n  state:{ topic:bathroom/fan value:off }\n  stmd :{ ccmd:omd.2.out5.off }\n }; then\n}; action\n</code></pre></p> <p>Automatic night lights with a Zigbee light sensor: <pre><code>init:{\n ; initialise to night as the sensor will send updates during day\n state:{ topic:daynight value:night }\n stmd :{ ccmd:\"omd.0.out4.on;omd.4.out2.on\" }\n}; init\n\nstate:{\n ; collect runtime sensor data\n mqtt:{ topic:tzb/tele/SENSOR data:outside/lumi_nw }\n refine:{ prefix:outside keys:Illuminance }\n}; state\n\naction:{\n ; let new illuminance reading trigger the rule\n when:{\n  mqtt:{ topic:tzb/tele/SENSOR data:outside/lumi_nw&amp;Illuminance\" }\n }; when\n\n ; going from day to night -&gt; turn on lights\n and:{\n  state:{ topic:daynight eq:day }\n  state:{ topic:outside/Illuminance lt:5000 }\n }; if\n\n then:{\n  state:{ topic:daynight value:night }\n  stmd :{ ccmd:\"omd.0.out4.on;omd.4.out2.on\" }\n }; then\n\n ; going from night to day -&gt; turn off lights\n and:{\n  state:{ topic:daynight eq:night }\n  state:{ topic:outside/Illuminance gt:5500 }\n }; if\n\n then:{\n  state:{ topic:daynight value:day }\n  stmd :{ ccmd:\"omd.0.out4.off;omd.4.out2.off\" }\n }; then\n}; action\n</code></pre></p> <p>Sample how to step through a series of state values pressing a button: <pre><code>; set initial color\ninit:{ state:{ topic:mycolor value:white } }\n\naction:{\n ; each time you press/release a button\n when:{ stmd:{ topic:evt/imw.8.in0 data:outlt1 } }\n\n and: { state:{ topic:mycolor eq:white } }\n then:{ state:{ topic:mycolor value:blue } }\n\n and: { state:{ topic:mycolor eq:blue } }\n then:{ state:{ topic:mycolor value:green } }\n\n and: { state:{ topic:mycolor eq:green } }\n then:{ state:{ topic:mycolor value:cyan } }\n\n and: { state:{ topic:mycolor eq:cyan } }\n then:{ state:{ topic:mycolor value:red } }\n\n and: { state:{ topic:mycolor eq:red } }\n then:{ state:{ topic:mycolor value:purple } }\n\n and: { state:{ topic:mycolor eq:purple } }\n then:{ state:{ topic:mycolor value:yellow } }\n\n else:{ state:{ topic:mycolor value:white } }\n}; action\n</code></pre></p>"},{"location":"Upgrading/","title":"Upgrading","text":"<p>The first rule of upgrading: If it ain't broke, don't fix it!</p> <p>In other words, ensure that there is a good reason to mess with a working installation (e.g., a need to use a new feature or address a found problem fixed in the current version).</p> <p>Phc2Mqtt provides 2 ways of upgrading.</p>"},{"location":"Upgrading/#upgrade-by-file-upload","title":"Upgrade by file upload","text":"<p>Upgrading the device firmware over-the-air, aka OTA, is the most convenient way to upgrade. </p> <p>To start the upgrade, open a web browser to your device's IP-address, you will get the main menu. </p> <p> </p> <p>Now select Firmware Upgrade.</p> <p> </p> <p>Select a firmware file suitable for your module and press Start Upgrade</p>"},{"location":"Upgrading/#upgrade-via-serial-connection","title":"Upgrade via serial connection","text":"<p>Upgrade over the serial connection using serial-to-USB adapter.</p>"},{"location":"Upgrading/#flash-new-firmware-without-erasing","title":"Flash new firmware without erasing","text":""},{"location":"Upgrading/#flash-new-firmware-with-erasing","title":"Flash new firmware with erasing","text":"<p>Upload the new version over serial using the same process as in Flashing but DO NOT erase flash. The new binary will overwrite the old one and keep your settings.</p>"},{"location":"phc/alp/","title":"Alp","text":"<pre><code>;\n; Generic template for alp modules\n;\nmodule  id=alp.&lt;addr&gt;\nchannel id=out0 desc=out0\nchannel id=out1 desc=out1\nchannel id=out2 desc=out2\nchannel id=out3 desc=out3\nchannel id=out4 desc=out4\nchannel id=out5 desc=out5\nchannel id=out6 desc=out6\nchannel id=out7 desc=out7\nchannel id=fb0 desc=fb0 events=on,off\nchannel id=fb1 desc=fb1 events=on,off\nchannel id=fb2 desc=fb2 events=on,off\nchannel id=fb3 desc=fb3 events=on,off\nchannel id=fb4 desc=fb4 events=on,off\nchannel id=fb5 desc=fb5 events=on,off\nchannel id=fb6 desc=fb6 events=on,off\nchannel id=fb7 desc=fb7 events=on,off;\n</code></pre>"},{"location":"phc/ama/","title":"Ama","text":"<pre><code>;\n; Generic template for ama modules\n;\nmodule  id=ama.&lt;addr&gt;\nchannel id=in0  desc=in0 events=on,off,lower,equal,higher,trimon,trimoff\nchannel id=out0 desc=out0\nchannel id=fb0  desc=fb0 events=on,off,lower,equal,higher,trimon,trimoff;\n</code></pre>"},{"location":"phc/amd230_10/","title":"Amd230 10","text":"<pre><code>;\n; Generic template for amd230_10 modules\n;\nmodule  id=amd230_10.&lt;addr&gt;\nchannel id=out0 desc=out0\nchannel id=out1 desc=out1\nchannel id=out2 desc=out2\nchannel id=out3 desc=out3\nchannel id=out4 desc=out4\nchannel id=out5 desc=out5\nchannel id=out6 desc=out6\nchannel id=out7 desc=out7\nchannel id=fb0 desc=fb0 events=on,off\nchannel id=fb1 desc=fb1 events=on,off\nchannel id=fb2 desc=fb2 events=on,off\nchannel id=fb3 desc=fb3 events=on,off\nchannel id=fb4 desc=fb4 events=on,off\nchannel id=fb5 desc=fb5 events=on,off\nchannel id=fb6 desc=fb6 events=on,off\nchannel id=fb7 desc=fb7 events=on,off;\n</code></pre>"},{"location":"phc/amd230_10_man_ext/","title":"Amd230 10 man ext","text":"<pre><code>;\n; Generic template for amd230_10_man_ext modules\n;\nmodule  id=amd230_10_man_ext.&lt;addr&gt;\nchannel id=out0 desc=out0\nchannel id=out1 desc=out1\nchannel id=out2 desc=out2\nchannel id=out3 desc=out3\nchannel id=out4 desc=out4\nchannel id=out5 desc=out5\nchannel id=out6 desc=out6\nchannel id=out7 desc=out7\nchannel id=fb0  desc=fb0 events=on,off,expired,reset\nchannel id=fb1  desc=fb1 events=on,off,expired,reset\nchannel id=fb2  desc=fb2 events=on,off,expired,reset\nchannel id=fb3  desc=fb3 events=on,off,expired,reset\nchannel id=fb4  desc=fb4 events=on,off,expired,reset\nchannel id=fb5  desc=fb5 events=on,off,expired,reset\nchannel id=fb6  desc=fb6 events=on,off,expired,reset\nchannel id=fb7  desc=fb7 events=on,off,expired,reset;\n</code></pre>"},{"location":"phc/amd230_16/","title":"Amd230 16","text":"<pre><code>;\n; Generic template for amd230_16 modules\n;\nmodule  id=amd230_16.&lt;addr&gt;\nchannel id=out0 desc=out0\nchannel id=out1 desc=out1\nchannel id=out2 desc=out2\nchannel id=out3 desc=out3\nchannel id=out4 desc=out4\nchannel id=out5 desc=out5\nchannel id=out6 desc=out6\nchannel id=out7 desc=out7\nchannel id=fb0 desc=fb0 events=on,off\nchannel id=fb1 desc=fb1 events=on,off\nchannel id=fb2 desc=fb2 events=on,off\nchannel id=fb3 desc=fb3 events=on,off\nchannel id=fb4 desc=fb4 events=on,off\nchannel id=fb5 desc=fb5 events=on,off\nchannel id=fb6 desc=fb6 events=timeron,timerabort,timeroff\nchannel id=fb7 desc=fb7 events=timeron,timerabort,timeroff;\n</code></pre>"},{"location":"phc/amd230_16_man_ext/","title":"Amd230 16 man ext","text":"<pre><code>;\n; Generic template for amd230_16_man_ext modules\n;\nmodule  id=amd230_16_man_ext.&lt;addr&gt;\nchannel id=out0 desc=out0\nchannel id=out1 desc=out1\nchannel id=out2 desc=out2\nchannel id=out3 desc=out3\nchannel id=out4 desc=out4\nchannel id=out5 desc=out5\nchannel id=out6 desc=out6\nchannel id=out7 desc=out7\nchannel id=fb0  desc=fb0 events=on,off,expired,reset\nchannel id=fb1  desc=fb1 events=on,off,expired,reset\nchannel id=fb2  desc=fb2 events=on,off,expired,reset\nchannel id=fb3  desc=fb3 events=on,off,expired,reset\nchannel id=fb4  desc=fb4 events=on,off,expired,reset\nchannel id=fb5  desc=fb5 events=on,off,expired,reset\nchannel id=fb6  desc=fb6 events=on,off,expired,reset\nchannel id=fb7  desc=fb7 events=on,off,expired,reset;\n</code></pre>"},{"location":"phc/amd230_4/","title":"Amd230 4","text":"<pre><code>;\n; Generic template for amd230_4 modules\n;\nmodule  id=amd230_4.&lt;addr&gt;\nchannel id=out0 desc=out0\nchannel id=out1 desc=out1\nchannel id=out2 desc=out2\nchannel id=out3 desc=out3\nchannel id=out4 desc=out4\nchannel id=out5 desc=out5\nchannel id=out6 desc=out6\nchannel id=out7 desc=out7\nchannel id=fb0 desc=fb0 events=on,off\nchannel id=fb1 desc=fb1 events=on,off\nchannel id=fb2 desc=fb2 events=on,off\nchannel id=fb3 desc=fb3 events=on,off\nchannel id=fb4 desc=fb4 events=on,off\nchannel id=fb5 desc=fb5 events=on,off\nchannel id=fb6 desc=fb6 events=on,off\nchannel id=fb7 desc=fb7 events=on,off;\n</code></pre>"},{"location":"phc/amd230_4_man_ext/","title":"Amd230 4 man ext","text":"<pre><code>;\n; Generic template for amd230_4_man_ext modules\n;\nmodule  id=amd230_4_man_ext.&lt;addr&gt;\nchannel id=out0 desc=out0\nchannel id=out1 desc=out1\nchannel id=out2 desc=out2\nchannel id=out3 desc=out3\nchannel id=out4 desc=out4\nchannel id=out5 desc=out5\nchannel id=out6 desc=out6\nchannel id=out7 desc=out7\nchannel id=fb0 desc=fb0 events=on,off,expired,reset\nchannel id=fb1 desc=fb1 events=on,off,expired,reset\nchannel id=fb2 desc=fb2 events=on,off,expired,reset\nchannel id=fb3 desc=fb3 events=on,off,expired,reset\nchannel id=fb4 desc=fb4 events=on,off,expired,reset\nchannel id=fb5 desc=fb5 events=on,off,expired,reset\nchannel id=fb6 desc=fb6 events=on,off,expired,reset\nchannel id=fb7 desc=fb7 events=on,off,expired,reset;\n</code></pre>"},{"location":"phc/amd_evg/","title":"Amd evg","text":"<pre><code>;\n; Generic template for amd_evg modules\n;\nmodule  id=amd_evg.&lt;addr&gt;\nchannel id=out0 desc=out0\nchannel id=out1 desc=out1\nchannel id=out2 desc=out2\nchannel id=out3 desc=out3\nchannel id=out4 desc=out4\nchannel id=out5 desc=out5\nchannel id=out6 desc=out6\nchannel id=out7 desc=out7\nchannel id=fb0 desc=fb0 events=on,off\nchannel id=fb1 desc=fb1 events=on,off\nchannel id=fb2 desc=fb2 events=on,off\nchannel id=fb3 desc=fb3 events=on,off\nchannel id=fb4 desc=fb4 events=on,off\nchannel id=fb5 desc=fb5 events=on,off\nchannel id=fb6 desc=fb6 events=on,off\nchannel id=fb7 desc=fb7 events=on,off;\n</code></pre>"},{"location":"phc/dim_ab/","title":"Dim ab","text":"<pre><code>;\n; Generic template for dim_ab modules\n;\nmodule  id=dim_ab.&lt;addr&gt;\nchannel id=out0 desc=out0\nchannel id=out1 desc=out1\nchannel id=fb0 desc=fb0 events=on,off,dimmed,dimmedup,dimmeddown\nchannel id=fb1 desc=fb1 events=on,off,dimmed,dimmedup,dimmeddown;\n</code></pre>"},{"location":"phc/dim_ab1000/","title":"Dim ab1000","text":"<pre><code>;\n; Generic template for dim_ab1000 modules\n;\nmodule  id=dim_ab1000.&lt;addr&gt;\nchannel id=out0 desc=out0\nchannel id=out1 desc=out1\nchannel id=fb0 desc=fb0 events=on,off,dimmed,dimmedup,dimmeddown\nchannel id=fb1 desc=fb1 events=on,off,dimmed,dimmedup,dimmeddown;\n</code></pre>"},{"location":"phc/dim_an/","title":"Dim an","text":"<pre><code>;\n; Generic template for dim_an modules\n;\nmodule  id=dim_an.&lt;addr&gt;\nchannel id=out0 desc=out0\nchannel id=out1 desc=out1\nchannel id=fb0 desc=fb0 events=on,off,dimmed,dimmedup,dimmeddown\nchannel id=fb1 desc=fb1 events=on,off,dimmed,dimmedup,dimmeddown;\n</code></pre>"},{"location":"phc/dim_an1000/","title":"Dim an1000","text":"<pre><code>;\n; Generic template for dim_an1000 modules\n;\nmodule  id=dim_an1000.&lt;addr&gt;\nchannel id=out0 desc=out0\nchannel id=out1 desc=out1\nchannel id=fb0 desc=fb0 events=on,off,dimmed,dimmedup,dimmeddown\nchannel id=fb1 desc=fb1 events=on,off,dimmed,dimmedup,dimmeddown;\n</code></pre>"},{"location":"phc/dim_dali_8_ext/","title":"Dim dali 8 ext","text":"<pre><code>;\n; Generic template for dim_dali_8_ext modules\n;\nmodule  id=dim_dali_8_ext.&lt;addr&gt;\nchannel id=out0 desc=out0\nchannel id=out1 desc=out1\nchannel id=out2 desc=out2\nchannel id=out3 desc=out3\nchannel id=out4 desc=out4\nchannel id=out5 desc=out5\nchannel id=out6 desc=out6\nchannel id=out7 desc=out7\nchannel id=fb0 desc=fb0 events=on,off,dimmed,dimmedup,dimmeddown,trimmed,detected,cleared\nchannel id=fb1 desc=fb1 events=on,off,dimmed,dimmedup,dimmeddown,trimmed,detected,cleared\nchannel id=fb2 desc=fb2 events=on,off,dimmed,dimmedup,dimmeddown,trimmed,detected,cleared\nchannel id=fb3 desc=fb3 events=on,off,dimmed,dimmedup,dimmeddown,trimmed,detected,cleared\nchannel id=fb4 desc=fb4 events=on,off,dimmed,dimmedup,dimmeddown,trimmed,detected,cleared\nchannel id=fb5 desc=fb5 events=on,off,dimmed,dimmedup,dimmeddown,trimmed,detected,cleared\nchannel id=fb6 desc=fb6 events=on,off,dimmed,dimmedup,dimmeddown,trimmed,detected,cleared\nchannel id=fb7 desc=fb7 events=on,off,dimmed,dimmedup,dimmeddown,trimmed,detected,cleared;\n</code></pre>"},{"location":"phc/dim_sab/","title":"Dim sab","text":"<pre><code>;\n; Generic template for dim_sab modules\n;\nmodule  id=dim_sab.&lt;addr&gt;\nchannel id=out0 desc=out0\nchannel id=fb0 desc=fb0 events=on,off;\n</code></pre>"},{"location":"phc/dim_san/","title":"Dim san","text":"<pre><code>;\n; Generic template for dim_san modules\n;\nmodule  id=dim_san.&lt;addr&gt;\nchannel id=out0 desc=out0\nchannel id=fb0 desc=fb0 events=on,off;\n</code></pre>"},{"location":"phc/dim_uni/","title":"Dim uni","text":"<pre><code>;\n; Generic template for dim_uni modules\n;\nmodule  id=dim_uni.&lt;addr&gt;\nchannel id=out0 desc=out0\nchannel id=fb0 desc=fb0 events=on,off,dimmed,dimmedup,dimmeddown;\n</code></pre>"},{"location":"phc/emd230/","title":"Emd230","text":"<pre><code>;\n; Generic template for emd230 modules\n;\nmodule  id=emd230.&lt;addr&gt;\nchannel id=in0 desc=in0 events=ingt0,outlt1,ingt1,outgt1,ingt2\nchannel id=in1 desc=in1 events=ingt0,outlt1,ingt1,outgt1,ingt2\nchannel id=in2 desc=in2 events=ingt0,outlt1,ingt1,outgt1,ingt2\nchannel id=in3 desc=in3 events=ingt0,outlt1,ingt1,outgt1,ingt2\nchannel id=in4 desc=in4 events=ingt0,outlt1,ingt1,outgt1,ingt2\nchannel id=in5 desc=in5 events=ingt0,outlt1,ingt1,outgt1,ingt2\nchannel id=in6 desc=in6 events=ingt0,outlt1,ingt1,outgt1,ingt2\nchannel id=in7 desc=in7 events=ingt0,outlt1,ingt1,outgt1,ingt2;\n</code></pre>"},{"location":"phc/emd24/","title":"Emd24","text":"<pre><code>;\n; Generic template for emd24 modules\n;\nmodule  id=emd24.&lt;addr&gt;\nchannel id=in0 desc=in0 events=ingt0,outlt1,ingt1,outgt1,ingt2\nchannel id=in1 desc=in1 events=ingt0,outlt1,ingt1,outgt1,ingt2\nchannel id=in2 desc=in2 events=ingt0,outlt1,ingt1,outgt1,ingt2\nchannel id=in3 desc=in3 events=ingt0,outlt1,ingt1,outgt1,ingt2\nchannel id=in4 desc=in4 events=ingt0,outlt1,ingt1,outgt1,ingt2\nchannel id=in5 desc=in5 events=ingt0,outlt1,ingt1,outgt1,ingt2\nchannel id=in6 desc=in6 events=ingt0,outlt1,ingt1,outgt1,ingt2\nchannel id=in7 desc=in7 events=ingt0,outlt1,ingt1,outgt1,ingt2\nchannel id=in8 desc=in8 events=ingt0,outlt1,ingt1,outgt1,ingt2\nchannel id=in9 desc=in9 events=ingt0,outlt1,ingt1,outgt1,ingt2\nchannel id=in10 desc=in10 events=ingt0,outlt1,ingt1,outgt1,ingt2\nchannel id=in11 desc=in11 events=ingt0,outlt1,ingt1,outgt1,ingt2\nchannel id=in12 desc=in12 events=ingt0,outlt1,ingt1,outgt1,ingt2\nchannel id=in13 desc=in13 events=ingt0,outlt1,ingt1,outgt1,ingt2\nchannel id=in14 desc=in14 events=ingt0,outlt1,ingt1,outgt1,ingt2\nchannel id=in15 desc=in15 events=ingt0,outlt1,ingt1,outgt1,ingt2\nchannel id=led0 desc=led0\nchannel id=led1 desc=led1\nchannel id=led2 desc=led2\nchannel id=led3 desc=led3\nchannel id=led4 desc=led4\nchannel id=led5 desc=led5\nchannel id=led6 desc=led6\nchannel id=led7 desc=led7;\n</code></pre>"},{"location":"phc/emd_24s/","title":"Emd 24s","text":"<pre><code>;\n; Generic template for emd_24s modules\n;\nmodule  id=emd_24s.&lt;addr&gt;\nchannel id=in0 desc=in0 events=ingt0,outlt1,ingt1,outgt1,ingt2\nchannel id=in1 desc=in1 events=ingt0,outlt1,ingt1,outgt1,ingt2\nchannel id=in2 desc=in2 events=ingt0,outlt1,ingt1,outgt1,ingt2\nchannel id=in3 desc=in3 events=ingt0,outlt1,ingt1,outgt1,ingt2\nchannel id=in4 desc=in4 events=ingt0,outlt1,ingt1,outgt1,ingt2\nchannel id=in5 desc=in5 events=ingt0,outlt1,ingt1,outgt1,ingt2\nchannel id=in6 desc=in6 events=ingt0,outlt1,ingt1,outgt1,ingt2\nchannel id=in7 desc=in7 events=ingt0,outlt1,ingt1,outgt1,ingt2\nchannel id=in8 desc=in8 events=ingt0,outlt1,ingt1,outgt1,ingt2\nchannel id=in9 desc=in9 events=ingt0,outlt1,ingt1,outgt1,ingt2\nchannel id=in10 desc=in10 events=ingt0,outlt1,ingt1,outgt1,ingt2\nchannel id=in11 desc=in11 events=ingt0,outlt1,ingt1,outgt1,ingt2\nchannel id=in12 desc=in12 events=ingt0,outlt1,ingt1,outgt1,ingt2\nchannel id=in13 desc=in13 events=ingt0,outlt1,ingt1,outgt1,ingt2\nchannel id=in14 desc=in14 events=ingt0,outlt1,ingt1,outgt1,ingt2\nchannel id=in15 desc=in15 events=ingt0,outlt1,ingt1,outgt1,ingt2;\n</code></pre>"},{"location":"phc/emd_rue/","title":"Emd rue","text":"<pre><code>;\n; Generic template for emd_rue modules\n;\nmodule  id=emd_rue.&lt;addr&gt;\nchannel id=in0 desc=in0 events=ingt0,outlt1,ingt1,outgt1,ingt2\nchannel id=in1 desc=in1 events=ingt0,outlt1,ingt1,outgt1,ingt2\nchannel id=in2 desc=in2 events=ingt0,outlt1,ingt1,outgt1,ingt2\nchannel id=in3 desc=in3 events=ingt0,outlt1,ingt1,outgt1,ingt2\nchannel id=in4 desc=in4 events=ingt0,outlt1,ingt1,outgt1,ingt2\nchannel id=in5 desc=in5 events=ingt0,outlt1,ingt1,outgt1,ingt2\nchannel id=in6 desc=in6 events=ingt0,outlt1,ingt1,outgt1,ingt2\nchannel id=in7 desc=in7 events=ingt0,outlt1,ingt1,outgt1,ingt2\nchannel id=in8 desc=in8 events=ingt0,outlt1,ingt1,outgt1,ingt2\nchannel id=in9 desc=in9 events=ingt0,outlt1,ingt1,outgt1,ingt2\nchannel id=in10 desc=in10 events=ingt0,outlt1,ingt1,outgt1,ingt2\nchannel id=in11 desc=in11 events=ingt0,outlt1,ingt1,outgt1,ingt2\nchannel id=in12 desc=in12 events=ingt0,outlt1,ingt1,outgt1,ingt2\nchannel id=in13 desc=in13 events=ingt0,outlt1,ingt1,outgt1,ingt2\nchannel id=in14 desc=in14 events=ingt0,outlt1,ingt1,outgt1,ingt2\nchannel id=in15 desc=in15 events=ingt0,outlt1,ingt1,outgt1,ingt2\nchannel id=led0 desc=led0\nchannel id=led1 desc=led1\nchannel id=led2 desc=led2\nchannel id=led3 desc=led3\nchannel id=led4 desc=led4\nchannel id=led5 desc=led5\nchannel id=led6 desc=led6\nchannel id=led7 desc=led7\nchannel id=led8 desc=led8\nchannel id=led9 desc=led9\nchannel id=led10 desc=led10\nchannel id=led11 desc=led11\nchannel id=led12 desc=led12\nchannel id=led13 desc=led13\nchannel id=led14 desc=led14\nchannel id=led15 desc=led15;\n</code></pre>"},{"location":"phc/emd_tab/","title":"Emd tab","text":"<pre><code>;\n; Generic template for emd_tab modules\n;\nmodule  id=emd_tab.&lt;addr&gt;\nchannel id=in0   desc=in0  events=ingt0,outlt1,ingt1,outgt1,ingt2,out\nchannel id=in1   desc=in1  events=ingt0,outlt1,ingt1,outgt1,ingt2,out\nchannel id=in2   desc=in2  events=ingt0,outlt1,ingt1,outgt1,ingt2,out\nchannel id=in3   desc=in3  events=ingt0,outlt1,ingt1,outgt1,ingt2,out\nchannel id=in4   desc=in4  events=ingt0,outlt1,ingt1,outgt1,ingt2,out\nchannel id=in5   desc=in5  events=ingt0,outlt1,ingt1,outgt1,ingt2,out\nchannel id=in6   desc=in6  events=ingt0,outlt1,ingt1,outgt1,ingt2,out\nchannel id=in7   desc=in7  events=ingt0,outlt1,ingt1,outgt1,ingt2,out\nchannel id=in8   desc=in8  events=ingt0,outlt1,ingt1,outgt1,ingt2,out\nchannel id=in9   desc=in9  events=ingt0,outlt1,ingt1,outgt1,ingt2,out\nchannel id=in10  desc=in10 events=ingt0,outlt1,ingt1,outgt1,ingt2,out\nchannel id=in11  desc=in11 events=ingt0,outlt1,ingt1,outgt1,ingt2,out\nchannel id=in12  desc=in12 events=ingt0,outlt1,ingt1,outgt1,ingt2,out\nchannel id=in13  desc=in13 events=ingt0,outlt1,ingt1,outgt1,ingt2,out\nchannel id=in14  desc=in14 events=ingt0,outlt1,ingt1,outgt1,ingt2,out\nchannel id=in15  desc=in15 events=ingt0,outlt1,ingt1,outgt1,ingt2,out\nchannel id=led0  desc=led0\nchannel id=led1  desc=led1\nchannel id=led2  desc=led2\nchannel id=led3  desc=led3\nchannel id=led4  desc=led4\nchannel id=led5  desc=led5\nchannel id=led6  desc=led6\nchannel id=led7  desc=led7\nchannel id=led8  desc=led8\nchannel id=led9  desc=led9\nchannel id=led10 desc=led10\nchannel id=led11 desc=led11\nchannel id=led12 desc=led12\nchannel id=led13 desc=led13\nchannel id=led14 desc=led14\nchannel id=led15 desc=led15\nchannel id=fb0   desc=fb0  events=on,off,blink\nchannel id=fb1   desc=fb1  events=on,off,blink\nchannel id=fb2   desc=fb2  events=on,off,blink\nchannel id=fb3   desc=fb3  events=on,off,blink\nchannel id=fb4   desc=fb4  events=on,off,blink\nchannel id=fb5   desc=fb5  events=on,off,blink\nchannel id=fb6   desc=fb6  events=on,off,blink\nchannel id=fb7   desc=fb7  events=on,off,blink\nchannel id=fb8   desc=fb8  events=on,off,blink\nchannel id=fb9   desc=fb9  events=on,off,blink\nchannel id=fb10  desc=fb10 events=on,off,blink\nchannel id=fb11  desc=fb11 events=on,off,blink\nchannel id=fb12  desc=fb12 events=on,off,blink\nchannel id=fb13  desc=fb13 events=on,off,blink\nchannel id=fb14  desc=fb14 events=on,off,blink;\n</code></pre>"},{"location":"phc/emd_tab_2/","title":"Emd tab 2","text":"<pre><code>;\n; Generic template for emd_tab_2 modules, these take 2 consecutive addresses !!!\n;\nmodule  id=emd_tab_2.&lt;addr&gt;\nchannel id=in0   desc=in0  events=ingt0,outlt1,ingt1,outgt1,ingt2,out\nchannel id=in1   desc=in1  events=ingt0,outlt1,ingt1,outgt1,ingt2,out\nchannel id=in2   desc=in2  events=ingt0,outlt1,ingt1,outgt1,ingt2,out\nchannel id=in3   desc=in3  events=ingt0,outlt1,ingt1,outgt1,ingt2,out\nchannel id=in4   desc=in4  events=ingt0,outlt1,ingt1,outgt1,ingt2,out\nchannel id=in5   desc=in5  events=ingt0,outlt1,ingt1,outgt1,ingt2,out\nchannel id=in6   desc=in6  events=ingt0,outlt1,ingt1,outgt1,ingt2,out\nchannel id=in7   desc=in7  events=ingt0,outlt1,ingt1,outgt1,ingt2,out\nchannel id=in8   desc=in8  events=ingt0,outlt1,ingt1,outgt1,ingt2,out\nchannel id=in9   desc=in9  events=ingt0,outlt1,ingt1,outgt1,ingt2,out\nchannel id=in10  desc=in10 events=ingt0,outlt1,ingt1,outgt1,ingt2,out\nchannel id=in11  desc=in11 events=ingt0,outlt1,ingt1,outgt1,ingt2,out\nchannel id=in12  desc=in12 events=ingt0,outlt1,ingt1,outgt1,ingt2,out\nchannel id=in13  desc=in13 events=ingt0,outlt1,ingt1,outgt1,ingt2,out\nchannel id=in14  desc=in14 events=ingt0,outlt1,ingt1,outgt1,ingt2,out\nchannel id=in15  desc=in15 events=ingt0,outlt1,ingt1,outgt1,ingt2,out\nchannel id=led0  desc=led0\nchannel id=led1  desc=led1\nchannel id=led2  desc=led2\nchannel id=led3  desc=led3\nchannel id=led4  desc=led4\nchannel id=led5  desc=led5\nchannel id=led6  desc=led6\nchannel id=led7  desc=led7\nchannel id=led8  desc=led8\nchannel id=led9  desc=led9\nchannel id=led10 desc=led10\nchannel id=led11 desc=led11\nchannel id=led12 desc=led12\nchannel id=led13 desc=led13\nchannel id=led14 desc=led14\nchannel id=led15 desc=led15\nchannel id=fb0   desc=fb0  events=on,off,blink\nchannel id=fb1   desc=fb1  events=on,off,blink\nchannel id=fb2   desc=fb2  events=on,off,blink\nchannel id=fb3   desc=fb3  events=on,off,blink\nchannel id=fb4   desc=fb4  events=on,off,blink\nchannel id=fb5   desc=fb5  events=on,off,blink\nchannel id=fb6   desc=fb6  events=on,off,blink\nchannel id=fb7   desc=fb7  events=on,off,blink\nchannel id=fb8   desc=fb8  events=on,off,blink\nchannel id=fb9   desc=fb9  events=on,off,blink\nchannel id=fb10  desc=fb10 events=on,off,blink\nchannel id=fb11  desc=fb11 events=on,off,blink\nchannel id=fb12  desc=fb12 events=on,off,blink\nchannel id=fb13  desc=fb13 events=on,off,blink\nchannel id=fb14  desc=fb14 events=on,off,blink;\n\nmodule  id=emd_tab_2.&lt;addr + 1&gt;\nchannel id=in0   desc=in0  events=ingt0,outlt1,ingt1,outgt1,ingt2,out\nchannel id=in1   desc=in1  events=ingt0,outlt1,ingt1,outgt1,ingt2,out\nchannel id=in2   desc=in2  events=ingt0,outlt1,ingt1,outgt1,ingt2,out\nchannel id=in3   desc=in3  events=ingt0,outlt1,ingt1,outgt1,ingt2,out\nchannel id=in4   desc=in4  events=ingt0,outlt1,ingt1,outgt1,ingt2,out\nchannel id=in5   desc=in5  events=ingt0,outlt1,ingt1,outgt1,ingt2,out\nchannel id=in6   desc=in6  events=ingt0,outlt1,ingt1,outgt1,ingt2,out\nchannel id=in7   desc=in7  events=ingt0,outlt1,ingt1,outgt1,ingt2,out\nchannel id=in8   desc=in8  events=ingt0,outlt1,ingt1,outgt1,ingt2,out\nchannel id=in9   desc=in9  events=ingt0,outlt1,ingt1,outgt1,ingt2,out\nchannel id=in10  desc=in10 events=ingt0,outlt1,ingt1,outgt1,ingt2,out\nchannel id=in11  desc=in11 events=ingt0,outlt1,ingt1,outgt1,ingt2,out\nchannel id=in12  desc=in12 events=ingt0,outlt1,ingt1,outgt1,ingt2,out\nchannel id=in13  desc=in13 events=ingt0,outlt1,ingt1,outgt1,ingt2,out\nchannel id=in14  desc=in14 events=ingt0,outlt1,ingt1,outgt1,ingt2,out\nchannel id=in15  desc=in15 events=ingt0,outlt1,ingt1,outgt1,ingt2,out\nchannel id=led0  desc=led0\nchannel id=led1  desc=led1\nchannel id=led2  desc=led2\nchannel id=led3  desc=led3\nchannel id=led4  desc=led4\nchannel id=led5  desc=led5\nchannel id=led6  desc=led6\nchannel id=led7  desc=led7\nchannel id=led8  desc=led8\nchannel id=led9  desc=led9\nchannel id=led10 desc=led10\nchannel id=led11 desc=led11\nchannel id=led12 desc=led12\nchannel id=led13 desc=led13\nchannel id=led14 desc=led14\nchannel id=led15 desc=led15\nchannel id=fb0   desc=fb0  events=on,off,blink\nchannel id=fb1   desc=fb1  events=on,off,blink\nchannel id=fb2   desc=fb2  events=on,off,blink\nchannel id=fb3   desc=fb3  events=on,off,blink\nchannel id=fb4   desc=fb4  events=on,off,blink\nchannel id=fb5   desc=fb5  events=on,off,blink\nchannel id=fb6   desc=fb6  events=on,off,blink\nchannel id=fb7   desc=fb7  events=on,off,blink\nchannel id=fb8   desc=fb8  events=on,off,blink\nchannel id=fb9   desc=fb9  events=on,off,blink\nchannel id=fb10  desc=fb10 events=on,off,blink\nchannel id=fb11  desc=fb11 events=on,off,blink\nchannel id=fb12  desc=fb12 events=on,off,blink\nchannel id=fb13  desc=fb13 events=on,off,blink\nchannel id=fb14  desc=fb14 events=on,off,blink;\n</code></pre>"},{"location":"phc/emd_vir/","title":"Emd vir","text":"<pre><code>;\n; Generic template for emd_vir modules\n;\nmodule  id=emd_vir.&lt;addr&gt;\nchannel id=in0  desc=in0 events=ingt0,outlt1,ingt1,outgt1,ingt2\nchannel id=in1  desc=in1 events=ingt0,outlt1,ingt1,outgt1,ingt2\nchannel id=in2  desc=in2 events=ingt0,outlt1,ingt1,outgt1,ingt2\nchannel id=in3  desc=in3 events=ingt0,outlt1,ingt1,outgt1,ingt2\nchannel id=in4  desc=in4 events=ingt0,outlt1,ingt1,outgt1,ingt2\nchannel id=in5  desc=in5 events=ingt0,outlt1,ingt1,outgt1,ingt2\nchannel id=in6  desc=in6 events=ingt0,outlt1,ingt1,outgt1,ingt2\nchannel id=in7  desc=in7 events=ingt0,outlt1,ingt1,outgt1,ingt2\nchannel id=in8  desc=in8 events=ingt0,outlt1,ingt1,outgt1,ingt2\nchannel id=in9  desc=in9 events=ingt0,outlt1,ingt1,outgt1,ingt2\nchannel id=in10 desc=in10 events=ingt0,outlt1,ingt1,outgt1,ingt2\nchannel id=in11 desc=in11 events=ingt0,outlt1,ingt1,outgt1,ingt2\nchannel id=in12 desc=in12 events=ingt0,outlt1,ingt1,outgt1,ingt2\nchannel id=in13 desc=in13 events=ingt0,outlt1,ingt1,outgt1,ingt2\nchannel id=in14 desc=in14 events=ingt0,outlt1,ingt1,outgt1,ingt2\nchannel id=in15 desc=in15 events=ingt0,outlt1,ingt1,outgt1,ingt2;\n</code></pre>"},{"location":"phc/et0-2/","title":"Et0 2","text":"<pre><code>;\n; Generic template for et0-2 modules\n;\nmodule  id=et0-2.0\nchannel id=in0  desc=in0 events=ingt0,outlt1,ingt1,outgt1,ingt2,out\nchannel id=in4  desc=in4 events=ingt0,outlt1,ingt1,outgt1,ingt2,out\nchannel id=led0 desc=led0\nchannel id=led1 desc=led1\nchannel id=led2 desc=led2\nchannel id=led3 desc=led3\nchannel id=led4 desc=led4\nchannel id=led5 desc=led5\nchannel id=led6 desc=led6\nchannel id=led7 desc=led7\nchannel id=led8 desc=led8\nchannel id=fb0  desc=fb0 events=on,off,blink\nchannel id=fb1  desc=fb1 events=on,off,blink\nchannel id=fb2  desc=fb2 events=on,off,blink\nchannel id=fb3  desc=fb3 events=on,off,blink\nchannel id=fb4  desc=fb4 events=on,off,blink\nchannel id=fb5  desc=fb5 events=on,off,blink\nchannel id=fb6  desc=fb6 events=on,off,blink\nchannel id=fb7  desc=fb7 events=on,off,blink\nchannel id=fb8  desc=fb8 events=on,off,blink;\n</code></pre>"},{"location":"phc/et0-4/","title":"Et0 4","text":"<pre><code>;\n; Generic template for et0-4 modules\n;\nmodule  id=et0-4.&lt;addr&gt;\nchannel id=in0  desc=in0 events=ingt0,outlt1,ingt1,outgt1,ingt2,out\nchannel id=in2  desc=in2 events=ingt0,outlt1,ingt1,outgt1,ingt2,out\nchannel id=in4  desc=in4 events=ingt0,outlt1,ingt1,outgt1,ingt2,out\nchannel id=in6  desc=in6 events=ingt0,outlt1,ingt1,outgt1,ingt2,out\nchannel id=led0 desc=led0\nchannel id=led1 desc=led1\nchannel id=led2 desc=led2\nchannel id=led3 desc=led3\nchannel id=led4 desc=led4\nchannel id=led5 desc=led5\nchannel id=led6 desc=led6\nchannel id=led7 desc=led7\nchannel id=led8 desc=led8\nchannel id=fb0  desc=fb0 events=on,off,blink\nchannel id=fb1  desc=fb1 events=on,off,blink\nchannel id=fb2  desc=fb2 events=on,off,blink\nchannel id=fb3  desc=fb3 events=on,off,blink\nchannel id=fb4  desc=fb4 events=on,off,blink\nchannel id=fb5  desc=fb5 events=on,off,blink\nchannel id=fb6  desc=fb6 events=on,off,blink\nchannel id=fb7  desc=fb7 events=on,off,blink\nchannel id=fb8  desc=fb8 events=on,off,blink;\n</code></pre>"},{"location":"phc/et0-8/","title":"Et0 8","text":"<pre><code>;\n; Generic template for et0-8 modules\n;\nmodule  id=et0-8.&lt;addr&gt;\nchannel id=in0  desc=in0 events=ingt0,outlt1,ingt1,outgt1,ingt2,out\nchannel id=in1  desc=in1 events=ingt0,outlt1,ingt1,outgt1,ingt2,out\nchannel id=in2  desc=in2 events=ingt0,outlt1,ingt1,outgt1,ingt2,out\nchannel id=in3  desc=in3 events=ingt0,outlt1,ingt1,outgt1,ingt2,out\nchannel id=in4  desc=in4 events=ingt0,outlt1,ingt1,outgt1,ingt2,out\nchannel id=in5  desc=in5 events=ingt0,outlt1,ingt1,outgt1,ingt2,out\nchannel id=in6  desc=in6 events=ingt0,outlt1,ingt1,outgt1,ingt2,out\nchannel id=in7  desc=in7 events=ingt0,outlt1,ingt1,outgt1,ingt2,out\nchannel id=led0 desc=led0\nchannel id=led1 desc=led1\nchannel id=led2 desc=led2\nchannel id=led3 desc=led3\nchannel id=led4 desc=led4\nchannel id=led5 desc=led5\nchannel id=led6 desc=led6\nchannel id=led7 desc=led7\nchannel id=led8 desc=led8\nchannel id=fb0  desc=fb0 events=on,off,blink\nchannel id=fb1  desc=fb1 events=on,off,blink\nchannel id=fb2  desc=fb2 events=on,off,blink\nchannel id=fb3  desc=fb3 events=on,off,blink\nchannel id=fb4  desc=fb4 events=on,off,blink\nchannel id=fb5  desc=fb5 events=on,off,blink\nchannel id=fb6  desc=fb6 events=on,off,blink\nchannel id=fb7  desc=fb7 events=on,off,blink\nchannel id=fb8  desc=fb8 events=on,off,blink;\n</code></pre>"},{"location":"phc/et0-d/","title":"Et0 d","text":"<pre><code>;\n; Generic template for et0-d modules\n;\nmodule  id=et0-d.&lt;addr&gt;\nchannel id=in0 desc=in0 events=ingt0,outlt1,ingt1,outgt1,ingt2,out\nchannel id=in1 desc=in1 events=ingt0,outlt1,ingt1,outgt1,ingt2,out\nchannel id=in2 desc=in2 events=ingt0,outlt1,ingt1,outgt1,ingt2,out\nchannel id=in3 desc=in3 events=ingt0,outlt1,ingt1,outgt1,ingt2,out\nchannel id=in4 desc=in4 events=ingt0,outlt1,ingt1,outgt1,ingt2,out\nchannel id=in5 desc=in5 events=ingt0,outlt1,ingt1,outgt1,ingt2,out\nchannel id=in6 desc=in6 events=ingt0,outlt1,ingt1,outgt1,ingt2,out\nchannel id=in7 desc=in7 events=ingt0,outlt1,ingt1,outgt1,ingt2,out\nchannel id=in8 desc=in8 events=ingt0,outlt1,ingt1,outgt1,ingt2,out\nchannel id=in9 desc=in9 events=ingt0,outlt1,ingt1,outgt1,ingt2,out\nchannel id=in10 desc=in10 events=ingt0,outlt1,ingt1,outgt1,ingt2,out\nchannel id=in12 desc=in12 events=ingt0,outlt1,ingt1,outgt1,ingt2,out\nchannel id=in13 desc=in13 events=ingt0,outlt1,ingt1,outgt1,ingt2,out\nchannel id=led0 desc=led0\nchannel id=led1 desc=led1\nchannel id=led2 desc=led2\nchannel id=led3 desc=led3\nchannel id=led4 desc=led4\nchannel id=led5 desc=led5\nchannel id=led6 desc=led6\nchannel id=led7 desc=led7\nchannel id=led14 desc=led14\nchannel id=led9 desc=led9\nchannel id=led10 desc=led10\nchannel id=led11 desc=led11\nchannel id=led12 desc=led12\nchannel id=led13 desc=led13\nchannel id=fb0 desc=fb0 events=on,off,blink\nchannel id=fb1 desc=fb1 events=on,off,blink\nchannel id=fb2 desc=fb2 events=on,off,blink\nchannel id=fb3 desc=fb3 events=on,off,blink\nchannel id=fb4 desc=fb4 events=on,off,blink\nchannel id=fb5 desc=fb5 events=on,off,blink\nchannel id=fb6 desc=fb6 events=on,off,blink\nchannel id=fb7 desc=fb7 events=on,off,blink\nchannel id=fb14 desc=fb14 events=on,off,blink;\n</code></pre>"},{"location":"phc/et1-2/","title":"Et1 2","text":"<pre><code>;\n; Generic template for et1-2 modules\n;\nmodule  id=et1-2.&lt;addr&gt;\nchannel id=in0 desc=in0 events=ingt0,outlt1,ingt1,outgt1,ingt2,out\nchannel id=in4 desc=in4 events=ingt0,outlt1,ingt1,outgt1,ingt2,out\nchannel id=led0 desc=led0\nchannel id=led1 desc=led1\nchannel id=led2 desc=led2\nchannel id=led3 desc=led3\nchannel id=led4 desc=led4\nchannel id=led5 desc=led5\nchannel id=led6 desc=led6\nchannel id=led7 desc=led7\nchannel id=led8 desc=led8\nchannel id=fb0 desc=fb0 events=on,off,blink\nchannel id=fb1 desc=fb1 events=on,off,blink\nchannel id=fb2 desc=fb2 events=on,off,blink\nchannel id=fb3 desc=fb3 events=on,off,blink\nchannel id=fb4 desc=fb4 events=on,off,blink\nchannel id=fb5 desc=fb5 events=on,off,blink\nchannel id=fb6 desc=fb6 events=on,off,blink\nchannel id=fb7 desc=fb7 events=on,off,blink\nchannel id=fb8 desc=fb8 events=on,off,blink;\n</code></pre>"},{"location":"phc/et1-4/","title":"Et1 4","text":"<pre><code>;\n; Generic template for et1-4 modules\n;\nmodule  id=et1-4.&lt;addr&gt;\nchannel id=in0 desc=in0 events=ingt0,outlt1,ingt1,outgt1,ingt2,out\nchannel id=in2 desc=in2 events=ingt0,outlt1,ingt1,outgt1,ingt2,out\nchannel id=in4 desc=in4 events=ingt0,outlt1,ingt1,outgt1,ingt2,out\nchannel id=in6 desc=in6 events=ingt0,outlt1,ingt1,outgt1,ingt2,out\nchannel id=led0 desc=led0\nchannel id=led1 desc=led1\nchannel id=led2 desc=led2\nchannel id=led3 desc=led3\nchannel id=led4 desc=led4\nchannel id=led5 desc=led5\nchannel id=led6 desc=led6\nchannel id=led7 desc=led7\nchannel id=led8 desc=led8\nchannel id=fb0 desc=fb0 events=on,off,blink\nchannel id=fb1 desc=fb1 events=on,off,blink\nchannel id=fb2 desc=fb2 events=on,off,blink\nchannel id=fb3 desc=fb3 events=on,off,blink\nchannel id=fb4 desc=fb4 events=on,off,blink\nchannel id=fb5 desc=fb5 events=on,off,blink\nchannel id=fb6 desc=fb6 events=on,off,blink\nchannel id=fb7 desc=fb7 events=on,off,blink\nchannel id=fb8 desc=fb8 events=on,off,blink;\n</code></pre>"},{"location":"phc/et1-8/","title":"Et1 8","text":"<pre><code>;\n; Generic template for et1-8 modules\n;\nmodule  id=et1-8.&lt;addr&gt;\nchannel id=in0 desc=in0 events=ingt0,outlt1,ingt1,outgt1,ingt2,out\nchannel id=in1 desc=in1 events=ingt0,outlt1,ingt1,outgt1,ingt2,out\nchannel id=in2 desc=in2 events=ingt0,outlt1,ingt1,outgt1,ingt2,out\nchannel id=in3 desc=in3 events=ingt0,outlt1,ingt1,outgt1,ingt2,out\nchannel id=in4 desc=in4 events=ingt0,outlt1,ingt1,outgt1,ingt2,out\nchannel id=in5 desc=in5 events=ingt0,outlt1,ingt1,outgt1,ingt2,out\nchannel id=in6 desc=in6 events=ingt0,outlt1,ingt1,outgt1,ingt2,out\nchannel id=in7 desc=in7 events=ingt0,outlt1,ingt1,outgt1,ingt2,out\nchannel id=led0 desc=led0\nchannel id=led1 desc=led1\nchannel id=led2 desc=led2\nchannel id=led3 desc=led3\nchannel id=led4 desc=led4\nchannel id=led5 desc=led5\nchannel id=led6 desc=led6\nchannel id=led7 desc=led7\nchannel id=led8 desc=led8\nchannel id=fb0 desc=fb0 events=on,off,blink\nchannel id=fb1 desc=fb1 events=on,off,blink\nchannel id=fb2 desc=fb2 events=on,off,blink\nchannel id=fb3 desc=fb3 events=on,off,blink\nchannel id=fb4 desc=fb4 events=on,off,blink\nchannel id=fb5 desc=fb5 events=on,off,blink\nchannel id=fb6 desc=fb6 events=on,off,blink\nchannel id=fb7 desc=fb7 events=on,off,blink\nchannel id=fb8 desc=fb8 events=on,off,blink;\n</code></pre>"},{"location":"phc/et1-d/","title":"Et1 d","text":"<pre><code>;\n; Generic template for et1-d modules\n;\nmodule  id=et1-d.&lt;addr&gt;\nchannel id=in0   desc=in0  events=ingt0,outlt1,ingt1,outgt1,ingt2,out\nchannel id=in1   desc=in1  events=ingt0,outlt1,ingt1,outgt1,ingt2,out\nchannel id=in2   desc=in2  events=ingt0,outlt1,ingt1,outgt1,ingt2,out\nchannel id=in3   desc=in3  events=ingt0,outlt1,ingt1,outgt1,ingt2,out\nchannel id=in4   desc=in4  events=ingt0,outlt1,ingt1,outgt1,ingt2,out\nchannel id=in5   desc=in5  events=ingt0,outlt1,ingt1,outgt1,ingt2,out\nchannel id=in6   desc=in6  events=ingt0,outlt1,ingt1,outgt1,ingt2,out\nchannel id=in7   desc=in7  events=ingt0,outlt1,ingt1,outgt1,ingt2,out\nchannel id=in8   desc=in8  events=ingt0,outlt1,ingt1,outgt1,ingt2,out\nchannel id=in9   desc=in9  events=ingt0,outlt1,ingt1,outgt1,ingt2,out\nchannel id=in10  desc=in10 events=ingt0,outlt1,ingt1,outgt1,ingt2,out\nchannel id=in12  desc=in12 events=ingt0,outlt1,ingt1,outgt1,ingt2,out\nchannel id=in13  desc=in13 events=ingt0,outlt1,ingt1,outgt1,ingt2,out\nchannel id=led0  desc=led0\nchannel id=led1  desc=led1\nchannel id=led2  desc=led2\nchannel id=led3  desc=led3\nchannel id=led4  desc=led4\nchannel id=led5  desc=led5\nchannel id=led6  desc=led6\nchannel id=led7  desc=led7\nchannel id=led14 desc=led14\nchannel id=led9  desc=led9\nchannel id=led10 desc=led10\nchannel id=led11 desc=led11\nchannel id=led12 desc=led12\nchannel id=led13 desc=led13\nchannel id=fb0   desc=fb0  events=on,off,blink\nchannel id=fb1   desc=fb1  events=on,off,blink\nchannel id=fb2   desc=fb2  events=on,off,blink\nchannel id=fb3   desc=fb3  events=on,off,blink\nchannel id=fb4   desc=fb4  events=on,off,blink\nchannel id=fb5   desc=fb5  events=on,off,blink\nchannel id=fb6   desc=fb6  events=on,off,blink\nchannel id=fb7   desc=fb7  events=on,off,blink\nchannel id=fb14  desc=fb14 events=on,off,blink;\n</code></pre>"},{"location":"phc/jrm/","title":"Jrm","text":"<pre><code>;\n; Generic template for jrm modules\n;\nmodule  id=jrm.&lt;addr&gt;\nchannel id=out0 desc=out0\nchannel id=out1 desc=out1\nchannel id=out2 desc=out2\nchannel id=out3 desc=out3\nchannel id=out4 desc=out4\nchannel id=out5 desc=out5\nchannel id=out6 desc=out6\nchannel id=out7 desc=out7\nchannel id=fb0  desc=fb0 events=upon,downon,upoff,downoff\nchannel id=fb1  desc=fb1 events=upon,downon,upoff,downoff\nchannel id=fb2  desc=fb2 events=upon,downon,upoff,downoff\nchannel id=fb3  desc=fb3 events=upon,downon,upoff,downoff\nchannel id=fb4  desc=fb4 events=timeron,timerabort,timeroff\nchannel id=fb5  desc=fb5 events=timeron,timerabort,timeroff\nchannel id=fb6  desc=fb6 events=timeron,timerabort,timeroff\nchannel id=fb7  desc=fb7 events=timeron,timerabort,timeroff;\n</code></pre>"},{"location":"phc/jrm24/","title":"Jrm24","text":"<pre><code>;\n; Generic template for jrm24 modules\n;\nmodule  id=jrm24.&lt;addr&gt;\nchannel id=out0 desc=out0\nchannel id=out1 desc=out1\nchannel id=out2 desc=out2\nchannel id=out3 desc=out3\nchannel id=out4 desc=out4\nchannel id=out5 desc=out5\nchannel id=out6 desc=out6\nchannel id=out7 desc=out7\nchannel id=fb0  desc=fb0 events=upon,downon,upoff,downoff\nchannel id=fb1  desc=fb1 events=upon,downon,upoff,downoff\nchannel id=fb2  desc=fb2 events=upon,downon,upoff,downoff\nchannel id=fb3  desc=fb3 events=upon,downon,upoff,downoff\nchannel id=fb4  desc=fb4 events=timeron,timerabort,timeroff\nchannel id=fb5  desc=fb5 events=timeron,timerabort,timeroff\nchannel id=fb6  desc=fb6 events=timeron,timerabort,timeroff\nchannel id=fb7  desc=fb7 events=timeron,timerabort,timeroff;\n</code></pre>"},{"location":"phc/mcc_2/","title":"Mcc 2","text":"<pre><code>;\n; Generic template for mcc_2 modules\n;\nmodule  id=mcc_2.&lt;addr&gt;\nchannel id=in0   desc=in0 events=ingt0,outlt1,ingt1,outgt1,ingt2,out\nchannel id=in1   desc=in1 events=ingt0,outlt1,ingt1,outgt1,ingt2,out\nchannel id=in2   desc=in2 events=ingt0,outlt1,ingt1,outgt1,ingt2,out\nchannel id=in3   desc=in3 events=ingt0,outlt1,ingt1,outgt1,ingt2,out\nchannel id=in4   desc=in4 events=ingt0,outlt1,ingt1,outgt1,ingt2,out\nchannel id=in5   desc=in5 events=ingt0,outlt1,ingt1,outgt1,ingt2,out\nchannel id=in6   desc=in6 events=ingt0,outlt1,ingt1,outgt1,ingt2,out\nchannel id=in7   desc=in7 events=ingt0,outlt1,ingt1,outgt1,ingt2,out\nchannel id=in8   desc=in8 events=ingt0,outlt1,ingt1,outgt1,ingt2,out\nchannel id=in9   desc=in9 events=ingt0,outlt1,ingt1,outgt1,ingt2,out\nchannel id=in10  desc=in10 events=ingt0,outlt1,ingt1,outgt1,ingt2,out\nchannel id=in11  desc=in11 events=ingt0,outlt1,ingt1,outgt1,ingt2,out\nchannel id=in12  desc=in12 events=ingt0,outlt1,ingt1,outgt1,ingt2,out\nchannel id=in13  desc=in13 events=ingt0,outlt1,ingt1,outgt1,ingt2,out\nchannel id=in14  desc=in14 events=ingt0,outlt1,ingt1,outgt1,ingt2,out\nchannel id=in15  desc=in15 events=ingt0,outlt1,ingt1,outgt1,ingt2,out\nchannel id=led0  desc=led0\nchannel id=led1  desc=led1\nchannel id=led2  desc=led2\nchannel id=led3  desc=led3\nchannel id=led4  desc=led4\nchannel id=led5  desc=led5\nchannel id=led6  desc=led6\nchannel id=led7  desc=led7\nchannel id=led8  desc=led8\nchannel id=led9  desc=led9\nchannel id=led10 desc=led10\nchannel id=led11 desc=led11\nchannel id=led12 desc=led12\nchannel id=led13 desc=led13\nchannel id=led14 desc=led14\nchannel id=led15 desc=led15\nchannel id=fb0   desc=fb0 events=on,off,blink\nchannel id=fb1   desc=fb1 events=on,off,blink\nchannel id=fb2   desc=fb2 events=on,off,blink\nchannel id=fb3   desc=fb3 events=on,off,blink\nchannel id=fb4   desc=fb4 events=on,off,blink\nchannel id=fb5   desc=fb5 events=on,off,blink\nchannel id=fb6   desc=fb6 events=on,off,blink\nchannel id=fb7   desc=fb7 events=on,off,blink\nchannel id=fb8   desc=fb8 events=on,off,blink\nchannel id=fb9   desc=fb9 events=on,off,blink\nchannel id=fb10  desc=fb10 events=on,off,blink\nchannel id=fb11  desc=fb11 events=on,off,blink\nchannel id=fb12  desc=fb12 events=on,off,blink\nchannel id=fb13  desc=fb13 events=on,off,blink\nchannel id=fb14  desc=fb14 events=on,off,blink;\n\nmodule  id=mcc_2.&lt;addr + 1&gt;\nchannel id=in0   desc=in0 events=ingt0,outlt1,ingt1,outgt1,ingt2,out\nchannel id=in1   desc=in1 events=ingt0,outlt1,ingt1,outgt1,ingt2,out\nchannel id=in2   desc=in2 events=ingt0,outlt1,ingt1,outgt1,ingt2,out\nchannel id=in3   desc=in3 events=ingt0,outlt1,ingt1,outgt1,ingt2,out\nchannel id=in4   desc=in4 events=ingt0,outlt1,ingt1,outgt1,ingt2,out\nchannel id=in5   desc=in5 events=ingt0,outlt1,ingt1,outgt1,ingt2,out\nchannel id=in6   desc=in6 events=ingt0,outlt1,ingt1,outgt1,ingt2,out\nchannel id=in7   desc=in7 events=ingt0,outlt1,ingt1,outgt1,ingt2,out\nchannel id=in8   desc=in8 events=ingt0,outlt1,ingt1,outgt1,ingt2,out\nchannel id=in9   desc=in9 events=ingt0,outlt1,ingt1,outgt1,ingt2,out\nchannel id=in10  desc=in10 events=ingt0,outlt1,ingt1,outgt1,ingt2,out\nchannel id=in11  desc=in11 events=ingt0,outlt1,ingt1,outgt1,ingt2,out\nchannel id=in12  desc=in12 events=ingt0,outlt1,ingt1,outgt1,ingt2,out\nchannel id=in13  desc=in13 events=ingt0,outlt1,ingt1,outgt1,ingt2,out\nchannel id=in14  desc=in14 events=ingt0,outlt1,ingt1,outgt1,ingt2,out\nchannel id=in15  desc=in15 events=ingt0,outlt1,ingt1,outgt1,ingt2,out\nchannel id=led0  desc=led0\nchannel id=led1  desc=led1\nchannel id=led2  desc=led2\nchannel id=led3  desc=led3\nchannel id=led4  desc=led4\nchannel id=led5  desc=led5\nchannel id=led6  desc=led6\nchannel id=led7  desc=led7\nchannel id=led8  desc=led8\nchannel id=led9  desc=led9\nchannel id=led10 desc=led10\nchannel id=led11 desc=led11\nchannel id=led12 desc=led12\nchannel id=led13 desc=led13\nchannel id=led14 desc=led14\nchannel id=led15 desc=led15\nchannel id=fb0   desc=fb0 events=on,off,blink\nchannel id=fb1   desc=fb1 events=on,off,blink\nchannel id=fb2   desc=fb2 events=on,off,blink\nchannel id=fb3   desc=fb3 events=on,off,blink\nchannel id=fb4   desc=fb4 events=on,off,blink\nchannel id=fb5   desc=fb5 events=on,off,blink\nchannel id=fb6   desc=fb6 events=on,off,blink\nchannel id=fb7   desc=fb7 events=on,off,blink\nchannel id=fb8   desc=fb8 events=on,off,blink\nchannel id=fb9   desc=fb9 events=on,off,blink\nchannel id=fb10  desc=fb10 events=on,off,blink\nchannel id=fb11  desc=fb11 events=on,off,blink\nchannel id=fb12  desc=fb12 events=on,off,blink\nchannel id=fb13  desc=fb13 events=on,off,blink\nchannel id=fb14  desc=fb14 events=on,off,blink;\n</code></pre>"},{"location":"phc/mfm_bwm/","title":"Mfm bwm","text":"<pre><code>;\n; Generic template for mfm_bwm modules\n;\nmodule  id=mfm_bwm.&lt;addr&gt;\nchannel id=in8 desc=in8 events=ingt0,outlt1,ingt1,outgt1,ingt2,out\nchannel id=in9 desc=in9 events=ingt0,outlt1,ingt1,outgt1,ingt2,out\nchannel id=in10 desc=in10 events=ingt0,outlt1,ingt1,outgt1,ingt2,out\nchannel id=in11 desc=in11 events=ingt0,outlt1,ingt1,outgt1,ingt2,out\nchannel id=im0 desc=im0 events=stop,start\nchannel id=im1 desc=im1 events=stop,start\nchannel id=il3 desc=il3 events=dark,bright;\n</code></pre>"},{"location":"phc/mfm_funk/","title":"Mfm funk","text":"<pre><code>;\n; Generic template for mfm_funk modules\n;\nmodule  id=mfm_funk.&lt;addr&gt;\nchannel id=in0  desc=in0  events=Oingt0,Iingt0,Oout,Iout\nchannel id=in1  desc=in1  events=Oingt0,Iingt0,Oout,Iout\nchannel id=in2  desc=in2  events=Oingt0,Iingt0,Oout,Iout\nchannel id=in3  desc=in3  events=Oingt0,Iingt0,Oout,Iout\nchannel id=in4  desc=in4  events=Oingt0,Iingt0,Oout,Iout\nchannel id=in5  desc=in5  events=Oingt0,Iingt0,Oout,Iout\nchannel id=in6  desc=in6  events=Oingt0,Iingt0,Oout,Iout\nchannel id=in7  desc=in7  events=Oingt0,Iingt0,Oout,Iout\nchannel id=in8  desc=in8  events=Oingt0,Iingt0,Oout,Iout\nchannel id=in9  desc=in9  events=Oingt0,Iingt0,Oout,Iout\nchannel id=in10 desc=in10 events=Oingt0,Iingt0,Oout,Iout\nchannel id=in11 desc=in11 events=Oingt0,Iingt0,Oout,Iout\nchannel id=in12 desc=in12 events=Oingt0,Iingt0,Oout,Iout\nchannel id=in13 desc=in13 events=Oingt0,Iingt0,Oout,Iout\nchannel id=in14 desc=in14 events=Oingt0,Iingt0,Oout,Iout\nchannel id=in15 desc=in15 events=Oingt0,Iingt0,Oout,Iout;\n</code></pre>"},{"location":"phc/mfm_funk1/","title":"Mfm funk1","text":"<pre><code>;\n; Generic template for mfm_funk1 modules\n;\nmodule  id=mfm_funk1.&lt;addr&gt;\nchannel id=in0   desc=in0  events=Oingt0,Iingt0,Oout,Iout\nchannel id=in1   desc=in1  events=Oingt0,Iingt0,Oout,Iout\nchannel id=in2   desc=in2  events=Oingt0,Iingt0,Oout,Iout\nchannel id=in3   desc=in3  events=Oingt0,Iingt0,Oout,Iout\nchannel id=in4   desc=in4  events=Oingt0,Iingt0,Oout,Iout\nchannel id=in5   desc=in5  events=Oingt0,Iingt0,Oout,Iout\nchannel id=in6   desc=in6  events=Oingt0,Iingt0,Oout,Iout\nchannel id=in7   desc=in7  events=Oingt0,Iingt0,Oout,Iout\nchannel id=in8   desc=in8  events=Oingt0,Iingt0,Oout,Iout\nchannel id=in9   desc=in9  events=Oingt0,Iingt0,Oout,Iout\nchannel id=in10  desc=in10 events=Oingt0,Iingt0,Oout,Iout\nchannel id=in11  desc=in11 events=Oingt0,Iingt0,Oout,Iout\nchannel id=in12  desc=in12 events=Oingt0,Iingt0,Oout,Iout\nchannel id=in13  desc=in13 events=Oingt0,Iingt0,Oout,Iout\nchannel id=in14  desc=in14 events=Oingt0,Iingt0,Oout,Iout\nchannel id=in15  desc=in15 events=Oingt0,Iingt0,Oout,Iout\nchannel id=out0  desc=out0\nchannel id=out1  desc=out1\nchannel id=out2  desc=out2\nchannel id=out3  desc=out3\nchannel id=out4  desc=out4\nchannel id=out5  desc=out5\nchannel id=out6  desc=out6\nchannel id=out7  desc=out7\nchannel id=out8  desc=out8\nchannel id=out9  desc=out9\nchannel id=out10 desc=out10\nchannel id=out11 desc=out11\nchannel id=out12 desc=out12\nchannel id=out13 desc=out13\nchannel id=out14 desc=out14\nchannel id=out15 desc=out15;\n</code></pre>"},{"location":"phc/mfm_funk2/","title":"Mfm funk2","text":"<pre><code>;\n; Generic template for mfm_funk2 modules, these take 8 consecutive addresses !!!\n;\nmodule  id=mfm_funk2.&lt;addr&gt;\nchannel id=in0   desc=in0  events=Oingt0,Iingt0,Oout,Iout,Ooutlt1,Oingt1,Ooutgt1,Oingt2,Ioutlt1,Iingt1,Ioutgt1,Iingt2\nchannel id=in1   desc=in1  events=Oingt0,Iingt0,Oout,Iout,Ooutlt1,Oingt1,Ooutgt1,Oingt2,Ioutlt1,Iingt1,Ioutgt1,Iingt2\nchannel id=in2   desc=in2  events=Oingt0,Iingt0,Oout,Iout,Ooutlt1,Oingt1,Ooutgt1,Oingt2,Ioutlt1,Iingt1,Ioutgt1,Iingt2\nchannel id=in3   desc=in3  events=Oingt0,Iingt0,Oout,Iout,Ooutlt1,Oingt1,Ooutgt1,Oingt2,Ioutlt1,Iingt1,Ioutgt1,Iingt2\nchannel id=in4   desc=in4  events=Oingt0,Iingt0,Oout,Iout,Ooutlt1,Oingt1,Ooutgt1,Oingt2,Ioutlt1,Iingt1,Ioutgt1,Iingt2\nchannel id=in5   desc=in5  events=Oingt0,Iingt0,Oout,Iout,Ooutlt1,Oingt1,Ooutgt1,Oingt2,Ioutlt1,Iingt1,Ioutgt1,Iingt2\nchannel id=in6   desc=in6  events=Oingt0,Iingt0,Oout,Iout,Ooutlt1,Oingt1,Ooutgt1,Oingt2,Ioutlt1,Iingt1,Ioutgt1,Iingt2\nchannel id=in7   desc=in7  events=Oingt0,Iingt0,Oout,Iout,Ooutlt1,Oingt1,Ooutgt1,Oingt2,Ioutlt1,Iingt1,Ioutgt1,Iingt2\nchannel id=in8   desc=in8  events=Oingt0,Iingt0,Oout,Iout,Ooutlt1,Oingt1,Ooutgt1,Oingt2,Ioutlt1,Iingt1,Ioutgt1,Iingt2\nchannel id=in9   desc=in9  events=Oingt0,Iingt0,Oout,Iout,Ooutlt1,Oingt1,Ooutgt1,Oingt2,Ioutlt1,Iingt1,Ioutgt1,Iingt2\nchannel id=in10  desc=in10 events=Oingt0,Iingt0,Oout,Iout,Ooutlt1,Oingt1,Ooutgt1,Oingt2,Ioutlt1,Iingt1,Ioutgt1,Iingt2\nchannel id=in11  desc=in11 events=Oingt0,Iingt0,Oout,Iout,Ooutlt1,Oingt1,Ooutgt1,Oingt2,Ioutlt1,Iingt1,Ioutgt1,Iingt2\nchannel id=in12  desc=in12 events=Oingt0,Iingt0,Oout,Iout,Ooutlt1,Oingt1,Ooutgt1,Oingt2,Ioutlt1,Iingt1,Ioutgt1,Iingt2\nchannel id=in13  desc=in13 events=Oingt0,Iingt0,Oout,Iout,Ooutlt1,Oingt1,Ooutgt1,Oingt2,Ioutlt1,Iingt1,Ioutgt1,Iingt2\nchannel id=in14  desc=in14 events=Oingt0,Iingt0,Oout,Iout,Ooutlt1,Oingt1,Ooutgt1,Oingt2,Ioutlt1,Iingt1,Ioutgt1,Iingt2\nchannel id=out0  desc=out0\nchannel id=out1  desc=out1\nchannel id=out2  desc=out2\nchannel id=out3  desc=out3\nchannel id=out4  desc=out4\nchannel id=out5  desc=out5\nchannel id=out6  desc=out6\nchannel id=out7  desc=out7\nchannel id=out8  desc=out8\nchannel id=out9  desc=out9\nchannel id=out10 desc=out10\nchannel id=out11 desc=out11\nchannel id=out12 desc=out12\nchannel id=out13 desc=out13\nchannel id=out14 desc=out14\nchannel id=fb0   desc=fb0  events=on,off\nchannel id=fb1   desc=fb1  events=on,off\nchannel id=fb2   desc=fb2  events=on,off\nchannel id=fb3   desc=fb3  events=on,off\nchannel id=fb4   desc=fb4  events=on,off\nchannel id=fb5   desc=fb5  events=on,off\nchannel id=fb6   desc=fb6  events=on,off\nchannel id=fb7   desc=fb7  events=on,off\nchannel id=fb8   desc=fb8  events=on,off\nchannel id=fb9   desc=fb9  events=on,off\nchannel id=fb10  desc=fb10 events=on,off\nchannel id=fb11  desc=fb11 events=on,off\nchannel id=fb12  desc=fb12 events=on,off\nchannel id=fb13  desc=fb13 events=on,off\nchannel id=fb14  desc=fb14 events=on,off;\n\nmodule  id=mfm_funk2.&lt;addr + 1&gt;\nchannel id=in0   desc=in0  events=Oingt0,Iingt0,Oout,Iout,Ooutlt1,Oingt1,Ooutgt1,Oingt2,Ioutlt1,Iingt1,Ioutgt1,Iingt2\nchannel id=in1   desc=in1  events=Oingt0,Iingt0,Oout,Iout,Ooutlt1,Oingt1,Ooutgt1,Oingt2,Ioutlt1,Iingt1,Ioutgt1,Iingt2\nchannel id=in2   desc=in2  events=Oingt0,Iingt0,Oout,Iout,Ooutlt1,Oingt1,Ooutgt1,Oingt2,Ioutlt1,Iingt1,Ioutgt1,Iingt2\nchannel id=in3   desc=in3  events=Oingt0,Iingt0,Oout,Iout,Ooutlt1,Oingt1,Ooutgt1,Oingt2,Ioutlt1,Iingt1,Ioutgt1,Iingt2\nchannel id=in4   desc=in4  events=Oingt0,Iingt0,Oout,Iout,Ooutlt1,Oingt1,Ooutgt1,Oingt2,Ioutlt1,Iingt1,Ioutgt1,Iingt2\nchannel id=in5   desc=in5  events=Oingt0,Iingt0,Oout,Iout,Ooutlt1,Oingt1,Ooutgt1,Oingt2,Ioutlt1,Iingt1,Ioutgt1,Iingt2\nchannel id=in6   desc=in6  events=Oingt0,Iingt0,Oout,Iout,Ooutlt1,Oingt1,Ooutgt1,Oingt2,Ioutlt1,Iingt1,Ioutgt1,Iingt2\nchannel id=in7   desc=in7  events=Oingt0,Iingt0,Oout,Iout,Ooutlt1,Oingt1,Ooutgt1,Oingt2,Ioutlt1,Iingt1,Ioutgt1,Iingt2\nchannel id=in8   desc=in8  events=Oingt0,Iingt0,Oout,Iout,Ooutlt1,Oingt1,Ooutgt1,Oingt2,Ioutlt1,Iingt1,Ioutgt1,Iingt2\nchannel id=in9   desc=in9  events=Oingt0,Iingt0,Oout,Iout,Ooutlt1,Oingt1,Ooutgt1,Oingt2,Ioutlt1,Iingt1,Ioutgt1,Iingt2\nchannel id=in10  desc=in10 events=Oingt0,Iingt0,Oout,Iout,Ooutlt1,Oingt1,Ooutgt1,Oingt2,Ioutlt1,Iingt1,Ioutgt1,Iingt2\nchannel id=in11  desc=in11 events=Oingt0,Iingt0,Oout,Iout,Ooutlt1,Oingt1,Ooutgt1,Oingt2,Ioutlt1,Iingt1,Ioutgt1,Iingt2\nchannel id=in12  desc=in12 events=Oingt0,Iingt0,Oout,Iout,Ooutlt1,Oingt1,Ooutgt1,Oingt2,Ioutlt1,Iingt1,Ioutgt1,Iingt2\nchannel id=in13  desc=in13 events=Oingt0,Iingt0,Oout,Iout,Ooutlt1,Oingt1,Ooutgt1,Oingt2,Ioutlt1,Iingt1,Ioutgt1,Iingt2\nchannel id=in14  desc=in14 events=Oingt0,Iingt0,Oout,Iout,Ooutlt1,Oingt1,Ooutgt1,Oingt2,Ioutlt1,Iingt1,Ioutgt1,Iingt2\nchannel id=out0  desc=out0\nchannel id=out1  desc=out1\nchannel id=out2  desc=out2\nchannel id=out3  desc=out3\nchannel id=out4  desc=out4\nchannel id=out5  desc=out5\nchannel id=out6  desc=out6\nchannel id=out7  desc=out7\nchannel id=out8  desc=out8\nchannel id=out9  desc=out9\nchannel id=out10 desc=out10\nchannel id=out11 desc=out11\nchannel id=out12 desc=out12\nchannel id=out13 desc=out13\nchannel id=out14 desc=out14\nchannel id=fb0   desc=fb0  events=on,off\nchannel id=fb1   desc=fb1  events=on,off\nchannel id=fb2   desc=fb2  events=on,off\nchannel id=fb3   desc=fb3  events=on,off\nchannel id=fb4   desc=fb4  events=on,off\nchannel id=fb5   desc=fb5  events=on,off\nchannel id=fb6   desc=fb6  events=on,off\nchannel id=fb7   desc=fb7  events=on,off\nchannel id=fb8   desc=fb8  events=on,off\nchannel id=fb9   desc=fb9  events=on,off\nchannel id=fb10  desc=fb10 events=on,off\nchannel id=fb11  desc=fb11 events=on,off\nchannel id=fb12  desc=fb12 events=on,off\nchannel id=fb13  desc=fb13 events=on,off\nchannel id=fb14  desc=fb14 events=on,off;\n\nmodule  id=mfm_funk2.&lt;addr + 2&gt;\nchannel id=in0   desc=in0  events=Oingt0,Iingt0,Oout,Iout,Ooutlt1,Oingt1,Ooutgt1,Oingt2,Ioutlt1,Iingt1,Ioutgt1,Iingt2\nchannel id=in1   desc=in1  events=Oingt0,Iingt0,Oout,Iout,Ooutlt1,Oingt1,Ooutgt1,Oingt2,Ioutlt1,Iingt1,Ioutgt1,Iingt2\nchannel id=in2   desc=in2  events=Oingt0,Iingt0,Oout,Iout,Ooutlt1,Oingt1,Ooutgt1,Oingt2,Ioutlt1,Iingt1,Ioutgt1,Iingt2\nchannel id=in3   desc=in3  events=Oingt0,Iingt0,Oout,Iout,Ooutlt1,Oingt1,Ooutgt1,Oingt2,Ioutlt1,Iingt1,Ioutgt1,Iingt2\nchannel id=in4   desc=in4  events=Oingt0,Iingt0,Oout,Iout,Ooutlt1,Oingt1,Ooutgt1,Oingt2,Ioutlt1,Iingt1,Ioutgt1,Iingt2\nchannel id=in5   desc=in5  events=Oingt0,Iingt0,Oout,Iout,Ooutlt1,Oingt1,Ooutgt1,Oingt2,Ioutlt1,Iingt1,Ioutgt1,Iingt2\nchannel id=in6   desc=in6  events=Oingt0,Iingt0,Oout,Iout,Ooutlt1,Oingt1,Ooutgt1,Oingt2,Ioutlt1,Iingt1,Ioutgt1,Iingt2\nchannel id=in7   desc=in7  events=Oingt0,Iingt0,Oout,Iout,Ooutlt1,Oingt1,Ooutgt1,Oingt2,Ioutlt1,Iingt1,Ioutgt1,Iingt2\nchannel id=in8   desc=in8  events=Oingt0,Iingt0,Oout,Iout,Ooutlt1,Oingt1,Ooutgt1,Oingt2,Ioutlt1,Iingt1,Ioutgt1,Iingt2\nchannel id=in9   desc=in9  events=Oingt0,Iingt0,Oout,Iout,Ooutlt1,Oingt1,Ooutgt1,Oingt2,Ioutlt1,Iingt1,Ioutgt1,Iingt2\nchannel id=in10  desc=in10 events=Oingt0,Iingt0,Oout,Iout,Ooutlt1,Oingt1,Ooutgt1,Oingt2,Ioutlt1,Iingt1,Ioutgt1,Iingt2\nchannel id=in11  desc=in11 events=Oingt0,Iingt0,Oout,Iout,Ooutlt1,Oingt1,Ooutgt1,Oingt2,Ioutlt1,Iingt1,Ioutgt1,Iingt2\nchannel id=in12  desc=in12 events=Oingt0,Iingt0,Oout,Iout,Ooutlt1,Oingt1,Ooutgt1,Oingt2,Ioutlt1,Iingt1,Ioutgt1,Iingt2\nchannel id=in13  desc=in13 events=Oingt0,Iingt0,Oout,Iout,Ooutlt1,Oingt1,Ooutgt1,Oingt2,Ioutlt1,Iingt1,Ioutgt1,Iingt2\nchannel id=in14  desc=in14 events=Oingt0,Iingt0,Oout,Iout,Ooutlt1,Oingt1,Ooutgt1,Oingt2,Ioutlt1,Iingt1,Ioutgt1,Iingt2\nchannel id=out0  desc=out0\nchannel id=out1  desc=out1\nchannel id=out2  desc=out2\nchannel id=out3  desc=out3\nchannel id=out4  desc=out4\nchannel id=out5  desc=out5\nchannel id=out6  desc=out6\nchannel id=out7  desc=out7\nchannel id=out8  desc=out8\nchannel id=out9  desc=out9\nchannel id=out10 desc=out10\nchannel id=out11 desc=out11\nchannel id=out12 desc=out12\nchannel id=out13 desc=out13\nchannel id=out14 desc=out14\nchannel id=fb0   desc=fb0  events=on,off\nchannel id=fb1   desc=fb1  events=on,off\nchannel id=fb2   desc=fb2  events=on,off\nchannel id=fb3   desc=fb3  events=on,off\nchannel id=fb4   desc=fb4  events=on,off\nchannel id=fb5   desc=fb5  events=on,off\nchannel id=fb6   desc=fb6  events=on,off\nchannel id=fb7   desc=fb7  events=on,off\nchannel id=fb8   desc=fb8  events=on,off\nchannel id=fb9   desc=fb9  events=on,off\nchannel id=fb10  desc=fb10 events=on,off\nchannel id=fb11  desc=fb11 events=on,off\nchannel id=fb12  desc=fb12 events=on,off\nchannel id=fb13  desc=fb13 events=on,off\nchannel id=fb14  desc=fb14 events=on,off;\n\nmodule  id=mfm_funk2.&lt;addr + 3&gt;\nchannel id=in0   desc=in0  events=Oingt0,Iingt0,Oout,Iout,Ooutlt1,Oingt1,Ooutgt1,Oingt2,Ioutlt1,Iingt1,Ioutgt1,Iingt2\nchannel id=in1   desc=in1  events=Oingt0,Iingt0,Oout,Iout,Ooutlt1,Oingt1,Ooutgt1,Oingt2,Ioutlt1,Iingt1,Ioutgt1,Iingt2\nchannel id=in2   desc=in2  events=Oingt0,Iingt0,Oout,Iout,Ooutlt1,Oingt1,Ooutgt1,Oingt2,Ioutlt1,Iingt1,Ioutgt1,Iingt2\nchannel id=in3   desc=in3  events=Oingt0,Iingt0,Oout,Iout,Ooutlt1,Oingt1,Ooutgt1,Oingt2,Ioutlt1,Iingt1,Ioutgt1,Iingt2\nchannel id=in4   desc=in4  events=Oingt0,Iingt0,Oout,Iout,Ooutlt1,Oingt1,Ooutgt1,Oingt2,Ioutlt1,Iingt1,Ioutgt1,Iingt2\nchannel id=in5   desc=in5  events=Oingt0,Iingt0,Oout,Iout,Ooutlt1,Oingt1,Ooutgt1,Oingt2,Ioutlt1,Iingt1,Ioutgt1,Iingt2\nchannel id=in6   desc=in6  events=Oingt0,Iingt0,Oout,Iout,Ooutlt1,Oingt1,Ooutgt1,Oingt2,Ioutlt1,Iingt1,Ioutgt1,Iingt2\nchannel id=in7   desc=in7  events=Oingt0,Iingt0,Oout,Iout,Ooutlt1,Oingt1,Ooutgt1,Oingt2,Ioutlt1,Iingt1,Ioutgt1,Iingt2\nchannel id=in8   desc=in8  events=Oingt0,Iingt0,Oout,Iout,Ooutlt1,Oingt1,Ooutgt1,Oingt2,Ioutlt1,Iingt1,Ioutgt1,Iingt2\nchannel id=in9   desc=in9  events=Oingt0,Iingt0,Oout,Iout,Ooutlt1,Oingt1,Ooutgt1,Oingt2,Ioutlt1,Iingt1,Ioutgt1,Iingt2\nchannel id=in10  desc=in10 events=Oingt0,Iingt0,Oout,Iout,Ooutlt1,Oingt1,Ooutgt1,Oingt2,Ioutlt1,Iingt1,Ioutgt1,Iingt2\nchannel id=in11  desc=in11 events=Oingt0,Iingt0,Oout,Iout,Ooutlt1,Oingt1,Ooutgt1,Oingt2,Ioutlt1,Iingt1,Ioutgt1,Iingt2\nchannel id=in12  desc=in12 events=Oingt0,Iingt0,Oout,Iout,Ooutlt1,Oingt1,Ooutgt1,Oingt2,Ioutlt1,Iingt1,Ioutgt1,Iingt2\nchannel id=in13  desc=in13 events=Oingt0,Iingt0,Oout,Iout,Ooutlt1,Oingt1,Ooutgt1,Oingt2,Ioutlt1,Iingt1,Ioutgt1,Iingt2\nchannel id=in14  desc=in14 events=Oingt0,Iingt0,Oout,Iout,Ooutlt1,Oingt1,Ooutgt1,Oingt2,Ioutlt1,Iingt1,Ioutgt1,Iingt2\nchannel id=out0  desc=out0\nchannel id=out1  desc=out1\nchannel id=out2  desc=out2\nchannel id=out3  desc=out3\nchannel id=out4  desc=out4\nchannel id=out5  desc=out5\nchannel id=out6  desc=out6\nchannel id=out7  desc=out7\nchannel id=out8  desc=out8\nchannel id=out9  desc=out9\nchannel id=out10 desc=out10\nchannel id=out11 desc=out11\nchannel id=out12 desc=out12\nchannel id=out13 desc=out13\nchannel id=out14 desc=out14\nchannel id=fb0   desc=fb0  events=on,off\nchannel id=fb1   desc=fb1  events=on,off\nchannel id=fb2   desc=fb2  events=on,off\nchannel id=fb3   desc=fb3  events=on,off\nchannel id=fb4   desc=fb4  events=on,off\nchannel id=fb5   desc=fb5  events=on,off\nchannel id=fb6   desc=fb6  events=on,off\nchannel id=fb7   desc=fb7  events=on,off\nchannel id=fb8   desc=fb8  events=on,off\nchannel id=fb9   desc=fb9  events=on,off\nchannel id=fb10  desc=fb10 events=on,off\nchannel id=fb11  desc=fb11 events=on,off\nchannel id=fb12  desc=fb12 events=on,off\nchannel id=fb13  desc=fb13 events=on,off\nchannel id=fb14  desc=fb14 events=on,off;\n\nmodule  id=mfm_funk2.&lt;addr + 4&gt;\nchannel id=in0   desc=in0  events=Oingt0,Iingt0,Oout,Iout,Ooutlt1,Oingt1,Ooutgt1,Oingt2,Ioutlt1,Iingt1,Ioutgt1,Iingt2\nchannel id=in1   desc=in1  events=Oingt0,Iingt0,Oout,Iout,Ooutlt1,Oingt1,Ooutgt1,Oingt2,Ioutlt1,Iingt1,Ioutgt1,Iingt2\nchannel id=in2   desc=in2  events=Oingt0,Iingt0,Oout,Iout,Ooutlt1,Oingt1,Ooutgt1,Oingt2,Ioutlt1,Iingt1,Ioutgt1,Iingt2\nchannel id=in3   desc=in3  events=Oingt0,Iingt0,Oout,Iout,Ooutlt1,Oingt1,Ooutgt1,Oingt2,Ioutlt1,Iingt1,Ioutgt1,Iingt2\nchannel id=in4   desc=in4  events=Oingt0,Iingt0,Oout,Iout,Ooutlt1,Oingt1,Ooutgt1,Oingt2,Ioutlt1,Iingt1,Ioutgt1,Iingt2\nchannel id=in5   desc=in5  events=Oingt0,Iingt0,Oout,Iout,Ooutlt1,Oingt1,Ooutgt1,Oingt2,Ioutlt1,Iingt1,Ioutgt1,Iingt2\nchannel id=in6   desc=in6  events=Oingt0,Iingt0,Oout,Iout,Ooutlt1,Oingt1,Ooutgt1,Oingt2,Ioutlt1,Iingt1,Ioutgt1,Iingt2\nchannel id=in7   desc=in7  events=Oingt0,Iingt0,Oout,Iout,Ooutlt1,Oingt1,Ooutgt1,Oingt2,Ioutlt1,Iingt1,Ioutgt1,Iingt2\nchannel id=in8   desc=in8  events=Oingt0,Iingt0,Oout,Iout,Ooutlt1,Oingt1,Ooutgt1,Oingt2,Ioutlt1,Iingt1,Ioutgt1,Iingt2\nchannel id=in9   desc=in9  events=Oingt0,Iingt0,Oout,Iout,Ooutlt1,Oingt1,Ooutgt1,Oingt2,Ioutlt1,Iingt1,Ioutgt1,Iingt2\nchannel id=in10  desc=in10 events=Oingt0,Iingt0,Oout,Iout,Ooutlt1,Oingt1,Ooutgt1,Oingt2,Ioutlt1,Iingt1,Ioutgt1,Iingt2\nchannel id=in11  desc=in11 events=Oingt0,Iingt0,Oout,Iout,Ooutlt1,Oingt1,Ooutgt1,Oingt2,Ioutlt1,Iingt1,Ioutgt1,Iingt2\nchannel id=in12  desc=in12 events=Oingt0,Iingt0,Oout,Iout,Ooutlt1,Oingt1,Ooutgt1,Oingt2,Ioutlt1,Iingt1,Ioutgt1,Iingt2\nchannel id=in13  desc=in13 events=Oingt0,Iingt0,Oout,Iout,Ooutlt1,Oingt1,Ooutgt1,Oingt2,Ioutlt1,Iingt1,Ioutgt1,Iingt2\nchannel id=in14  desc=in14 events=Oingt0,Iingt0,Oout,Iout,Ooutlt1,Oingt1,Ooutgt1,Oingt2,Ioutlt1,Iingt1,Ioutgt1,Iingt2\nchannel id=out0  desc=out0\nchannel id=out1  desc=out1\nchannel id=out2  desc=out2\nchannel id=out3  desc=out3\nchannel id=out4  desc=out4\nchannel id=out5  desc=out5\nchannel id=out6  desc=out6\nchannel id=out7  desc=out7\nchannel id=out8  desc=out8\nchannel id=out9  desc=out9\nchannel id=out10 desc=out10\nchannel id=out11 desc=out11\nchannel id=out12 desc=out12\nchannel id=out13 desc=out13\nchannel id=out14 desc=out14\nchannel id=fb0   desc=fb0  events=on,off\nchannel id=fb1   desc=fb1  events=on,off\nchannel id=fb2   desc=fb2  events=on,off\nchannel id=fb3   desc=fb3  events=on,off\nchannel id=fb4   desc=fb4  events=on,off\nchannel id=fb5   desc=fb5  events=on,off\nchannel id=fb6   desc=fb6  events=on,off\nchannel id=fb7   desc=fb7  events=on,off\nchannel id=fb8   desc=fb8  events=on,off\nchannel id=fb9   desc=fb9  events=on,off\nchannel id=fb10  desc=fb10 events=on,off\nchannel id=fb11  desc=fb11 events=on,off\nchannel id=fb12  desc=fb12 events=on,off\nchannel id=fb13  desc=fb13 events=on,off\nchannel id=fb14  desc=fb14 events=on,off;\n\nmodule  id=mfm_funk2.&lt;addr + 5&gt;\nchannel id=in0   desc=in0  events=Oingt0,Iingt0,Oout,Iout,Ooutlt1,Oingt1,Ooutgt1,Oingt2,Ioutlt1,Iingt1,Ioutgt1,Iingt2\nchannel id=in1   desc=in1  events=Oingt0,Iingt0,Oout,Iout,Ooutlt1,Oingt1,Ooutgt1,Oingt2,Ioutlt1,Iingt1,Ioutgt1,Iingt2\nchannel id=in2   desc=in2  events=Oingt0,Iingt0,Oout,Iout,Ooutlt1,Oingt1,Ooutgt1,Oingt2,Ioutlt1,Iingt1,Ioutgt1,Iingt2\nchannel id=in3   desc=in3  events=Oingt0,Iingt0,Oout,Iout,Ooutlt1,Oingt1,Ooutgt1,Oingt2,Ioutlt1,Iingt1,Ioutgt1,Iingt2\nchannel id=in4   desc=in4  events=Oingt0,Iingt0,Oout,Iout,Ooutlt1,Oingt1,Ooutgt1,Oingt2,Ioutlt1,Iingt1,Ioutgt1,Iingt2\nchannel id=in5   desc=in5  events=Oingt0,Iingt0,Oout,Iout,Ooutlt1,Oingt1,Ooutgt1,Oingt2,Ioutlt1,Iingt1,Ioutgt1,Iingt2\nchannel id=in6   desc=in6  events=Oingt0,Iingt0,Oout,Iout,Ooutlt1,Oingt1,Ooutgt1,Oingt2,Ioutlt1,Iingt1,Ioutgt1,Iingt2\nchannel id=in7   desc=in7  events=Oingt0,Iingt0,Oout,Iout,Ooutlt1,Oingt1,Ooutgt1,Oingt2,Ioutlt1,Iingt1,Ioutgt1,Iingt2\nchannel id=in8   desc=in8  events=Oingt0,Iingt0,Oout,Iout,Ooutlt1,Oingt1,Ooutgt1,Oingt2,Ioutlt1,Iingt1,Ioutgt1,Iingt2\nchannel id=in9   desc=in9  events=Oingt0,Iingt0,Oout,Iout,Ooutlt1,Oingt1,Ooutgt1,Oingt2,Ioutlt1,Iingt1,Ioutgt1,Iingt2\nchannel id=in10  desc=in10 events=Oingt0,Iingt0,Oout,Iout,Ooutlt1,Oingt1,Ooutgt1,Oingt2,Ioutlt1,Iingt1,Ioutgt1,Iingt2\nchannel id=in11  desc=in11 events=Oingt0,Iingt0,Oout,Iout,Ooutlt1,Oingt1,Ooutgt1,Oingt2,Ioutlt1,Iingt1,Ioutgt1,Iingt2\nchannel id=in12  desc=in12 events=Oingt0,Iingt0,Oout,Iout,Ooutlt1,Oingt1,Ooutgt1,Oingt2,Ioutlt1,Iingt1,Ioutgt1,Iingt2\nchannel id=in13  desc=in13 events=Oingt0,Iingt0,Oout,Iout,Ooutlt1,Oingt1,Ooutgt1,Oingt2,Ioutlt1,Iingt1,Ioutgt1,Iingt2\nchannel id=in14  desc=in14 events=Oingt0,Iingt0,Oout,Iout,Ooutlt1,Oingt1,Ooutgt1,Oingt2,Ioutlt1,Iingt1,Ioutgt1,Iingt2\nchannel id=out0  desc=out0\nchannel id=out1  desc=out1\nchannel id=out2  desc=out2\nchannel id=out3  desc=out3\nchannel id=out4  desc=out4\nchannel id=out5  desc=out5\nchannel id=out6  desc=out6\nchannel id=out7  desc=out7\nchannel id=out8  desc=out8\nchannel id=out9  desc=out9\nchannel id=out10 desc=out10\nchannel id=out11 desc=out11\nchannel id=out12 desc=out12\nchannel id=out13 desc=out13\nchannel id=out14 desc=out14\nchannel id=fb0   desc=fb0  events=on,off\nchannel id=fb1   desc=fb1  events=on,off\nchannel id=fb2   desc=fb2  events=on,off\nchannel id=fb3   desc=fb3  events=on,off\nchannel id=fb4   desc=fb4  events=on,off\nchannel id=fb5   desc=fb5  events=on,off\nchannel id=fb6   desc=fb6  events=on,off\nchannel id=fb7   desc=fb7  events=on,off\nchannel id=fb8   desc=fb8  events=on,off\nchannel id=fb9   desc=fb9  events=on,off\nchannel id=fb10  desc=fb10 events=on,off\nchannel id=fb11  desc=fb11 events=on,off\nchannel id=fb12  desc=fb12 events=on,off\nchannel id=fb13  desc=fb13 events=on,off\nchannel id=fb14  desc=fb14 events=on,off;\n\nmodule  id=mfm_funk2.&lt;addr + 6&gt;\nchannel id=in0   desc=in0  events=Oingt0,Iingt0,Oout,Iout,Ooutlt1,Oingt1,Ooutgt1,Oingt2,Ioutlt1,Iingt1,Ioutgt1,Iingt2\nchannel id=in1   desc=in1  events=Oingt0,Iingt0,Oout,Iout,Ooutlt1,Oingt1,Ooutgt1,Oingt2,Ioutlt1,Iingt1,Ioutgt1,Iingt2\nchannel id=in2   desc=in2  events=Oingt0,Iingt0,Oout,Iout,Ooutlt1,Oingt1,Ooutgt1,Oingt2,Ioutlt1,Iingt1,Ioutgt1,Iingt2\nchannel id=in3   desc=in3  events=Oingt0,Iingt0,Oout,Iout,Ooutlt1,Oingt1,Ooutgt1,Oingt2,Ioutlt1,Iingt1,Ioutgt1,Iingt2\nchannel id=in4   desc=in4  events=Oingt0,Iingt0,Oout,Iout,Ooutlt1,Oingt1,Ooutgt1,Oingt2,Ioutlt1,Iingt1,Ioutgt1,Iingt2\nchannel id=in5   desc=in5  events=Oingt0,Iingt0,Oout,Iout,Ooutlt1,Oingt1,Ooutgt1,Oingt2,Ioutlt1,Iingt1,Ioutgt1,Iingt2\nchannel id=in6   desc=in6  events=Oingt0,Iingt0,Oout,Iout,Ooutlt1,Oingt1,Ooutgt1,Oingt2,Ioutlt1,Iingt1,Ioutgt1,Iingt2\nchannel id=in7   desc=in7  events=Oingt0,Iingt0,Oout,Iout,Ooutlt1,Oingt1,Ooutgt1,Oingt2,Ioutlt1,Iingt1,Ioutgt1,Iingt2\nchannel id=in8   desc=in8  events=Oingt0,Iingt0,Oout,Iout,Ooutlt1,Oingt1,Ooutgt1,Oingt2,Ioutlt1,Iingt1,Ioutgt1,Iingt2\nchannel id=in9   desc=in9  events=Oingt0,Iingt0,Oout,Iout,Ooutlt1,Oingt1,Ooutgt1,Oingt2,Ioutlt1,Iingt1,Ioutgt1,Iingt2\nchannel id=in10  desc=in10 events=Oingt0,Iingt0,Oout,Iout,Ooutlt1,Oingt1,Ooutgt1,Oingt2,Ioutlt1,Iingt1,Ioutgt1,Iingt2\nchannel id=in11  desc=in11 events=Oingt0,Iingt0,Oout,Iout,Ooutlt1,Oingt1,Ooutgt1,Oingt2,Ioutlt1,Iingt1,Ioutgt1,Iingt2\nchannel id=in12  desc=in12 events=Oingt0,Iingt0,Oout,Iout,Ooutlt1,Oingt1,Ooutgt1,Oingt2,Ioutlt1,Iingt1,Ioutgt1,Iingt2\nchannel id=in13  desc=in13 events=Oingt0,Iingt0,Oout,Iout,Ooutlt1,Oingt1,Ooutgt1,Oingt2,Ioutlt1,Iingt1,Ioutgt1,Iingt2\nchannel id=in14  desc=in14 events=Oingt0,Iingt0,Oout,Iout,Ooutlt1,Oingt1,Ooutgt1,Oingt2,Ioutlt1,Iingt1,Ioutgt1,Iingt2\nchannel id=out0  desc=out0\nchannel id=out1  desc=out1\nchannel id=out2  desc=out2\nchannel id=out3  desc=out3\nchannel id=out4  desc=out4\nchannel id=out5  desc=out5\nchannel id=out6  desc=out6\nchannel id=out7  desc=out7\nchannel id=out8  desc=out8\nchannel id=out9  desc=out9\nchannel id=out10 desc=out10\nchannel id=out11 desc=out11\nchannel id=out12 desc=out12\nchannel id=out13 desc=out13\nchannel id=out14 desc=out14\nchannel id=fb0   desc=fb0  events=on,off\nchannel id=fb1   desc=fb1  events=on,off\nchannel id=fb2   desc=fb2  events=on,off\nchannel id=fb3   desc=fb3  events=on,off\nchannel id=fb4   desc=fb4  events=on,off\nchannel id=fb5   desc=fb5  events=on,off\nchannel id=fb6   desc=fb6  events=on,off\nchannel id=fb7   desc=fb7  events=on,off\nchannel id=fb8   desc=fb8  events=on,off\nchannel id=fb9   desc=fb9  events=on,off\nchannel id=fb10  desc=fb10 events=on,off\nchannel id=fb11  desc=fb11 events=on,off\nchannel id=fb12  desc=fb12 events=on,off\nchannel id=fb13  desc=fb13 events=on,off\nchannel id=fb14  desc=fb14 events=on,off;\n\nmodule  id=mfm_funk2.&lt;addr + 7&gt;\nchannel id=in0   desc=in0  events=Oingt0,Iingt0,Oout,Iout,Ooutlt1,Oingt1,Ooutgt1,Oingt2,Ioutlt1,Iingt1,Ioutgt1,Iingt2\nchannel id=in1   desc=in1  events=Oingt0,Iingt0,Oout,Iout,Ooutlt1,Oingt1,Ooutgt1,Oingt2,Ioutlt1,Iingt1,Ioutgt1,Iingt2\nchannel id=in2   desc=in2  events=Oingt0,Iingt0,Oout,Iout,Ooutlt1,Oingt1,Ooutgt1,Oingt2,Ioutlt1,Iingt1,Ioutgt1,Iingt2\nchannel id=in3   desc=in3  events=Oingt0,Iingt0,Oout,Iout,Ooutlt1,Oingt1,Ooutgt1,Oingt2,Ioutlt1,Iingt1,Ioutgt1,Iingt2\nchannel id=in4   desc=in4  events=Oingt0,Iingt0,Oout,Iout,Ooutlt1,Oingt1,Ooutgt1,Oingt2,Ioutlt1,Iingt1,Ioutgt1,Iingt2\nchannel id=in5   desc=in5  events=Oingt0,Iingt0,Oout,Iout,Ooutlt1,Oingt1,Ooutgt1,Oingt2,Ioutlt1,Iingt1,Ioutgt1,Iingt2\nchannel id=in6   desc=in6  events=Oingt0,Iingt0,Oout,Iout,Ooutlt1,Oingt1,Ooutgt1,Oingt2,Ioutlt1,Iingt1,Ioutgt1,Iingt2\nchannel id=in7   desc=in7  events=Oingt0,Iingt0,Oout,Iout,Ooutlt1,Oingt1,Ooutgt1,Oingt2,Ioutlt1,Iingt1,Ioutgt1,Iingt2\nchannel id=in8   desc=in8  events=Oingt0,Iingt0,Oout,Iout,Ooutlt1,Oingt1,Ooutgt1,Oingt2,Ioutlt1,Iingt1,Ioutgt1,Iingt2\nchannel id=in9   desc=in9  events=Oingt0,Iingt0,Oout,Iout,Ooutlt1,Oingt1,Ooutgt1,Oingt2,Ioutlt1,Iingt1,Ioutgt1,Iingt2\nchannel id=in10  desc=in10 events=Oingt0,Iingt0,Oout,Iout,Ooutlt1,Oingt1,Ooutgt1,Oingt2,Ioutlt1,Iingt1,Ioutgt1,Iingt2\nchannel id=in11  desc=in11 events=Oingt0,Iingt0,Oout,Iout,Ooutlt1,Oingt1,Ooutgt1,Oingt2,Ioutlt1,Iingt1,Ioutgt1,Iingt2\nchannel id=in12  desc=in12 events=Oingt0,Iingt0,Oout,Iout,Ooutlt1,Oingt1,Ooutgt1,Oingt2,Ioutlt1,Iingt1,Ioutgt1,Iingt2\nchannel id=in13  desc=in13 events=Oingt0,Iingt0,Oout,Iout,Ooutlt1,Oingt1,Ooutgt1,Oingt2,Ioutlt1,Iingt1,Ioutgt1,Iingt2\nchannel id=in14  desc=in14 events=Oingt0,Iingt0,Oout,Iout,Ooutlt1,Oingt1,Ooutgt1,Oingt2,Ioutlt1,Iingt1,Ioutgt1,Iingt2\nchannel id=out0  desc=out0\nchannel id=out1  desc=out1\nchannel id=out2  desc=out2\nchannel id=out3  desc=out3\nchannel id=out4  desc=out4\nchannel id=out5  desc=out5\nchannel id=out6  desc=out6\nchannel id=out7  desc=out7\nchannel id=out8  desc=out8\nchannel id=out9  desc=out9\nchannel id=out10 desc=out10\nchannel id=out11 desc=out11\nchannel id=out12 desc=out12\nchannel id=out13 desc=out13\nchannel id=out14 desc=out14\nchannel id=fb0   desc=fb0  events=on,off\nchannel id=fb1   desc=fb1  events=on,off\nchannel id=fb2   desc=fb2  events=on,off\nchannel id=fb3   desc=fb3  events=on,off\nchannel id=fb4   desc=fb4  events=on,off\nchannel id=fb5   desc=fb5  events=on,off\nchannel id=fb6   desc=fb6  events=on,off\nchannel id=fb7   desc=fb7  events=on,off\nchannel id=fb8   desc=fb8  events=on,off\nchannel id=fb9   desc=fb9  events=on,off\nchannel id=fb10  desc=fb10 events=on,off\nchannel id=fb11  desc=fb11 events=on,off\nchannel id=fb12  desc=fb12 events=on,off\nchannel id=fb13  desc=fb13 events=on,off\nchannel id=fb14  desc=fb14 events=on,off;\n</code></pre>"},{"location":"phc/obo_1/","title":"Obo 1","text":"<pre><code>;\n; Generic template for obo_1 modules\n;\nmodule  id=obo_1.&lt;addr&gt;\nchannel id=in8  desc=in8  events=ingt0,outlt1,ingt1,outgt1,ingt2,out\nchannel id=in9  desc=in9  events=ingt0,outlt1,ingt1,outgt1,ingt2,out\nchannel id=in10 desc=in10 events=ingt0,outlt1,ingt1,outgt1,ingt2,out\nchannel id=in11 desc=in11 events=ingt0,outlt1,ingt1,outgt1,ingt2,out\nchannel id=in12 desc=in12 events=ingt0,outlt1,ingt1,outgt1,ingt2,out\nchannel id=in13 desc=in13 events=ingt0,outlt1,ingt1,outgt1,ingt2,out\nchannel id=in14 desc=in14 events=ingt0,outlt1,ingt1,outgt1,ingt2,out\nchannel id=in15 desc=in15 events=ingt0,outlt1,ingt1,outgt1,ingt2,out\nchannel id=out0 desc=out0\nchannel id=out1 desc=out1\nchannel id=out2 desc=out2\nchannel id=out3 desc=out3\nchannel id=out4 desc=out4\nchannel id=out5 desc=out5\nchannel id=out6 desc=out6\nchannel id=out7 desc=out7\nchannel id=fb0  desc=fb0  events=on,off\nchannel id=fb1  desc=fb1  events=on,off\nchannel id=fb2  desc=fb2  events=on,off\nchannel id=fb3  desc=fb3  events=on,off\nchannel id=fb4  desc=fb4  events=on,off\nchannel id=fb5  desc=fb5  events=on,off\nchannel id=fb6  desc=fb6  events=timeron,timerabort,timeroff\nchannel id=fb7  desc=fb7  events=timeron,timerabort,timeroff;\n</code></pre>"},{"location":"phc/obo_2/","title":"Obo 2","text":"<pre><code>;\n; Generic template for obo_2 modules\n;\nmodule  id=obo_2.&lt;addr&gt;\nchannel id=in8  desc=in8  events=ingt0,outlt1,ingt1,outgt1,ingt2,out\nchannel id=in9  desc=in9  events=ingt0,outlt1,ingt1,outgt1,ingt2,out\nchannel id=in10 desc=in10 events=ingt0,outlt1,ingt1,outgt1,ingt2,out\nchannel id=in11 desc=in11 events=ingt0,outlt1,ingt1,outgt1,ingt2,out\nchannel id=in12 desc=in12 events=ingt0,outlt1,ingt1,outgt1,ingt2,out\nchannel id=in13 desc=in13 events=ingt0,outlt1,ingt1,outgt1,ingt2,out\nchannel id=in14 desc=in14 events=ingt0,outlt1,ingt1,outgt1,ingt2,out\nchannel id=in15 desc=in15 events=ingt0,outlt1,ingt1,outgt1,ingt2,out\nchannel id=out0 desc=out0\nchannel id=out1 desc=out1\nchannel id=out2 desc=out2\nchannel id=out3 desc=out3\nchannel id=out4 desc=out4\nchannel id=out5 desc=out5\nchannel id=out6 desc=out6\nchannel id=out7 desc=out7\nchannel id=fb0  desc=fb0  events=upon,downon,upoff,downoff\nchannel id=fb1  desc=fb1  events=upon,downon,upoff,downoff\nchannel id=fb2  desc=fb2  events=upon,downon,upoff,downoff\nchannel id=fb3  desc=fb3  events=upon,downon,upoff,downoff\nchannel id=fb4  desc=fb4  events=timeron,timerabort,timeroff\nchannel id=fb5  desc=fb5  events=timeron,timerabort,timeroff\nchannel id=fb6  desc=fb6  events=timeron,timerabort,timeroff\nchannel id=fb7  desc=fb7  events=timeron,timerabort,timeroff;\n</code></pre>"},{"location":"phc/obo_3/","title":"Obo 3","text":"<pre><code>;\n; Generic template for obo_3 modules\n;\nmodule  id=obo_3.&lt;addr&gt;\nchannel id=in8  desc=in8  events=ingt0,outlt1,ingt1,outgt1,ingt2,out\nchannel id=in9  desc=in9  events=ingt0,outlt1,ingt1,outgt1,ingt2,out\nchannel id=in10 desc=in10 events=ingt0,outlt1,ingt1,outgt1,ingt2,out\nchannel id=in11 desc=in11 events=ingt0,outlt1,ingt1,outgt1,ingt2,out\nchannel id=in12 desc=in12 events=ingt0,outlt1,ingt1,outgt1,ingt2,out\nchannel id=in13 desc=in13 events=ingt0,outlt1,ingt1,outgt1,ingt2,out\nchannel id=in14 desc=in14 events=ingt0,outlt1,ingt1,outgt1,ingt2,out\nchannel id=in15 desc=in15 events=ingt0,outlt1,ingt1,outgt1,ingt2,out\nchannel id=out0 desc=out0\nchannel id=out1 desc=out1\nchannel id=out2 desc=out2\nchannel id=out3 desc=out3\nchannel id=fb0  desc=fb0  events=on,off,dimmed,dimmedup,dimmeddown\nchannel id=fb1  desc=fb1  events=on,off,dimmed,dimmedup,dimmeddown\nchannel id=fb2  desc=fb2  events=on,off,dimmed,dimmedup,dimmeddown\nchannel id=fb3  desc=fb3  events=on,off,dimmed,dimmedup,dimmeddown;\n</code></pre>"},{"location":"phc/uem_1/","title":"Uem 1","text":"<pre><code>;\n; Generic template for uem_1 modules\n;\nmodule  id=uem_1.&lt;addr&gt;\nchannel id=in0 desc=in0 events=ingt0,outlt1,ingt1,outgt1,ingt2,out\nchannel id=in1 desc=in1 events=ingt0,outlt1,ingt1,outgt1,ingt2,out\nchannel id=in2 desc=in2 events=ingt0,outlt1,ingt1,outgt1,ingt2,out\nchannel id=in3 desc=in3 events=ingt0,outlt1,ingt1,outgt1,ingt2,out\nchannel id=in4 desc=in4 events=ingt0,outlt1,ingt1,outgt1,ingt2,out\nchannel id=in5 desc=in5 events=ingt0,outlt1,ingt1,outgt1,ingt2,out\nchannel id=in6 desc=in6 events=ingt0,outlt1,ingt1,outgt1,ingt2,out\nchannel id=in7 desc=in7 events=ingt0,outlt1,ingt1,outgt1,ingt2,out;\n</code></pre>"},{"location":"phc/uem_2/","title":"Uem 2","text":"<pre><code>;\n; Generic template for uem_2 modules\n;\nmodule  id=uem_2.&lt;addr&gt;\nchannel id=in0  desc=in0 events=ingt0,outlt1,ingt1,outgt1,ingt2,out\nchannel id=in1  desc=in1 events=ingt0,outlt1,ingt1,outgt1,ingt2,out\nchannel id=in2  desc=in2 events=ingt0,outlt1,ingt1,outgt1,ingt2,out\nchannel id=in3  desc=in3 events=ingt0,outlt1,ingt1,outgt1,ingt2,out\nchannel id=in4  desc=in4 events=ingt0,outlt1,ingt1,outgt1,ingt2,out\nchannel id=in5  desc=in5 events=ingt0,outlt1,ingt1,outgt1,ingt2,out\nchannel id=in6  desc=in6 events=ingt0,outlt1,ingt1,outgt1,ingt2,out\nchannel id=in7  desc=in7 events=ingt0,outlt1,ingt1,outgt1,ingt2,out\nchannel id=mrk0 desc=mrk0\nchannel id=mrk1 desc=mrk1\nchannel id=mrk2 desc=mrk2\nchannel id=mrk3 desc=mrk3\nchannel id=led4 desc=led4\nchannel id=led5 desc=led5\nchannel id=led6 desc=led6\nchannel id=led7 desc=led7\nchannel id=fb4  desc=fb4 events=on,off,blink\nchannel id=fb5  desc=fb5 events=on,off,blink\nchannel id=fb6  desc=fb6 events=on,off,blink\nchannel id=fb7  desc=fb7 events=on,off,blink;\n</code></pre>"},{"location":"phc/uim/","title":"Uim","text":"<pre><code>;\n; Generic template for uim modules\n;\nmodule  id=uim.&lt;addr&gt;\nchannel id=ir0  desc=ir0  events=onoffin,onoffout,upin,upout,downin,downout\nchannel id=ir1  desc=ir1  events=onoffin,onoffout,upin,upout,downin,downout\nchannel id=ir2  desc=ir2  events=onoffin,onoffout,upin,upout,downin,downout\nchannel id=ir3  desc=ir3  events=onoffin,onoffout,upin,upout,downin,downout\nchannel id=ir4  desc=ir4  events=onoffin,onoffout,upin,upout,downin,downout\nchannel id=ir5  desc=ir5  events=onoffin,onoffout,upin,upout,downin,downout\nchannel id=ir6  desc=ir6  events=onoffin,onoffout,upin,upout,downin,downout\nchannel id=in7  desc=in7  events=ingt0,outlt1,ingt1,outgt1,ingt2,out\nchannel id=in8  desc=in8  events=ingt0,outlt1,ingt1,outgt1,ingt2,out\nchannel id=in9  desc=in9  events=ingt0,outlt1,ingt1,outgt1,ingt2,out\nchannel id=in10 desc=in10 events=ingt0,outlt1,ingt1,outgt1,ingt2,out\nchannel id=in11 desc=in11 events=ingt0,outlt1,ingt1,outgt1,ingt2,out;\n</code></pre>"},{"location":"phc/utm_1/","title":"Utm 1","text":"<pre><code>;\n; Generic template for utm_1 modules\n;\nmodule  id=utm_1.&lt;addr&gt;\nchannel id=in0  desc=in0  events=ingt0,outlt1,ingt1,outgt1,ingt2,out\nchannel id=in8  desc=in8  events=ingt0,outlt1,ingt1,outgt1,ingt2,out\nchannel id=in9  desc=in9  events=ingt0,outlt1,ingt1,outgt1,ingt2,out\nchannel id=in10 desc=in10 events=ingt0,outlt1,ingt1,outgt1,ingt2,out\nchannel id=in11 desc=in11 events=ingt0,outlt1,ingt1,outgt1,ingt2,out\nchannel id=led0 desc=led0\nchannel id=led1 desc=led1;\n</code></pre>"},{"location":"phc/utm_2/","title":"Utm 2","text":"<pre><code>;\n; Generic template for utm_2 modules\n;\nmodule  id=utm_2.&lt;addr&gt;\nchannel id=in0 desc=in0 events=ingt0,outlt1,ingt1,outgt1,ingt2,out\nchannel id=in1 desc=in1 events=ingt0,outlt1,ingt1,outgt1,ingt2,out\nchannel id=in8 desc=in8 events=ingt0,outlt1,ingt1,outgt1,ingt2,out\nchannel id=in9 desc=in9 events=ingt0,outlt1,ingt1,outgt1,ingt2,out\nchannel id=in10 desc=in10 events=ingt0,outlt1,ingt1,outgt1,ingt2,out\nchannel id=in11 desc=in11 events=ingt0,outlt1,ingt1,outgt1,ingt2,out\nchannel id=led0 desc=led0\nchannel id=led1 desc=led1;\n</code></pre>"},{"location":"phc/utm_3/","title":"Utm 3","text":"<pre><code>;\n; Generic template for utm_3 modules\n;\nmodule  id=utm_3.&lt;addr&gt;\nchannel id=in0 desc=in0 events=ingt0,outlt1,ingt1,outgt1,ingt2,out\nchannel id=in1 desc=in1 events=ingt0,outlt1,ingt1,outgt1,ingt2,out\nchannel id=in2 desc=in2 events=ingt0,outlt1,ingt1,outgt1,ingt2,out\nchannel id=in3 desc=in3 events=ingt0,outlt1,ingt1,outgt1,ingt2,out\nchannel id=in8 desc=in8 events=ingt0,outlt1,ingt1,outgt1,ingt2,out\nchannel id=in9 desc=in9 events=ingt0,outlt1,ingt1,outgt1,ingt2,out\nchannel id=in10 desc=in10 events=ingt0,outlt1,ingt1,outgt1,ingt2,out\nchannel id=in11 desc=in11 events=ingt0,outlt1,ingt1,outgt1,ingt2,out;\n</code></pre>"}]}